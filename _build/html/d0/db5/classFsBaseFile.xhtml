<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe FsBaseFile</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/db5/classFsBaseFile.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pri-attribs">Attributs privés</a> &#124;
<a href="../../d6/de2/classFsBaseFile-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe FsBaseFile</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../d0/db5/classFsBaseFile.xhtml" title="FsBaseFile class.">FsBaseFile</a> class.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d44/FsFile_8h_source.xhtml">FsFile.h</a>&gt;</code></p>
<div class="dynheader">
Graphe d'héritage de FsBaseFile:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d7/d72/classFsBaseFile__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Graphe de collaboration de FsBaseFile:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d6/d07/classFsBaseFile__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:ab24dc35b5ca7acfaea22f3e565560172" id="r_ab24dc35b5ca7acfaea22f3e565560172"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab24dc35b5ca7acfaea22f3e565560172">FsBaseFile</a> ()=default</td></tr>
<tr class="separator:ab24dc35b5ca7acfaea22f3e565560172"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6034c6dfce320e2869901890398831b4" id="r_a6034c6dfce320e2869901890398831b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6034c6dfce320e2869901890398831b4">FsBaseFile</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag)</td></tr>
<tr class="separator:a6034c6dfce320e2869901890398831b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab148c0eb86197666a251a2f0a15f2a02" id="r_ab148c0eb86197666a251a2f0a15f2a02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab148c0eb86197666a251a2f0a15f2a02">~FsBaseFile</a> ()</td></tr>
<tr class="separator:ab148c0eb86197666a251a2f0a15f2a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ddaf9a50682a50bacbddf541c35b017" id="r_a6ddaf9a50682a50bacbddf541c35b017"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ddaf9a50682a50bacbddf541c35b017">FsBaseFile</a> (const <a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp;from)</td></tr>
<tr class="separator:a6ddaf9a50682a50bacbddf541c35b017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4f6d168072bb4f2a61976f621659d20" id="r_ae4f6d168072bb4f2a61976f621659d20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4f6d168072bb4f2a61976f621659d20">operator=</a> (const <a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp;from)</td></tr>
<tr class="separator:ae4f6d168072bb4f2a61976f621659d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62069a45eb05ebaae3da384d05d59523" id="r_a62069a45eb05ebaae3da384d05d59523"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a62069a45eb05ebaae3da384d05d59523">operator bool</a> () const</td></tr>
<tr class="separator:a62069a45eb05ebaae3da384d05d59523"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97de3349d1d3439ce3f09fdd47e6f397" id="r_a97de3349d1d3439ce3f09fdd47e6f397"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97de3349d1d3439ce3f09fdd47e6f397">attrib</a> ()</td></tr>
<tr class="separator:a97de3349d1d3439ce3f09fdd47e6f397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa5c87929919bd35862e0942587969d" id="r_a9aa5c87929919bd35862e0942587969d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9aa5c87929919bd35862e0942587969d">attrib</a> (uint8_t bits)</td></tr>
<tr class="separator:a9aa5c87929919bd35862e0942587969d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac7a88177eec39ec7d4709ae861d5296" id="r_aac7a88177eec39ec7d4709ae861d5296"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac7a88177eec39ec7d4709ae861d5296">available</a> () const</td></tr>
<tr class="separator:aac7a88177eec39ec7d4709ae861d5296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ef5e33a8d4c9db1a5b212e15fb7da4" id="r_a51ef5e33a8d4c9db1a5b212e15fb7da4"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a51ef5e33a8d4c9db1a5b212e15fb7da4">available64</a> () const</td></tr>
<tr class="separator:a51ef5e33a8d4c9db1a5b212e15fb7da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a936fc1e3fb13a6ae1352d027bf0a70f7" id="r_a936fc1e3fb13a6ae1352d027bf0a70f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a936fc1e3fb13a6ae1352d027bf0a70f7">clearWriteError</a> ()</td></tr>
<tr class="separator:a936fc1e3fb13a6ae1352d027bf0a70f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa669c695a839e68e417fb15eebe3de13" id="r_aa669c695a839e68e417fb15eebe3de13"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa669c695a839e68e417fb15eebe3de13">close</a> ()</td></tr>
<tr class="separator:aa669c695a839e68e417fb15eebe3de13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff091db3361b34a3f63ffeb495c27c7" id="r_adff091db3361b34a3f63ffeb495c27c7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adff091db3361b34a3f63ffeb495c27c7">contiguousRange</a> (uint32_t *bgnSector, uint32_t *endSector)</td></tr>
<tr class="separator:adff091db3361b34a3f63ffeb495c27c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5510fa0e6c3090543c9272d017a33ae9" id="r_a5510fa0e6c3090543c9272d017a33ae9"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5510fa0e6c3090543c9272d017a33ae9">curCluster</a> () const</td></tr>
<tr class="separator:a5510fa0e6c3090543c9272d017a33ae9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a549a187423ffdb05be03bb7d059068a0" id="r_a549a187423ffdb05be03bb7d059068a0"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a549a187423ffdb05be03bb7d059068a0">curPosition</a> () const</td></tr>
<tr class="separator:a549a187423ffdb05be03bb7d059068a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3a8ce76dfe1cb0391bef65992715f3d" id="r_ab3a8ce76dfe1cb0391bef65992715f3d"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3a8ce76dfe1cb0391bef65992715f3d">dataLength</a> () const</td></tr>
<tr class="separator:ab3a8ce76dfe1cb0391bef65992715f3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41626a85a4665db2400ee6e251c66afd" id="r_a41626a85a4665db2400ee6e251c66afd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a41626a85a4665db2400ee6e251c66afd">dirIndex</a> () const</td></tr>
<tr class="separator:a41626a85a4665db2400ee6e251c66afd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76aea9766ffeae5454381a0704e62505" id="r_a76aea9766ffeae5454381a0704e62505"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a76aea9766ffeae5454381a0704e62505">exists</a> (const char *path)</td></tr>
<tr class="separator:a76aea9766ffeae5454381a0704e62505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4971d924d2101bb85917ddc18c1857" id="r_aac4971d924d2101bb85917ddc18c1857"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac4971d924d2101bb85917ddc18c1857">fgetpos</a> (<a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos) const</td></tr>
<tr class="separator:aac4971d924d2101bb85917ddc18c1857"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6b6b97a6382a763d6de882252412727" id="r_ab6b6b97a6382a763d6de882252412727"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6b6b97a6382a763d6de882252412727">fgets</a> (char *str, int num, char *delim=<a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a>)</td></tr>
<tr class="separator:ab6b6b97a6382a763d6de882252412727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9650edc87d2e52c47da3b72242a2fa2" id="r_ae9650edc87d2e52c47da3b72242a2fa2"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae9650edc87d2e52c47da3b72242a2fa2">fileSize</a> () const</td></tr>
<tr class="separator:ae9650edc87d2e52c47da3b72242a2fa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aced830a90f28be8d8ebb44d35ac2a325" id="r_aced830a90f28be8d8ebb44d35ac2a325"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aced830a90f28be8d8ebb44d35ac2a325">firstSector</a> () const</td></tr>
<tr class="separator:aced830a90f28be8d8ebb44d35ac2a325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adba2e8ad2ec46ae0f7b8f93b33a2b262" id="r_adba2e8ad2ec46ae0f7b8f93b33a2b262"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adba2e8ad2ec46ae0f7b8f93b33a2b262">flush</a> ()</td></tr>
<tr class="separator:adba2e8ad2ec46ae0f7b8f93b33a2b262"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bc085bc1ef0569f4ca7f14fff3e5678" id="r_a4bc085bc1ef0569f4ca7f14fff3e5678"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4bc085bc1ef0569f4ca7f14fff3e5678">fsetpos</a> (const <a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos)</td></tr>
<tr class="separator:a4bc085bc1ef0569f4ca7f14fff3e5678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add0901e13594348e1919a9df2fbad985" id="r_add0901e13594348e1919a9df2fbad985"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add0901e13594348e1919a9df2fbad985">getAccessDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:add0901e13594348e1919a9df2fbad985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5101edd57ee4ac0cd771b97cd089e4be" id="r_a5101edd57ee4ac0cd771b97cd089e4be"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5101edd57ee4ac0cd771b97cd089e4be">getCreateDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:a5101edd57ee4ac0cd771b97cd089e4be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abf35bd3dbdffb5db8b00bca7315e77" id="r_a6abf35bd3dbdffb5db8b00bca7315e77"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6abf35bd3dbdffb5db8b00bca7315e77">getError</a> () const</td></tr>
<tr class="separator:a6abf35bd3dbdffb5db8b00bca7315e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee20c403ceed3b036dae70838c9f1bbf" id="r_aee20c403ceed3b036dae70838c9f1bbf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee20c403ceed3b036dae70838c9f1bbf">getModifyDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:aee20c403ceed3b036dae70838c9f1bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2099dbe6bb8f61e1bf933d8e97b2d86" id="r_ad2099dbe6bb8f61e1bf933d8e97b2d86"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad2099dbe6bb8f61e1bf933d8e97b2d86">getName</a> (char *name, size_t len)</td></tr>
<tr class="separator:ad2099dbe6bb8f61e1bf933d8e97b2d86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acefc8f1f3f4b59df2645bebbb1444e38" id="r_acefc8f1f3f4b59df2645bebbb1444e38"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acefc8f1f3f4b59df2645bebbb1444e38">getWriteError</a> () const</td></tr>
<tr class="separator:acefc8f1f3f4b59df2645bebbb1444e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86ec19121b1bf4adf78723353541e2cf" id="r_a86ec19121b1bf4adf78723353541e2cf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a86ec19121b1bf4adf78723353541e2cf">isBusy</a> ()</td></tr>
<tr class="separator:a86ec19121b1bf4adf78723353541e2cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d96cd709a3b1ed52108b7b457e94a90" id="r_a4d96cd709a3b1ed52108b7b457e94a90"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4d96cd709a3b1ed52108b7b457e94a90">isContiguous</a> () const</td></tr>
<tr class="separator:a4d96cd709a3b1ed52108b7b457e94a90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaa35d16e322965d90d425d3818b017b" id="r_afaa35d16e322965d90d425d3818b017b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afaa35d16e322965d90d425d3818b017b">isDir</a> () const</td></tr>
<tr class="separator:afaa35d16e322965d90d425d3818b017b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2117631044ae5c63357d117e4ea0002" id="r_ac2117631044ae5c63357d117e4ea0002"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2117631044ae5c63357d117e4ea0002">isDirectory</a> () const</td></tr>
<tr class="separator:ac2117631044ae5c63357d117e4ea0002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab67f21819ac514e5620ad31cc46b09f" id="r_aab67f21819ac514e5620ad31cc46b09f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab67f21819ac514e5620ad31cc46b09f">isFile</a> () const</td></tr>
<tr class="separator:aab67f21819ac514e5620ad31cc46b09f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ba381b5b72e8531583b1620ca4b0b54" id="r_a1ba381b5b72e8531583b1620ca4b0b54"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ba381b5b72e8531583b1620ca4b0b54">isFileOrSubDir</a> () const</td></tr>
<tr class="separator:a1ba381b5b72e8531583b1620ca4b0b54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3e5312b8dbe4aaaac8cc58e8554f4d5" id="r_ad3e5312b8dbe4aaaac8cc58e8554f4d5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3e5312b8dbe4aaaac8cc58e8554f4d5">isHidden</a> () const</td></tr>
<tr class="separator:ad3e5312b8dbe4aaaac8cc58e8554f4d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fa58724ad7babc8ff6c0eff3aadb292" id="r_a2fa58724ad7babc8ff6c0eff3aadb292"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fa58724ad7babc8ff6c0eff3aadb292">isOpen</a> () const</td></tr>
<tr class="separator:a2fa58724ad7babc8ff6c0eff3aadb292"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc783ba743df70d3a52570cbb45d9e81" id="r_adc783ba743df70d3a52570cbb45d9e81"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc783ba743df70d3a52570cbb45d9e81">isReadable</a> () const</td></tr>
<tr class="separator:adc783ba743df70d3a52570cbb45d9e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3816261b4fbc7d3e3f1c42cda838f256" id="r_a3816261b4fbc7d3e3f1c42cda838f256"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3816261b4fbc7d3e3f1c42cda838f256">isReadOnly</a> () const</td></tr>
<tr class="separator:a3816261b4fbc7d3e3f1c42cda838f256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e35dd84dc4b802acac1eef87ab69224" id="r_a1e35dd84dc4b802acac1eef87ab69224"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e35dd84dc4b802acac1eef87ab69224">isSubDir</a> () const</td></tr>
<tr class="separator:a1e35dd84dc4b802acac1eef87ab69224"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec32bbc53ec3a36bc706a510a224b26" id="r_a6ec32bbc53ec3a36bc706a510a224b26"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ec32bbc53ec3a36bc706a510a224b26">isWritable</a> () const</td></tr>
<tr class="separator:a6ec32bbc53ec3a36bc706a510a224b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a866609c0f8883adcf82d9ef420538685" id="r_a866609c0f8883adcf82d9ef420538685"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a866609c0f8883adcf82d9ef420538685">ls</a> (uint8_t flags)</td></tr>
<tr class="separator:a866609c0f8883adcf82d9ef420538685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad00e91978956436c204913b860bf0634" id="r_ad00e91978956436c204913b860bf0634"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad00e91978956436c204913b860bf0634">ls</a> ()</td></tr>
<tr class="separator:ad00e91978956436c204913b860bf0634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecbc336b952eebebfdfcf917863183ee" id="r_aecbc336b952eebebfdfcf917863183ee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aecbc336b952eebebfdfcf917863183ee">ls</a> (print_t *pr)</td></tr>
<tr class="separator:aecbc336b952eebebfdfcf917863183ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a254df9866966f7f97478e916fe6a7f" id="r_a6a254df9866966f7f97478e916fe6a7f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a254df9866966f7f97478e916fe6a7f">ls</a> (print_t *pr, uint8_t flags)</td></tr>
<tr class="separator:a6a254df9866966f7f97478e916fe6a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b7aa7f2c63882e483336dfe12ef6800" id="r_a8b7aa7f2c63882e483336dfe12ef6800"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8b7aa7f2c63882e483336dfe12ef6800">mkdir</a> (<a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *dir, const char *path, bool pFlag=true)</td></tr>
<tr class="separator:a8b7aa7f2c63882e483336dfe12ef6800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa767859d4a4b4716ebbc4ea42a6d74df" id="r_aa767859d4a4b4716ebbc4ea42a6d74df"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa767859d4a4b4716ebbc4ea42a6d74df">open</a> (<a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *dir, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:aa767859d4a4b4716ebbc4ea42a6d74df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4743d118f085f6a13692d12bdd3c4556" id="r_a4743d118f085f6a13692d12bdd3c4556"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4743d118f085f6a13692d12bdd3c4556">open</a> (<a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *dir, uint32_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a4743d118f085f6a13692d12bdd3c4556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0186e56b21fd584b02db4b763df05f64" id="r_a0186e56b21fd584b02db4b763df05f64"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0186e56b21fd584b02db4b763df05f64">open</a> (<a class="el" href="../../d4/d27/classFsVolume.xhtml">FsVolume</a> *vol, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a0186e56b21fd584b02db4b763df05f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af44f0decd9b11dd45996e81f46e2cdee" id="r_af44f0decd9b11dd45996e81f46e2cdee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af44f0decd9b11dd45996e81f46e2cdee">open</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:af44f0decd9b11dd45996e81f46e2cdee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59568fad94a70ea88e167ac8fb4bd43c" id="r_a59568fad94a70ea88e167ac8fb4bd43c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a59568fad94a70ea88e167ac8fb4bd43c">open</a> (uint32_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a59568fad94a70ea88e167ac8fb4bd43c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdb7fd29ecf8db85d790e6b4acf24c9d" id="r_acdb7fd29ecf8db85d790e6b4acf24c9d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acdb7fd29ecf8db85d790e6b4acf24c9d">openCwd</a> ()</td></tr>
<tr class="separator:acdb7fd29ecf8db85d790e6b4acf24c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb9b1075f4db76fa7e0521c9aff9c3df" id="r_acb9b1075f4db76fa7e0521c9aff9c3df"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb9b1075f4db76fa7e0521c9aff9c3df">openNext</a> (<a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *dir, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:acb9b1075f4db76fa7e0521c9aff9c3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4574665073272dd811224df9f0e23c" id="r_a0b4574665073272dd811224df9f0e23c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b4574665073272dd811224df9f0e23c">openRoot</a> (<a class="el" href="../../d4/d27/classFsVolume.xhtml">FsVolume</a> *vol)</td></tr>
<tr class="separator:a0b4574665073272dd811224df9f0e23c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56b0229945235a059384a6ad8f267736" id="r_a56b0229945235a059384a6ad8f267736"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56b0229945235a059384a6ad8f267736">position</a> () const</td></tr>
<tr class="separator:a56b0229945235a059384a6ad8f267736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc49cb204f293a28b67af64c49c4c9f3" id="r_adc49cb204f293a28b67af64c49c4c9f3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc49cb204f293a28b67af64c49c4c9f3">peek</a> ()</td></tr>
<tr class="separator:adc49cb204f293a28b67af64c49c4c9f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbc037f9f07c57235bb8b30af5a53ac2" id="r_acbc037f9f07c57235bb8b30af5a53ac2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acbc037f9f07c57235bb8b30af5a53ac2">preAllocate</a> (uint64_t length)</td></tr>
<tr class="separator:acbc037f9f07c57235bb8b30af5a53ac2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a264ba61530aee50dbe9659d41dd2c1d6" id="r_a264ba61530aee50dbe9659d41dd2c1d6"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a264ba61530aee50dbe9659d41dd2c1d6">printAccessDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a264ba61530aee50dbe9659d41dd2c1d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f75ac7eb6643afcabae28e8c93479c8" id="r_a3f75ac7eb6643afcabae28e8c93479c8"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f75ac7eb6643afcabae28e8c93479c8">printCreateDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a3f75ac7eb6643afcabae28e8c93479c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a911ae825e67d7e6ade4a672595e060d6" id="r_a911ae825e67d7e6ade4a672595e060d6"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a911ae825e67d7e6ade4a672595e060d6">printField</a> (double value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a911ae825e67d7e6ade4a672595e060d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dd2738efe2e550f56037536bc252f13" id="r_a5dd2738efe2e550f56037536bc252f13"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5dd2738efe2e550f56037536bc252f13">printField</a> (float value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a5dd2738efe2e550f56037536bc252f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45639312b8c5aa9ceddb19e654e902b4" id="r_a45639312b8c5aa9ceddb19e654e902b4"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a45639312b8c5aa9ceddb19e654e902b4"><td class="memTemplItemLeft" align="right" valign="top">size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a45639312b8c5aa9ceddb19e654e902b4">printField</a> (Type value, char term)</td></tr>
<tr class="separator:a45639312b8c5aa9ceddb19e654e902b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6760471e3c445f66b94f3f0e96fdfe10" id="r_a6760471e3c445f66b94f3f0e96fdfe10"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6760471e3c445f66b94f3f0e96fdfe10">printFileSize</a> (print_t *pr)</td></tr>
<tr class="separator:a6760471e3c445f66b94f3f0e96fdfe10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2f813496fa156f9808a5d33c2d8746" id="r_a0f2f813496fa156f9808a5d33c2d8746"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0f2f813496fa156f9808a5d33c2d8746">printModifyDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a0f2f813496fa156f9808a5d33c2d8746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a178a1cbe2bce19758a55bd00fa262732" id="r_a178a1cbe2bce19758a55bd00fa262732"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a178a1cbe2bce19758a55bd00fa262732">printName</a> (print_t *pr)</td></tr>
<tr class="separator:a178a1cbe2bce19758a55bd00fa262732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe2d203d212a50871db77a9b2ba01f6" id="r_acbe2d203d212a50871db77a9b2ba01f6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acbe2d203d212a50871db77a9b2ba01f6">read</a> ()</td></tr>
<tr class="separator:acbe2d203d212a50871db77a9b2ba01f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8d8cb4cceda9d56e8dae692d04a46e6" id="r_ae8d8cb4cceda9d56e8dae692d04a46e6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8d8cb4cceda9d56e8dae692d04a46e6">read</a> (void *buf, size_t count)</td></tr>
<tr class="separator:ae8d8cb4cceda9d56e8dae692d04a46e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d21f9df86e846e34c3bb11cf7db21bc" id="r_a8d21f9df86e846e34c3bb11cf7db21bc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d21f9df86e846e34c3bb11cf7db21bc">remove</a> ()</td></tr>
<tr class="separator:a8d21f9df86e846e34c3bb11cf7db21bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64feff69c4f09e56247c7f9dc7c74f34" id="r_a64feff69c4f09e56247c7f9dc7c74f34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a64feff69c4f09e56247c7f9dc7c74f34">remove</a> (const char *path)</td></tr>
<tr class="separator:a64feff69c4f09e56247c7f9dc7c74f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af532d87177e86995a053503eb9152115" id="r_af532d87177e86995a053503eb9152115"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af532d87177e86995a053503eb9152115">rename</a> (const char *newPath)</td></tr>
<tr class="separator:af532d87177e86995a053503eb9152115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09a408e0ce91f045540b2a088177cec0" id="r_a09a408e0ce91f045540b2a088177cec0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09a408e0ce91f045540b2a088177cec0">rename</a> (<a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *dir, const char *newPath)</td></tr>
<tr class="separator:a09a408e0ce91f045540b2a088177cec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f8ef845d610493ebe314e19ddda561" id="r_a22f8ef845d610493ebe314e19ddda561"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22f8ef845d610493ebe314e19ddda561">rewind</a> ()</td></tr>
<tr class="separator:a22f8ef845d610493ebe314e19ddda561"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56bfeb031562a6fb30e057670e6b326d" id="r_a56bfeb031562a6fb30e057670e6b326d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56bfeb031562a6fb30e057670e6b326d">rewindDirectory</a> ()</td></tr>
<tr class="separator:a56bfeb031562a6fb30e057670e6b326d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac47870fd89b0849cda33f2780918a286" id="r_ac47870fd89b0849cda33f2780918a286"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac47870fd89b0849cda33f2780918a286">rmdir</a> ()</td></tr>
<tr class="separator:ac47870fd89b0849cda33f2780918a286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae86486f4e20f4924797124f9c6042bfd" id="r_ae86486f4e20f4924797124f9c6042bfd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae86486f4e20f4924797124f9c6042bfd">seek</a> (uint64_t pos)</td></tr>
<tr class="separator:ae86486f4e20f4924797124f9c6042bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa242a4598eab5caa6efd4bdf62f5c0" id="r_a5fa242a4598eab5caa6efd4bdf62f5c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5fa242a4598eab5caa6efd4bdf62f5c0">seekCur</a> (int64_t offset)</td></tr>
<tr class="separator:a5fa242a4598eab5caa6efd4bdf62f5c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade9f9a9ac4d3e0a392a6cc45c9551767" id="r_ade9f9a9ac4d3e0a392a6cc45c9551767"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ade9f9a9ac4d3e0a392a6cc45c9551767">seekEnd</a> (int64_t offset=0)</td></tr>
<tr class="separator:ade9f9a9ac4d3e0a392a6cc45c9551767"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a460f7598c903b8a4b4fe868dacccb6dd" id="r_a460f7598c903b8a4b4fe868dacccb6dd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a460f7598c903b8a4b4fe868dacccb6dd">seekSet</a> (uint64_t pos)</td></tr>
<tr class="separator:a460f7598c903b8a4b4fe868dacccb6dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d219b7b8219b94bd7e868d4da28fe3" id="r_a03d219b7b8219b94bd7e868d4da28fe3"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03d219b7b8219b94bd7e868d4da28fe3">size</a> () const</td></tr>
<tr class="separator:a03d219b7b8219b94bd7e868d4da28fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf2d9261c5c1b1b022a0414cdfe0a17b" id="r_acf2d9261c5c1b1b022a0414cdfe0a17b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf2d9261c5c1b1b022a0414cdfe0a17b">sync</a> ()</td></tr>
<tr class="separator:acf2d9261c5c1b1b022a0414cdfe0a17b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea65e639feebaac01964af02a77d324" id="r_acea65e639feebaac01964af02a77d324"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acea65e639feebaac01964af02a77d324">timestamp</a> (uint8_t flags, uint16_t year, uint8_t month, uint8_t day, uint8_t hour, uint8_t minute, uint8_t second)</td></tr>
<tr class="separator:acea65e639feebaac01964af02a77d324"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a0bf00241df08a604f054512746986b" id="r_a2a0bf00241df08a604f054512746986b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a0bf00241df08a604f054512746986b">truncate</a> ()</td></tr>
<tr class="separator:a2a0bf00241df08a604f054512746986b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47247cc54157ef79e0752f55ba01cf7e" id="r_a47247cc54157ef79e0752f55ba01cf7e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47247cc54157ef79e0752f55ba01cf7e">truncate</a> (uint64_t length)</td></tr>
<tr class="separator:a47247cc54157ef79e0752f55ba01cf7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09552cb7704706a9f9772ce083c74637" id="r_a09552cb7704706a9f9772ce083c74637"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09552cb7704706a9f9772ce083c74637">write</a> (const char *str)</td></tr>
<tr class="separator:a09552cb7704706a9f9772ce083c74637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023c0392aa72b32652546f48ef8ba1e5" id="r_a023c0392aa72b32652546f48ef8ba1e5"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a023c0392aa72b32652546f48ef8ba1e5">write</a> (uint8_t b)</td></tr>
<tr class="separator:a023c0392aa72b32652546f48ef8ba1e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa763e83fea4889828effc3308f13113a" id="r_aa763e83fea4889828effc3308f13113a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa763e83fea4889828effc3308f13113a">write</a> (const void *buf, size_t count)</td></tr>
<tr class="separator:aa763e83fea4889828effc3308f13113a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Attributs privés</h2></td></tr>
<tr class="memitem:a24c5c7fc162ea79cf196a59aa6b797f8" id="r_a24c5c7fc162ea79cf196a59aa6b797f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../db/d65/FsNew_8h.xhtml#aa858eeb82c4fc91593a63ad62474c1d7">newalign_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a24c5c7fc162ea79cf196a59aa6b797f8">m_fileMem</a> [<a class="el" href="../../db/d65/FsNew_8h.xhtml#af1020c14733d4f2bb83497caba4ab010">FS_ALIGN_DIM</a>(<a class="el" href="../../d6/d7f/classExFatFile.xhtml">ExFatFile</a>, <a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a>)]</td></tr>
<tr class="separator:a24c5c7fc162ea79cf196a59aa6b797f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41d4c5b137c4c27cc06cea5238d22001" id="r_a41d4c5b137c4c27cc06cea5238d22001"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a41d4c5b137c4c27cc06cea5238d22001">m_fFile</a> = <a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></td></tr>
<tr class="separator:a41d4c5b137c4c27cc06cea5238d22001"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aa5a8a7bfd744610cdbd85bd0fe768f" id="r_a8aa5a8a7bfd744610cdbd85bd0fe768f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d7f/classExFatFile.xhtml">ExFatFile</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8aa5a8a7bfd744610cdbd85bd0fe768f">m_xFile</a> = <a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></td></tr>
<tr class="separator:a8aa5a8a7bfd744610cdbd85bd0fe768f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p><a class="el" href="../../d0/db5/classFsBaseFile.xhtml" title="FsBaseFile class.">FsBaseFile</a> class. </p>
</div><h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="ab24dc35b5ca7acfaea22f3e565560172" name="ab24dc35b5ca7acfaea22f3e565560172"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24dc35b5ca7acfaea22f3e565560172">&#9670;&#160;</a></span>FsBaseFile() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FsBaseFile::FsBaseFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create an instance. </p>

</div>
</div>
<a id="a6034c6dfce320e2869901890398831b4" name="a6034c6dfce320e2869901890398831b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6034c6dfce320e2869901890398831b4">&#9670;&#160;</a></span>FsBaseFile() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FsBaseFile::FsBaseFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create a file object and open it in the current working directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of open flags. see <a class="el" href="../../d3/db4/classFatFile.xhtml#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a6034c6dfce320e2869901890398831b4_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab148c0eb86197666a251a2f0a15f2a02" name="ab148c0eb86197666a251a2f0a15f2a02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab148c0eb86197666a251a2f0a15f2a02">&#9670;&#160;</a></span>~FsBaseFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FsBaseFile::~FsBaseFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ab148c0eb86197666a251a2f0a15f2a02_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6ddaf9a50682a50bacbddf541c35b017" name="a6ddaf9a50682a50bacbddf541c35b017"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ddaf9a50682a50bacbddf541c35b017">&#9670;&#160;</a></span>FsBaseFile() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FsBaseFile::FsBaseFile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp;&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy constructor.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">from</td><td>Object used to initialize this instance.</td></tr>
  </table>
  </dd>
</dl>
<p>Copyright (c) 2011-2022 Bill Greiman This file is part of the SdFat library for SD memory cards.</p>
<p>MIT License</p>
<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>
<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </p>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="a97de3349d1d3439ce3f09fdd47e6f397" name="a97de3349d1d3439ce3f09fdd47e6f397"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97de3349d1d3439ce3f09fdd47e6f397">&#9670;&#160;</a></span>attrib() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::attrib </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>user settable file attributes for success else -1. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a97de3349d1d3439ce3f09fdd47e6f397_cgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9aa5c87929919bd35862e0942587969d" name="a9aa5c87929919bd35862e0942587969d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa5c87929919bd35862e0942587969d">&#9670;&#160;</a></span>attrib() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::attrib </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set file attributes</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bits</td><td>bit-wise or of selected attributes: FS_ATTRIB_READ_ONLY, FS_ATTRIB_HIDDEN, FS_ATTRIB_SYSTEM, FS_ATTRIB_ARCHIVE.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="#a97de3349d1d3439ce3f09fdd47e6f397">attrib()</a> will fail for set read-only if the file is open for write. </dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a9aa5c87929919bd35862e0942587969d_cgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aac7a88177eec39ec7d4709ae861d5296" name="aac7a88177eec39ec7d4709ae861d5296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac7a88177eec39ec7d4709ae861d5296">&#9670;&#160;</a></span>available()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::available </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>number of bytes available from the current position to EOF or INT_MAX if more than INT_MAX bytes are available. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aac7a88177eec39ec7d4709ae861d5296_cgraph.svg" width="100%" height="512"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a51ef5e33a8d4c9db1a5b212e15fb7da4" name="a51ef5e33a8d4c9db1a5b212e15fb7da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ef5e33a8d4c9db1a5b212e15fb7da4">&#9670;&#160;</a></span>available64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::available64 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes available from the current position to EOF for normal files. Zero is returned for directory files. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a51ef5e33a8d4c9db1a5b212e15fb7da4_cgraph.svg" width="607" height="283"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a936fc1e3fb13a6ae1352d027bf0a70f7" name="a936fc1e3fb13a6ae1352d027bf0a70f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a936fc1e3fb13a6ae1352d027bf0a70f7">&#9670;&#160;</a></span>clearWriteError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::clearWriteError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clear writeError. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a936fc1e3fb13a6ae1352d027bf0a70f7_cgraph.svg" width="444" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa669c695a839e68e417fb15eebe3de13" name="aa669c695a839e68e417fb15eebe3de13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa669c695a839e68e417fb15eebe3de13">&#9670;&#160;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Close a file and force cached data and directory information to be written to the storage device.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aa669c695a839e68e417fb15eebe3de13_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aa669c695a839e68e417fb15eebe3de13_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adff091db3361b34a3f63ffeb495c27c7" name="adff091db3361b34a3f63ffeb495c27c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff091db3361b34a3f63ffeb495c27c7">&#9670;&#160;</a></span>contiguousRange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::contiguousRange </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>bgnSector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>endSector</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check for contiguous file and return its raw sector range.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">bgnSector</td><td>the first sector address for the file. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">endSector</td><td>the last sector address for the file.</td></tr>
  </table>
  </dd>
</dl>
<p>Set contiguous flag for FAT16/FAT32 files. Parameters may be nullptr.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_adff091db3361b34a3f63ffeb495c27c7_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5510fa0e6c3090543c9272d017a33ae9" name="a5510fa0e6c3090543c9272d017a33ae9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5510fa0e6c3090543c9272d017a33ae9">&#9670;&#160;</a></span>curCluster()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsBaseFile::curCluster </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The current cluster number for a file or directory. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a5510fa0e6c3090543c9272d017a33ae9_cgraph.svg" width="380" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a549a187423ffdb05be03bb7d059068a0" name="a549a187423ffdb05be03bb7d059068a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a549a187423ffdb05be03bb7d059068a0">&#9670;&#160;</a></span>curPosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::curPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The current position for a file or directory. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a549a187423ffdb05be03bb7d059068a0_cgraph.svg" width="391" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab3a8ce76dfe1cb0391bef65992715f3d" name="ab3a8ce76dfe1cb0391bef65992715f3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3a8ce76dfe1cb0391bef65992715f3d">&#9670;&#160;</a></span>dataLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::dataLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Total allocated length for file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ab3a8ce76dfe1cb0391bef65992715f3d_cgraph.svg" width="394" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a41626a85a4665db2400ee6e251c66afd" name="a41626a85a4665db2400ee6e251c66afd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41626a85a4665db2400ee6e251c66afd">&#9670;&#160;</a></span>dirIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsBaseFile::dirIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Directory entry index. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a41626a85a4665db2400ee6e251c66afd_cgraph.svg" width="354" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a76aea9766ffeae5454381a0704e62505" name="a76aea9766ffeae5454381a0704e62505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76aea9766ffeae5454381a0704e62505">&#9670;&#160;</a></span>exists()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::exists </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test for the existence of a file in a directory</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Path of the file to be tested for.</td></tr>
  </table>
  </dd>
</dl>
<p>The calling instance must be an open directory file.</p>
<p>dirFile.exists("TOFIND.TXT") searches for "TOFIND.TXT" in the directory dirFile.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if the file exists else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a76aea9766ffeae5454381a0704e62505_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aac4971d924d2101bb85917ddc18c1857" name="aac4971d924d2101bb85917ddc18c1857"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac4971d924d2101bb85917ddc18c1857">&#9670;&#160;</a></span>fgetpos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::fgetpos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>get position for streams </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pos</td><td>struct to receive position </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aac4971d924d2101bb85917ddc18c1857_cgraph.svg" width="346" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab6b6b97a6382a763d6de882252412727" name="ab6b6b97a6382a763d6de882252412727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6b6b97a6382a763d6de882252412727">&#9670;&#160;</a></span>fgets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::fgets </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>delim</em> = <code><a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a string from a file.</p>
<p><a class="el" href="#ab6b6b97a6382a763d6de882252412727">fgets()</a> reads bytes from a file into the array pointed to by <em>str</em>, until <em>num</em> - 1 bytes are read, or a delimiter is read and transferred to <em>str</em>, or end-of-file is encountered. The string is then terminated with a null byte.</p>
<p><a class="el" href="#ab6b6b97a6382a763d6de882252412727">fgets()</a> deletes CR, '\r', from the string. This insures only a '\n' terminates the string for Windows text files which use CRLF for newline.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">str</td><td>Pointer to the array where the string is stored. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>Maximum number of characters to be read (including the final null byte). Usually the length of the array <em>str</em> is used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">delim</td><td>Optional set of delimiters. The default is "\n".</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#ab6b6b97a6382a763d6de882252412727">fgets()</a> returns the length of the string in <em>str</em>. If no data is read, <a class="el" href="#ab6b6b97a6382a763d6de882252412727">fgets()</a> returns zero for EOF or -1 if an error occurred. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ab6b6b97a6382a763d6de882252412727_cgraph.svg" width="479" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae9650edc87d2e52c47da3b72242a2fa2" name="ae9650edc87d2e52c47da3b72242a2fa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9650edc87d2e52c47da3b72242a2fa2">&#9670;&#160;</a></span>fileSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::fileSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The total number of bytes in a file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ae9650edc87d2e52c47da3b72242a2fa2_cgraph.svg" width="340" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aced830a90f28be8d8ebb44d35ac2a325" name="aced830a90f28be8d8ebb44d35ac2a325"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aced830a90f28be8d8ebb44d35ac2a325">&#9670;&#160;</a></span>firstSector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsBaseFile::firstSector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Address of first sector or zero for empty file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aced830a90f28be8d8ebb44d35ac2a325_cgraph.svg" width="623" height="115"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="adba2e8ad2ec46ae0f7b8f93b33a2b262" name="adba2e8ad2ec46ae0f7b8f93b33a2b262"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adba2e8ad2ec46ae0f7b8f93b33a2b262">&#9670;&#160;</a></span>flush()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::flush </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Ensure that any bytes written to the file are saved to the SD card. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_adba2e8ad2ec46ae0f7b8f93b33a2b262_cgraph.svg" width="320" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4bc085bc1ef0569f4ca7f14fff3e5678" name="a4bc085bc1ef0569f4ca7f14fff3e5678"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bc085bc1ef0569f4ca7f14fff3e5678">&#9670;&#160;</a></span>fsetpos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::fsetpos </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>set position for streams </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>struct with value for new position </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a4bc085bc1ef0569f4ca7f14fff3e5678_cgraph.svg" width="343" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="add0901e13594348e1919a9df2fbad985" name="add0901e13594348e1919a9df2fbad985"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add0901e13594348e1919a9df2fbad985">&#9670;&#160;</a></span>getAccessDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::getAccessDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a file's access date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>Packed time for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_add0901e13594348e1919a9df2fbad985_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5101edd57ee4ac0cd771b97cd089e4be" name="a5101edd57ee4ac0cd771b97cd089e4be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5101edd57ee4ac0cd771b97cd089e4be">&#9670;&#160;</a></span>getCreateDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::getCreateDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a file's create date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>Packed time for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a5101edd57ee4ac0cd771b97cd089e4be_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6abf35bd3dbdffb5db8b00bca7315e77" name="a6abf35bd3dbdffb5db8b00bca7315e77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6abf35bd3dbdffb5db8b00bca7315e77">&#9670;&#160;</a></span>getError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FsBaseFile::getError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>All error bits. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a6abf35bd3dbdffb5db8b00bca7315e77_cgraph.svg" width="532" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aee20c403ceed3b036dae70838c9f1bbf" name="aee20c403ceed3b036dae70838c9f1bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee20c403ceed3b036dae70838c9f1bbf">&#9670;&#160;</a></span>getModifyDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::getModifyDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a file's Modify date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>Packed time for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aee20c403ceed3b036dae70838c9f1bbf_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad2099dbe6bb8f61e1bf933d8e97b2d86" name="ad2099dbe6bb8f61e1bf933d8e97b2d86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2099dbe6bb8f61e1bf933d8e97b2d86">&#9670;&#160;</a></span>getName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::getName </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a file's name followed by a zero byte.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">name</td><td>An array of characters for the file's name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">len</td><td>The size of the array in bytes. The array must be at least 13 bytes long. The file's name will be truncated if the file's name is too long. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The length of the returned string. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ad2099dbe6bb8f61e1bf933d8e97b2d86_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acefc8f1f3f4b59df2645bebbb1444e38" name="acefc8f1f3f4b59df2645bebbb1444e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acefc8f1f3f4b59df2645bebbb1444e38">&#9670;&#160;</a></span>getWriteError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::getWriteError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>value of writeError </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acefc8f1f3f4b59df2645bebbb1444e38_cgraph.svg" width="602" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a86ec19121b1bf4adf78723353541e2cf" name="a86ec19121b1bf4adf78723353541e2cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86ec19121b1bf4adf78723353541e2cf">&#9670;&#160;</a></span>isBusy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isBusy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check for FsBlockDevice busy.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if busy else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a86ec19121b1bf4adf78723353541e2cf_cgraph.svg" width="100%" height="529"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4d96cd709a3b1ed52108b7b457e94a90" name="a4d96cd709a3b1ed52108b7b457e94a90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d96cd709a3b1ed52108b7b457e94a90">&#9670;&#160;</a></span>isContiguous()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isContiguous </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if the file is contiguous. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a4d96cd709a3b1ed52108b7b457e94a90_cgraph.svg" width="415" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="afaa35d16e322965d90d425d3818b017b" name="afaa35d16e322965d90d425d3818b017b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaa35d16e322965d90d425d3818b017b">&#9670;&#160;</a></span>isDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a directory else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_afaa35d16e322965d90d425d3818b017b_cgraph.svg" width="308" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_afaa35d16e322965d90d425d3818b017b_icgraph.svg" width="360" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac2117631044ae5c63357d117e4ea0002" name="ac2117631044ae5c63357d117e4ea0002"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2117631044ae5c63357d117e4ea0002">&#9670;&#160;</a></span>isDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isDirectory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function reports if the current file is a directory or not. </p><dl class="section return"><dt>Renvoie</dt><dd>true if the file is a directory. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ac2117631044ae5c63357d117e4ea0002_cgraph.svg" width="527" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aab67f21819ac514e5620ad31cc46b09f" name="aab67f21819ac514e5620ad31cc46b09f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab67f21819ac514e5620ad31cc46b09f">&#9670;&#160;</a></span>isFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a normal file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aab67f21819ac514e5620ad31cc46b09f_cgraph.svg" width="316" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1ba381b5b72e8531583b1620ca4b0b54" name="a1ba381b5b72e8531583b1620ca4b0b54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ba381b5b72e8531583b1620ca4b0b54">&#9670;&#160;</a></span>isFileOrSubDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isFileOrSubDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a normal file or sub-directory. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a1ba381b5b72e8531583b1620ca4b0b54_cgraph.svg" width="622" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad3e5312b8dbe4aaaac8cc58e8554f4d5" name="ad3e5312b8dbe4aaaac8cc58e8554f4d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3e5312b8dbe4aaaac8cc58e8554f4d5">&#9670;&#160;</a></span>isHidden()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isHidden </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a hidden file else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ad3e5312b8dbe4aaaac8cc58e8554f4d5_cgraph.svg" width="362" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2fa58724ad7babc8ff6c0eff3aadb292" name="a2fa58724ad7babc8ff6c0eff3aadb292"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fa58724ad7babc8ff6c0eff3aadb292">&#9670;&#160;</a></span>isOpen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is an open file/directory else false. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a2fa58724ad7babc8ff6c0eff3aadb292_icgraph.svg" width="391" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="adc783ba743df70d3a52570cbb45d9e81" name="adc783ba743df70d3a52570cbb45d9e81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc783ba743df70d3a52570cbb45d9e81">&#9670;&#160;</a></span>isReadable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isReadable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True file is readable. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_adc783ba743df70d3a52570cbb45d9e81_cgraph.svg" width="391" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3816261b4fbc7d3e3f1c42cda838f256" name="a3816261b4fbc7d3e3f1c42cda838f256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3816261b4fbc7d3e3f1c42cda838f256">&#9670;&#160;</a></span>isReadOnly()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isReadOnly </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if file is read-only </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a3816261b4fbc7d3e3f1c42cda838f256_cgraph.svg" width="396" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1e35dd84dc4b802acac1eef87ab69224" name="a1e35dd84dc4b802acac1eef87ab69224"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e35dd84dc4b802acac1eef87ab69224">&#9670;&#160;</a></span>isSubDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isSubDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a sub-directory file else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a1e35dd84dc4b802acac1eef87ab69224_cgraph.svg" width="356" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6ec32bbc53ec3a36bc706a510a224b26" name="a6ec32bbc53ec3a36bc706a510a224b26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ec32bbc53ec3a36bc706a510a224b26">&#9670;&#160;</a></span>isWritable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::isWritable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True file is writable. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a6ec32bbc53ec3a36bc706a510a224b26_cgraph.svg" width="380" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad00e91978956436c204913b860bf0634" name="ad00e91978956436c204913b860bf0634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad00e91978956436c204913b860bf0634">&#9670;&#160;</a></span>ls() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::ls </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List directory contents. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ad00e91978956436c204913b860bf0634_cgraph.svg" width="122" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ad00e91978956436c204913b860bf0634_icgraph.svg" width="122" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aecbc336b952eebebfdfcf917863183ee" name="aecbc336b952eebebfdfcf917863183ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecbc336b952eebebfdfcf917863183ee">&#9670;&#160;</a></span>ls() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::ls </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List directory contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> object.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a6a254df9866966f7f97478e916fe6a7f" name="a6a254df9866966f7f97478e916fe6a7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a254df9866966f7f97478e916fe6a7f">&#9670;&#160;</a></span>ls() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::ls </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List directory contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> object. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>The inclusive OR of</td></tr>
  </table>
  </dd>
</dl>
<p>LS_DATE - Print file modification date</p>
<p>LS_SIZE - Print file size.</p>
<p>LS_R - Recursive list of subdirectories.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a866609c0f8883adcf82d9ef420538685" name="a866609c0f8883adcf82d9ef420538685"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a866609c0f8883adcf82d9ef420538685">&#9670;&#160;</a></span>ls() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::ls </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List directory contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>The inclusive OR of</td></tr>
  </table>
  </dd>
</dl>
<p>LS_DATE - Print file modification date</p>
<p>LS_SIZE - Print file size.</p>
<p>LS_R - Recursive list of subdirectories. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a866609c0f8883adcf82d9ef420538685_cgraph.svg" width="122" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a866609c0f8883adcf82d9ef420538685_icgraph.svg" width="275" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8b7aa7f2c63882e483336dfe12ef6800" name="a8b7aa7f2c63882e483336dfe12ef6800"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b7aa7f2c63882e483336dfe12ef6800">&#9670;&#160;</a></span>mkdir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::mkdir </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pFlag</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Make a new directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>An open <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> instance for the directory that will contain the new directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid 8.3 DOS name for the new directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pFlag</td><td>Create missing parent directories if true.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a8b7aa7f2c63882e483336dfe12ef6800_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af44f0decd9b11dd45996e81f46e2cdee" name="af44f0decd9b11dd45996e81f46e2cdee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af44f0decd9b11dd45996e81f46e2cdee">&#9670;&#160;</a></span>open() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::open </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Open a file or directory by name.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of open flags.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="aa767859d4a4b4716ebbc4ea42a6d74df" name="aa767859d4a4b4716ebbc4ea42a6d74df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa767859d4a4b4716ebbc4ea42a6d74df">&#9670;&#160;</a></span>open() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file or directory by name.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>An open file instance for the directory containing the file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid 8.3 DOS name for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of flags from the following list</td></tr>
  </table>
  </dd>
</dl>
<p>O_RDONLY - Open for reading only..</p>
<p>O_READ - Same as O_RDONLY.</p>
<p>O_WRONLY - Open for writing only.</p>
<p>O_WRITE - Same as O_WRONLY.</p>
<p>O_RDWR - Open for reading and writing.</p>
<p>O_APPEND - If set, the file offset shall be set to the end of the file prior to each write.</p>
<p>O_AT_END - Set the initial position at the end of the file.</p>
<p>O_CREAT - If the file exists, this flag has no effect except as noted under O_EXCL below. Otherwise, the file shall be created</p>
<p>O_EXCL - If O_CREAT and O_EXCL are set, <a class="el" href="#aa767859d4a4b4716ebbc4ea42a6d74df">open()</a> shall fail if the file exists.</p>
<p>O_TRUNC - If the file exists and is a regular file, and the file is successfully opened and is not read only, its length shall be truncated to 0.</p>
<p>WARNING: A given file must not be opened by more than one file object or file corruption may occur.</p>
<dl class="section note"><dt>Note</dt><dd>Directory files must be opened read only. Write and truncation is not allowed for directory files.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aa767859d4a4b4716ebbc4ea42a6d74df_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_aa767859d4a4b4716ebbc4ea42a6d74df_icgraph.svg" width="536" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4743d118f085f6a13692d12bdd3c4556" name="a4743d118f085f6a13692d12bdd3c4556"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4743d118f085f6a13692d12bdd3c4556">&#9670;&#160;</a></span>open() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file by index.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>An open <a class="el" href="../../d5/d4f/classFsFile.xhtml" title="FsBaseFile file with Arduino Stream.">FsFile</a> instance for the directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The <em>index</em> of the directory entry for the file to be opened. The value for <em>index</em> is (directory file position)/32.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see FsFile::open(FsFile*, const char*, uint8_t).</td></tr>
  </table>
  </dd>
</dl>
<p>See <a class="el" href="#aa767859d4a4b4716ebbc4ea42a6d74df">open()</a> by path for definition of flags. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a4743d118f085f6a13692d12bdd3c4556_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0186e56b21fd584b02db4b763df05f64" name="a0186e56b21fd584b02db4b763df05f64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0186e56b21fd584b02db4b763df05f64">&#9670;&#160;</a></span>open() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d27/classFsVolume.xhtml">FsVolume</a> *&#160;</td>
          <td class="paramname"><em>vol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file or directory by name.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vol</td><td>Volume where the file is located.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of open flags.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a0186e56b21fd584b02db4b763df05f64_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a59568fad94a70ea88e167ac8fb4bd43c" name="a59568fad94a70ea88e167ac8fb4bd43c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59568fad94a70ea88e167ac8fb4bd43c">&#9670;&#160;</a></span>open() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::open </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Open a file or directory by index in the current working directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The <em>index</em> of the directory entry for the file to be opened. The value for <em>index</em> is (directory file position)/32.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of open flags.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a59568fad94a70ea88e167ac8fb4bd43c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acdb7fd29ecf8db85d790e6b4acf24c9d" name="acdb7fd29ecf8db85d790e6b4acf24c9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdb7fd29ecf8db85d790e6b4acf24c9d">&#9670;&#160;</a></span>openCwd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::openCwd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open the current working directory.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acdb7fd29ecf8db85d790e6b4acf24c9d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acdb7fd29ecf8db85d790e6b4acf24c9d_icgraph.svg" width="351" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="acb9b1075f4db76fa7e0521c9aff9c3df" name="acb9b1075f4db76fa7e0521c9aff9c3df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb9b1075f4db76fa7e0521c9aff9c3df">&#9670;&#160;</a></span>openNext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::openNext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Opens the next file or folder in a directory. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory containing files. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>open flags. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>a file object. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acb9b1075f4db76fa7e0521c9aff9c3df_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acb9b1075f4db76fa7e0521c9aff9c3df_icgraph.svg" width="376" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0b4574665073272dd811224df9f0e23c" name="a0b4574665073272dd811224df9f0e23c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b4574665073272dd811224df9f0e23c">&#9670;&#160;</a></span>openRoot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::openRoot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d27/classFsVolume.xhtml">FsVolume</a> *&#160;</td>
          <td class="paramname"><em>vol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a volume's root directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vol</td><td>The <a class="el" href="../../d8/dd4/classSdFs.xhtml" title="SD file system class for FAT16, FAT32, and exFAT volumes.">SdFs</a> volume containing the root directory to be opened.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a0b4574665073272dd811224df9f0e23c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a62069a45eb05ebaae3da384d05d59523" name="a62069a45eb05ebaae3da384d05d59523"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62069a45eb05ebaae3da384d05d59523">&#9670;&#160;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FsBaseFile::operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The parenthesis operator.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if a file is open. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a62069a45eb05ebaae3da384d05d59523_cgraph.svg" width="391" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae4f6d168072bb4f2a61976f621659d20" name="ae4f6d168072bb4f2a61976f621659d20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4f6d168072bb4f2a61976f621659d20">&#9670;&#160;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp; FsBaseFile::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> &amp;&#160;</td>
          <td class="paramname"><em>from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy assignment operator </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">from</td><td>Object used to initialize this instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>assigned object. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ae4f6d168072bb4f2a61976f621659d20_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adc49cb204f293a28b67af64c49c4c9f3" name="adc49cb204f293a28b67af64c49c4c9f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc49cb204f293a28b67af64c49c4c9f3">&#9670;&#160;</a></span>peek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::peek </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Return the next available byte without consuming it.</p>
<dl class="section return"><dt>Renvoie</dt><dd>The byte if no error and not at eof else -1; </dd></dl>

</div>
</div>
<a id="a56b0229945235a059384a6ad8f267736" name="a56b0229945235a059384a6ad8f267736"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56b0229945235a059384a6ad8f267736">&#9670;&#160;</a></span>position()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::position </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>the current file position. </dd></dl>

</div>
</div>
<a id="acbc037f9f07c57235bb8b30af5a53ac2" name="acbc037f9f07c57235bb8b30af5a53ac2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbc037f9f07c57235bb8b30af5a53ac2">&#9670;&#160;</a></span>preAllocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::preAllocate </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Allocate contiguous clusters to an empty file.</p>
<p>The file must be empty with no clusters allocated.</p>
<p>The file will contain uninitialized data for FAT16/FAT32 files. exFAT files will have zero validLength and dataLength will equal the requested length.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>size of the file in bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a264ba61530aee50dbe9659d41dd2c1d6" name="a264ba61530aee50dbe9659d41dd2c1d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a264ba61530aee50dbe9659d41dd2c1d6">&#9670;&#160;</a></span>printAccessDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printAccessDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's access date and time</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a3f75ac7eb6643afcabae28e8c93479c8" name="a3f75ac7eb6643afcabae28e8c93479c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f75ac7eb6643afcabae28e8c93479c8">&#9670;&#160;</a></span>printCreateDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printCreateDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's creation date and time</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a911ae825e67d7e6ade4a672595e060d6" name="a911ae825e67d7e6ade4a672595e060d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a911ae825e67d7e6ade4a672595e060d6">&#9670;&#160;</a></span>printField() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printField </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>

</div>
</div>
<a id="a5dd2738efe2e550f56037536bc252f13" name="a5dd2738efe2e550f56037536bc252f13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dd2738efe2e550f56037536bc252f13">&#9670;&#160;</a></span>printField() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printField </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>

</div>
</div>
<a id="a45639312b8c5aa9ceddb19e654e902b4" name="a45639312b8c5aa9ceddb19e654e902b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45639312b8c5aa9ceddb19e654e902b4">&#9670;&#160;</a></span>printField() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printField </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>

</div>
</div>
<a id="a6760471e3c445f66b94f3f0e96fdfe10" name="a6760471e3c445f66b94f3f0e96fdfe10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6760471e3c445f66b94f3f0e96fdfe10">&#9670;&#160;</a></span>printFileSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printFileSize </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's size.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed is returned for success and zero is returned for failure. </dd></dl>

</div>
</div>
<a id="a0f2f813496fa156f9808a5d33c2d8746" name="a0f2f813496fa156f9808a5d33c2d8746"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f2f813496fa156f9808a5d33c2d8746">&#9670;&#160;</a></span>printModifyDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printModifyDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's modify date and time</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a178a1cbe2bce19758a55bd00fa262732" name="a178a1cbe2bce19758a55bd00fa262732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a178a1cbe2bce19758a55bd00fa262732">&#9670;&#160;</a></span>printName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::printName </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's name</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="acbe2d203d212a50871db77a9b2ba01f6" name="acbe2d203d212a50871db77a9b2ba01f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbe2d203d212a50871db77a9b2ba01f6">&#9670;&#160;</a></span>read() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::read </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read the next byte from a file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>For success return the next byte in the file as an int. If an error occurs or end of file is reached return -1. </dd></dl>

</div>
</div>
<a id="ae8d8cb4cceda9d56e8dae692d04a46e6" name="ae8d8cb4cceda9d56e8dae692d04a46e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8d8cb4cceda9d56e8dae692d04a46e6">&#9670;&#160;</a></span>read() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FsBaseFile::read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read data from a file starting at the current position.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">buf</td><td>Pointer to the location that will receive the data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Maximum number of bytes to read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#acbe2d203d212a50871db77a9b2ba01f6">read()</a> returns the number of bytes read. A value less than <em>count</em>, including zero, will be returned if end of file is reached. If an error occurs, <a class="el" href="#acbe2d203d212a50871db77a9b2ba01f6">read()</a> returns -1. Possible errors include <a class="el" href="#acbe2d203d212a50871db77a9b2ba01f6">read()</a> called before a file has been opened, corrupt file system or an I/O error occurred. </dd></dl>

</div>
</div>
<a id="a8d21f9df86e846e34c3bb11cf7db21bc" name="a8d21f9df86e846e34c3bb11cf7db21bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d21f9df86e846e34c3bb11cf7db21bc">&#9670;&#160;</a></span>remove() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::remove </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove a file.</p>
<p>The directory entry and all data for the file are deleted.</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a file that has a long name. For example if a file has the long name "New Text Document.txt" you should not delete the 8.3 name "NEWTEX~1.TXT".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a8d21f9df86e846e34c3bb11cf7db21bc_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a64feff69c4f09e56247c7f9dc7c74f34" name="a64feff69c4f09e56247c7f9dc7c74f34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64feff69c4f09e56247c7f9dc7c74f34">&#9670;&#160;</a></span>remove() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::remove </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Remove a file.</p>
<p>The directory entry and all data for the file are deleted.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Path for the file to be removed.</td></tr>
  </table>
  </dd>
</dl>
<p>Example use: dirFile.remove(filenameToRemove);</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a file that has a long name. For example if a file has the long name "New Text Document.txt" you should not delete the 8.3 name "NEWTEX~1.TXT".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="af532d87177e86995a053503eb9152115" name="af532d87177e86995a053503eb9152115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af532d87177e86995a053503eb9152115">&#9670;&#160;</a></span>rename() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::rename </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>newPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Rename a file or subdirectory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">newPath</td><td>New path name for the file/directory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a09a408e0ce91f045540b2a088177cec0" name="a09a408e0ce91f045540b2a088177cec0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09a408e0ce91f045540b2a088177cec0">&#9670;&#160;</a></span>rename() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::rename </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>newPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Rename a file or subdirectory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>Directory for the new path. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">newPath</td><td>New path name for the file/directory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a09a408e0ce91f045540b2a088177cec0_cgraph.svg" width="538" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a22f8ef845d610493ebe314e19ddda561" name="a22f8ef845d610493ebe314e19ddda561"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f8ef845d610493ebe314e19ddda561">&#9670;&#160;</a></span>rewind()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::rewind </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the file's current position to zero. </p>

</div>
</div>
<a id="a56bfeb031562a6fb30e057670e6b326d" name="a56bfeb031562a6fb30e057670e6b326d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56bfeb031562a6fb30e057670e6b326d">&#9670;&#160;</a></span>rewindDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsBaseFile::rewindDirectory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Rewind a file if it is a directory </p>

</div>
</div>
<a id="ac47870fd89b0849cda33f2780918a286" name="ac47870fd89b0849cda33f2780918a286"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac47870fd89b0849cda33f2780918a286">&#9670;&#160;</a></span>rmdir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::rmdir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove a directory file.</p>
<p>The directory file will be removed only if it is empty and is not the root directory. <a class="el" href="#ac47870fd89b0849cda33f2780918a286">rmdir()</a> follows DOS and Windows and ignores the read-only attribute for the directory.</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a directory that has a long name. For example if a directory has the long name "New folder" you should not delete the 8.3 name "NEWFOL~1".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_ac47870fd89b0849cda33f2780918a286_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae86486f4e20f4924797124f9c6042bfd" name="ae86486f4e20f4924797124f9c6042bfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae86486f4e20f4924797124f9c6042bfd">&#9670;&#160;</a></span>seek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::seek </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Seek to a new position in the file, which must be between 0 and the size of the file (inclusive).</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>the new file position. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a5fa242a4598eab5caa6efd4bdf62f5c0" name="a5fa242a4598eab5caa6efd4bdf62f5c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fa242a4598eab5caa6efd4bdf62f5c0">&#9670;&#160;</a></span>seekCur()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::seekCur </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the files position to current position + <em>pos</em>. See <a class="el" href="#a460f7598c903b8a4b4fe868dacccb6dd">seekSet()</a>. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The new position in bytes from the current position. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="ade9f9a9ac4d3e0a392a6cc45c9551767" name="ade9f9a9ac4d3e0a392a6cc45c9551767"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade9f9a9ac4d3e0a392a6cc45c9551767">&#9670;&#160;</a></span>seekEnd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::seekEnd </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>offset</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the files position to end-of-file + <em>offset</em>. See <a class="el" href="#a460f7598c903b8a4b4fe868dacccb6dd">seekSet()</a>. Can't be used for directory files since file size is not defined. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The new position in bytes from end-of-file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a460f7598c903b8a4b4fe868dacccb6dd" name="a460f7598c903b8a4b4fe868dacccb6dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a460f7598c903b8a4b4fe868dacccb6dd">&#9670;&#160;</a></span>seekSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::seekSet </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets a file's position.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>The new position in bytes from the beginning of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a03d219b7b8219b94bd7e868d4da28fe3" name="a03d219b7b8219b94bd7e868d4da28fe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03d219b7b8219b94bd7e868d4da28fe3">&#9670;&#160;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t FsBaseFile::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>the file's size. </dd></dl>

</div>
</div>
<a id="acf2d9261c5c1b1b022a0414cdfe0a17b" name="acf2d9261c5c1b1b022a0414cdfe0a17b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf2d9261c5c1b1b022a0414cdfe0a17b">&#9670;&#160;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The <a class="el" href="#acf2d9261c5c1b1b022a0414cdfe0a17b">sync()</a> call causes all modified data and directory fields to be written to the storage device.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_acf2d9261c5c1b1b022a0414cdfe0a17b_icgraph.svg" width="320" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="acea65e639feebaac01964af02a77d324" name="acea65e639feebaac01964af02a77d324"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acea65e639feebaac01964af02a77d324">&#9670;&#160;</a></span>timestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::timestamp </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>year</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>month</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>day</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>hour</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>minute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set a file's timestamps in its directory entry.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>Values for <em>flags</em> are constructed by a bitwise-inclusive OR of flags from the following list</td></tr>
  </table>
  </dd>
</dl>
<p>T_ACCESS - Set the file's last access date and time.</p>
<p>T_CREATE - Set the file's creation date and time.</p>
<p>T_WRITE - Set the file's last write/modification date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">year</td><td>Valid range 1980 - 2107 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">month</td><td>Valid range 1 - 12 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">day</td><td>Valid range 1 - 31 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hour</td><td>Valid range 0 - 23 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">minute</td><td>Valid range 0 - 59 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>Valid range 0 - 59 inclusive</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>It is possible to set an invalid date since there is no check for the number of days in a month.</dd>
<dd>
Modify and access timestamps may be overwritten if a date time callback function has been set by dateTimeCallback().</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a2a0bf00241df08a604f054512746986b" name="a2a0bf00241df08a604f054512746986b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a0bf00241df08a604f054512746986b">&#9670;&#160;</a></span>truncate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::truncate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Truncate a file to the current position.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a47247cc54157ef79e0752f55ba01cf7e" name="a47247cc54157ef79e0752f55ba01cf7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47247cc54157ef79e0752f55ba01cf7e">&#9670;&#160;</a></span>truncate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsBaseFile::truncate </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Truncate a file to a specified length. The current file position will be set to end of file.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>The desired length for the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a09552cb7704706a9f9772ce083c74637" name="a09552cb7704706a9f9772ce083c74637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09552cb7704706a9f9772ce083c74637">&#9670;&#160;</a></span>write() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::write </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a string to a file. Used by the Arduino <a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> class. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>Pointer to the string. Use getWriteError to check for errors. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>count of characters written for success or -1 for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a09552cb7704706a9f9772ce083c74637_cgraph.svg" width="144" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a09552cb7704706a9f9772ce083c74637_icgraph.svg" width="144" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa763e83fea4889828effc3308f13113a" name="aa763e83fea4889828effc3308f13113a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa763e83fea4889828effc3308f13113a">&#9670;&#160;</a></span>write() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::write </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write data to an open file.</p>
<dl class="section note"><dt>Note</dt><dd>Data is moved to the cache but may not be written to the storage device until <a class="el" href="#acf2d9261c5c1b1b022a0414cdfe0a17b">sync()</a> is called.</dd></dl>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buf</td><td>Pointer to the location of the data to be written.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of bytes to write.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#a09552cb7704706a9f9772ce083c74637">write()</a> returns the number of bytes written, always <em>nbyte</em>. If an error occurs, <a class="el" href="#a09552cb7704706a9f9772ce083c74637">write()</a> returns zero and writeError is set. </dd></dl>

</div>
</div>
<a id="a023c0392aa72b32652546f48ef8ba1e5" name="a023c0392aa72b32652546f48ef8ba1e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a023c0392aa72b32652546f48ef8ba1e5">&#9670;&#160;</a></span>write() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FsBaseFile::write </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a byte to a file. Required by the Arduino <a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> class. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>the byte to be written. Use getWriteError to check for errors. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>1 for success and 0 for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a023c0392aa72b32652546f48ef8ba1e5_cgraph.svg" width="144" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d0/db5/classFsBaseFile_a023c0392aa72b32652546f48ef8ba1e5_icgraph.svg" width="144" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="a41d4c5b137c4c27cc06cea5238d22001" name="a41d4c5b137c4c27cc06cea5238d22001"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41d4c5b137c4c27cc06cea5238d22001">&#9670;&#160;</a></span>m_fFile</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a>* FsBaseFile::m_fFile = <a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a24c5c7fc162ea79cf196a59aa6b797f8" name="a24c5c7fc162ea79cf196a59aa6b797f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24c5c7fc162ea79cf196a59aa6b797f8">&#9670;&#160;</a></span>m_fileMem</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/d65/FsNew_8h.xhtml#aa858eeb82c4fc91593a63ad62474c1d7">newalign_t</a> FsBaseFile::m_fileMem[<a class="el" href="../../db/d65/FsNew_8h.xhtml#af1020c14733d4f2bb83497caba4ab010">FS_ALIGN_DIM</a>(<a class="el" href="../../d6/d7f/classExFatFile.xhtml">ExFatFile</a>, <a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a>)]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8aa5a8a7bfd744610cdbd85bd0fe768f" name="a8aa5a8a7bfd744610cdbd85bd0fe768f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8aa5a8a7bfd744610cdbd85bd0fe768f">&#9670;&#160;</a></span>m_xFile</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d7f/classExFatFile.xhtml">ExFatFile</a>* FsBaseFile::m_xFile = <a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../da/d44/FsFile_8h_source.xhtml">FsFile.h</a></li>
<li><a class="el" href="../../da/d3f/FsFile_8cpp.xhtml">FsFile.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/db5/classFsBaseFile.xhtml">FsBaseFile</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
