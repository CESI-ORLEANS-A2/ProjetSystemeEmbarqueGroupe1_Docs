<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe Tiny_BME280</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d4/d1b/classTiny__BME280.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Types publics</a> &#124;
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pro-methods">Fonctions membres protégées</a> &#124;
<a href="#pro-attribs">Attributs protégés</a> &#124;
<a href="../../df/d90/classTiny__BME280-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe Tiny_BME280</div></div>
</div><!--header-->
<div class="contents">

<p>Class that stores state and functions for interacting with <a class="el" href="../../d6/d24/classBME280.xhtml">BME280</a> IC.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d24/Tiny__BME280_8h_source.xhtml">Tiny_BME280.h</a>&gt;</code></p>
<div class="dynheader">
Graphe de collaboration de Tiny_BME280:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d1/dc4/classTiny__BME280__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd8/structTiny__BME280_1_1config.xhtml">config</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">config register  <a href="../../d6/dd8/structTiny__BME280_1_1config.xhtml#details">Plus de détails...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d11/structTiny__BME280_1_1ctrl__hum.xhtml">ctrl_hum</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d11/structTiny__BME280_1_1ctrl__hum.xhtml" title="ctrl_hum register">ctrl_hum</a> register  <a href="../../d6/d11/structTiny__BME280_1_1ctrl__hum.xhtml#details">Plus de détails...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d58/structTiny__BME280_1_1ctrl__meas.xhtml">ctrl_meas</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../d6/d58/structTiny__BME280_1_1ctrl__meas.xhtml" title="ctrl_meas register">ctrl_meas</a> register  <a href="../../d6/d58/structTiny__BME280_1_1ctrl__meas.xhtml#details">Plus de détails...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Types publics</h2></td></tr>
<tr class="memitem:aabf282324bed1debd8aff32a2b86aaf7" id="r_aabf282324bed1debd8aff32a2b86aaf7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a> { <br />
&#160;&#160;<a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7ac22109e1018a21d80ad64f6df9f70fd2">SAMPLING_NONE</a> = 0b000
, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a40b0685bddd85147f6e00878a268924b">SAMPLING_X1</a> = 0b001
, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a767281de286d606b215955dcfd816be6">SAMPLING_X2</a> = 0b010
, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7ad3e9a5c0d9c7f9f1f45bb3849dfe3b18">SAMPLING_X4</a> = 0b011
, <br />
&#160;&#160;<a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a1a4605b0b28e1be163346d11908935b2">SAMPLING_X8</a> = 0b100
, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a> = 0b101
<br />
 }</td></tr>
<tr class="memdesc:aabf282324bed1debd8aff32a2b86aaf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">sampling rates  <a href="#aabf282324bed1debd8aff32a2b86aaf7">Plus de détails...</a><br /></td></tr>
<tr class="separator:aabf282324bed1debd8aff32a2b86aaf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8241882ad2581ee978da33746d4c6e2d" id="r_a8241882ad2581ee978da33746d4c6e2d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8241882ad2581ee978da33746d4c6e2d">sensor_mode</a> { <a class="el" href="#a8241882ad2581ee978da33746d4c6e2daf85f8e5d4eea1ef8dd563a96dac2400d">MODE_SLEEP</a> = 0b00
, <a class="el" href="#a8241882ad2581ee978da33746d4c6e2dab294b6826124a84d443c6fd5591b2588">MODE_FORCED</a> = 0b01
, <a class="el" href="#a8241882ad2581ee978da33746d4c6e2da25ae9cdf05e204b5911690e3e4748cf4">MODE_NORMAL</a> = 0b11
 }</td></tr>
<tr class="memdesc:a8241882ad2581ee978da33746d4c6e2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">power modes  <a href="#a8241882ad2581ee978da33746d4c6e2d">Plus de détails...</a><br /></td></tr>
<tr class="separator:a8241882ad2581ee978da33746d4c6e2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f24240e5ffc3a447f989fc281efbcc5" id="r_a3f24240e5ffc3a447f989fc281efbcc5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5">sensor_filter</a> { <br />
&#160;&#160;<a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5ac5f0311967099886ad08e72d1af68d33">FILTER_OFF</a> = 0b000
, <a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5a32460b1da54d57c71a445503867dc928">FILTER_X2</a> = 0b001
, <a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5a69c0d54e1d217f5d0e4fdee4cc57492a">FILTER_X4</a> = 0b010
, <a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5a4d04692e0dcbb55ad172a5a5e7453110">FILTER_X8</a> = 0b011
, <br />
&#160;&#160;<a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5ae82f46cd8c7130ca3d1a390a66314a5d">FILTER_X16</a> = 0b100
<br />
 }</td></tr>
<tr class="memdesc:a3f24240e5ffc3a447f989fc281efbcc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">filter values  <a href="#a3f24240e5ffc3a447f989fc281efbcc5">Plus de détails...</a><br /></td></tr>
<tr class="separator:a3f24240e5ffc3a447f989fc281efbcc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc3e03071562eef85f7136fd3aafadb2" id="r_adc3e03071562eef85f7136fd3aafadb2"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc3e03071562eef85f7136fd3aafadb2">standby_duration</a> { <br />
&#160;&#160;<a class="el" href="#adc3e03071562eef85f7136fd3aafadb2ac8e5e06b23089757d41ceff104e1f4e5">STANDBY_MS_0_5</a> = 0b000
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2a6490b8d738870b804c612b629f612e20">STANDBY_MS_10</a> = 0b110
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2a487880ba54f560c9371a1f6cf9de59ec">STANDBY_MS_20</a> = 0b111
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2a909e2473258c0a22f85d5cdbc6185ba6">STANDBY_MS_62_5</a> = 0b001
, <br />
&#160;&#160;<a class="el" href="#adc3e03071562eef85f7136fd3aafadb2af071fe34464ed1e6807334aca04ed501">STANDBY_MS_125</a> = 0b010
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2acce684ae2f7ea1d30bc55be07f2c685e">STANDBY_MS_250</a> = 0b011
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2af61508d5eace84bfa562b2328b4afb4c">STANDBY_MS_500</a> = 0b100
, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2a1c79a1a89f91ec8aa858ab3964eef2c3">STANDBY_MS_1000</a> = 0b101
<br />
 }</td></tr>
<tr class="memdesc:adc3e03071562eef85f7136fd3aafadb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">standby duration in ms  <a href="#adc3e03071562eef85f7136fd3aafadb2">Plus de détails...</a><br /></td></tr>
<tr class="separator:adc3e03071562eef85f7136fd3aafadb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:a62046b8b5886ecad13ac036cb43a857d" id="r_a62046b8b5886ecad13ac036cb43a857d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a62046b8b5886ecad13ac036cb43a857d">Tiny_BME280</a> ()</td></tr>
<tr class="memdesc:a62046b8b5886ecad13ac036cb43a857d"><td class="mdescLeft">&#160;</td><td class="mdescRight">class constructor  <br /></td></tr>
<tr class="separator:a62046b8b5886ecad13ac036cb43a857d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ce6bfebdb11ae151c454d4dbc7e827" id="r_a97ce6bfebdb11ae151c454d4dbc7e827"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97ce6bfebdb11ae151c454d4dbc7e827">~Tiny_BME280</a> (void)</td></tr>
<tr class="separator:a97ce6bfebdb11ae151c454d4dbc7e827"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fbe17b84233a7c87a29ade4f72469ea" id="r_a0fbe17b84233a7c87a29ade4f72469ea"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0fbe17b84233a7c87a29ade4f72469ea">begin</a> (uint8_t addr=<a class="el" href="../../d8/d24/Tiny__BME280_8h.xhtml#a632fe389011b56233474fad5bc075e4b">BME280_ADDRESS</a>, TwoWire *theWire=&amp;Wire)</td></tr>
<tr class="memdesc:a0fbe17b84233a7c87a29ade4f72469ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise sensor with given parameters / settings.  <br /></td></tr>
<tr class="separator:a0fbe17b84233a7c87a29ade4f72469ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b3b5a5e1edf6e327c19e40367dc7e46" id="r_a5b3b5a5e1edf6e327c19e40367dc7e46"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5b3b5a5e1edf6e327c19e40367dc7e46">init</a> ()</td></tr>
<tr class="memdesc:a5b3b5a5e1edf6e327c19e40367dc7e46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise sensor with given parameters / settings.  <br /></td></tr>
<tr class="separator:a5b3b5a5e1edf6e327c19e40367dc7e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef48ff16d11914ebd34628df02c63f9" id="r_a5ef48ff16d11914ebd34628df02c63f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ef48ff16d11914ebd34628df02c63f9">setSampling</a> (<a class="el" href="#a8241882ad2581ee978da33746d4c6e2d">sensor_mode</a> <a class="el" href="../../de/dfb/src_2main_8cpp.xhtml#a2618e89b4c26dc851feae865df3a1a49">mode</a>=<a class="el" href="#a8241882ad2581ee978da33746d4c6e2da25ae9cdf05e204b5911690e3e4748cf4">MODE_NORMAL</a>, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a> tempSampling=<a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a>, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a> pressSampling=<a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a>, <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a> humSampling=<a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a>, <a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5">sensor_filter</a> filter=<a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5ac5f0311967099886ad08e72d1af68d33">FILTER_OFF</a>, <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2">standby_duration</a> duration=<a class="el" href="#adc3e03071562eef85f7136fd3aafadb2ac8e5e06b23089757d41ceff104e1f4e5">STANDBY_MS_0_5</a>)</td></tr>
<tr class="memdesc:a5ef48ff16d11914ebd34628df02c63f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">setup sensor with given parameters / settings  <br /></td></tr>
<tr class="separator:a5ef48ff16d11914ebd34628df02c63f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46e70010eee56ee4488e1353a7d6e275" id="r_a46e70010eee56ee4488e1353a7d6e275"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a46e70010eee56ee4488e1353a7d6e275">takeForcedMeasurement</a> ()</td></tr>
<tr class="memdesc:a46e70010eee56ee4488e1353a7d6e275"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take a new measurement (only possible in forced mode)  <br /></td></tr>
<tr class="separator:a46e70010eee56ee4488e1353a7d6e275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a106df67231caaea5cf96824d908efff0" id="r_a106df67231caaea5cf96824d908efff0"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a106df67231caaea5cf96824d908efff0">readTemperature</a> (void)</td></tr>
<tr class="memdesc:a106df67231caaea5cf96824d908efff0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the temperature from the sensor.  <br /></td></tr>
<tr class="separator:a106df67231caaea5cf96824d908efff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d9bd7e6e3ec84d4dbaaf4fd0292344f" id="r_a6d9bd7e6e3ec84d4dbaaf4fd0292344f"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d9bd7e6e3ec84d4dbaaf4fd0292344f">readPressure</a> (void)</td></tr>
<tr class="memdesc:a6d9bd7e6e3ec84d4dbaaf4fd0292344f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pressure from the sensor.  <br /></td></tr>
<tr class="separator:a6d9bd7e6e3ec84d4dbaaf4fd0292344f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a605f1e7a8ff97f7953e929f7dae0305f" id="r_a605f1e7a8ff97f7953e929f7dae0305f"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a605f1e7a8ff97f7953e929f7dae0305f">readHumidity</a> (void)</td></tr>
<tr class="memdesc:a605f1e7a8ff97f7953e929f7dae0305f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the humidity from the sensor.  <br /></td></tr>
<tr class="separator:a605f1e7a8ff97f7953e929f7dae0305f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31778391214d9703b30b6a045cab6614" id="r_a31778391214d9703b30b6a045cab6614"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a31778391214d9703b30b6a045cab6614">readAltitude</a> (float seaLevel)</td></tr>
<tr class="separator:a31778391214d9703b30b6a045cab6614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a9b9d64c35910427001c1d764460ad" id="r_a64a9b9d64c35910427001c1d764460ad"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a64a9b9d64c35910427001c1d764460ad">seaLevelForAltitude</a> (float altitude, float pressure)</td></tr>
<tr class="separator:a64a9b9d64c35910427001c1d764460ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b400ad396c7e678d37130a79a465aef" id="r_a3b400ad396c7e678d37130a79a465aef"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b400ad396c7e678d37130a79a465aef">sensorID</a> (void)</td></tr>
<tr class="separator:a3b400ad396c7e678d37130a79a465aef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef215f91f80923feed6735b8f9fdc50c" id="r_aef215f91f80923feed6735b8f9fdc50c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef215f91f80923feed6735b8f9fdc50c">getTemperatureSensor</a> (void)</td></tr>
<tr class="memdesc:aef215f91f80923feed6735b8f9fdc50c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the temp sensor component.  <br /></td></tr>
<tr class="separator:aef215f91f80923feed6735b8f9fdc50c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ed943794603113c96f005f47702b27" id="r_a97ed943794603113c96f005f47702b27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97ed943794603113c96f005f47702b27">getPressureSensor</a> (void)</td></tr>
<tr class="memdesc:a97ed943794603113c96f005f47702b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the pressure sensor component.  <br /></td></tr>
<tr class="separator:a97ed943794603113c96f005f47702b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f1897e8bde5486829679261b7783d93" id="r_a0f1897e8bde5486829679261b7783d93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0f1897e8bde5486829679261b7783d93">getHumiditySensor</a> (void)</td></tr>
<tr class="memdesc:a0f1897e8bde5486829679261b7783d93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the humidity sensor component.  <br /></td></tr>
<tr class="separator:a0f1897e8bde5486829679261b7783d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Fonctions membres protégées</h2></td></tr>
<tr class="memitem:ab43c5a7fdfa831563e9b588c2928ed8e" id="r_ab43c5a7fdfa831563e9b588c2928ed8e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab43c5a7fdfa831563e9b588c2928ed8e">readCoefficients</a> (void)</td></tr>
<tr class="memdesc:ab43c5a7fdfa831563e9b588c2928ed8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the factory-set coefficients.  <br /></td></tr>
<tr class="separator:ab43c5a7fdfa831563e9b588c2928ed8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9df818cc5d654495a403dbe121d5322" id="r_ab9df818cc5d654495a403dbe121d5322"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab9df818cc5d654495a403dbe121d5322">isReadingCalibration</a> (void)</td></tr>
<tr class="memdesc:ab9df818cc5d654495a403dbe121d5322"><td class="mdescLeft">&#160;</td><td class="mdescRight">return true if chip is busy reading cal data  <br /></td></tr>
<tr class="separator:ab9df818cc5d654495a403dbe121d5322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a42aed9801eb95065745eabdf7e670" id="r_ad9a42aed9801eb95065745eabdf7e670"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad9a42aed9801eb95065745eabdf7e670">write8</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg, <a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> value)</td></tr>
<tr class="memdesc:ad9a42aed9801eb95065745eabdf7e670"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes an 8 bit value over I2C.  <br /></td></tr>
<tr class="separator:ad9a42aed9801eb95065745eabdf7e670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631cc94459e8f0cdb46caacf6266eb57" id="r_a631cc94459e8f0cdb46caacf6266eb57"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a631cc94459e8f0cdb46caacf6266eb57">read8</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:a631cc94459e8f0cdb46caacf6266eb57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads an 8 bit value over I2C.  <br /></td></tr>
<tr class="separator:a631cc94459e8f0cdb46caacf6266eb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a336e34f6d83b30ea2fd7da60954cccb1" id="r_a336e34f6d83b30ea2fd7da60954cccb1"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a336e34f6d83b30ea2fd7da60954cccb1">read16</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:a336e34f6d83b30ea2fd7da60954cccb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a 16 bit value over I2C.  <br /></td></tr>
<tr class="separator:a336e34f6d83b30ea2fd7da60954cccb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2b70e2d8fb9580e63f5c4288e041a42" id="r_ab2b70e2d8fb9580e63f5c4288e041a42"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab2b70e2d8fb9580e63f5c4288e041a42">read24</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:ab2b70e2d8fb9580e63f5c4288e041a42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a 24 bit value over I2C.  <br /></td></tr>
<tr class="separator:ab2b70e2d8fb9580e63f5c4288e041a42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654ab9e5fea8b7d3d7c5e677bbc024dc" id="r_a654ab9e5fea8b7d3d7c5e677bbc024dc"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a654ab9e5fea8b7d3d7c5e677bbc024dc">readS16</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:a654ab9e5fea8b7d3d7c5e677bbc024dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a signed 16 bit value over I2C.  <br /></td></tr>
<tr class="separator:a654ab9e5fea8b7d3d7c5e677bbc024dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91c6dd90a0518655c27d12d0f7d462fe" id="r_a91c6dd90a0518655c27d12d0f7d462fe"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91c6dd90a0518655c27d12d0f7d462fe">read16_LE</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:a91c6dd90a0518655c27d12d0f7d462fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a signed 16 bit little endian value over I2C.  <br /></td></tr>
<tr class="separator:a91c6dd90a0518655c27d12d0f7d462fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91b268f8bf722d5f317e5d6029116d7a" id="r_a91b268f8bf722d5f317e5d6029116d7a"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91b268f8bf722d5f317e5d6029116d7a">readS16_LE</a> (<a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a> reg)</td></tr>
<tr class="memdesc:a91b268f8bf722d5f317e5d6029116d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a signed little endian 16 bit value over I2C.  <br /></td></tr>
<tr class="separator:a91b268f8bf722d5f317e5d6029116d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Attributs protégés</h2></td></tr>
<tr class="memitem:a9fffa57d572a1c788504a8ab43733d1c" id="r_a9fffa57d572a1c788504a8ab43733d1c"><td class="memItemLeft" align="right" valign="top">TwoWire *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9fffa57d572a1c788504a8ab43733d1c">_wire</a></td></tr>
<tr class="memdesc:a9fffa57d572a1c788504a8ab43733d1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">pointer to a TwoWire object  <br /></td></tr>
<tr class="separator:a9fffa57d572a1c788504a8ab43733d1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd4ebb4c5630a2bf975e79f85cd94251" id="r_afd4ebb4c5630a2bf975e79f85cd94251"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd1/classTiny__BME280__Temp.xhtml">Tiny_BME280_Temp</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd4ebb4c5630a2bf975e79f85cd94251">temp_sensor</a> = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td></tr>
<tr class="memdesc:afd4ebb4c5630a2bf975e79f85cd94251"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat temperature sensor component.  <br /></td></tr>
<tr class="separator:afd4ebb4c5630a2bf975e79f85cd94251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadafcce6beea1f676bc8c2480ad996df" id="r_aadafcce6beea1f676bc8c2480ad996df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../db/d9c/classTiny__BME280__Pressure.xhtml">Tiny_BME280_Pressure</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aadafcce6beea1f676bc8c2480ad996df">pressure_sensor</a> = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td></tr>
<tr class="memdesc:aadafcce6beea1f676bc8c2480ad996df"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat pressure sensor component.  <br /></td></tr>
<tr class="separator:aadafcce6beea1f676bc8c2480ad996df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7edcfaad1dcec8192a99a1d7a199e889" id="r_a7edcfaad1dcec8192a99a1d7a199e889"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d7/dd5/classTiny__BME280__Humidity.xhtml">Tiny_BME280_Humidity</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7edcfaad1dcec8192a99a1d7a199e889">humidity_sensor</a> = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td></tr>
<tr class="memdesc:a7edcfaad1dcec8192a99a1d7a199e889"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat humidity sensor component.  <br /></td></tr>
<tr class="separator:a7edcfaad1dcec8192a99a1d7a199e889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a877cba58b35c912c46d157402e49ac60" id="r_a877cba58b35c912c46d157402e49ac60"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a877cba58b35c912c46d157402e49ac60">_i2caddr</a></td></tr>
<tr class="memdesc:a877cba58b35c912c46d157402e49ac60"><td class="mdescLeft">&#160;</td><td class="mdescRight">I2C addr for the TwoWire interface.  <br /></td></tr>
<tr class="separator:a877cba58b35c912c46d157402e49ac60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a704ce4005f67a480c3d786b9952f3128" id="r_a704ce4005f67a480c3d786b9952f3128"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a704ce4005f67a480c3d786b9952f3128">_sensorID</a></td></tr>
<tr class="memdesc:a704ce4005f67a480c3d786b9952f3128"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of the BME <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a>.  <br /></td></tr>
<tr class="separator:a704ce4005f67a480c3d786b9952f3128"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93062dbfb61019a7a830edd447e24b51" id="r_a93062dbfb61019a7a830edd447e24b51"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a93062dbfb61019a7a830edd447e24b51">t_fine</a></td></tr>
<tr class="separator:a93062dbfb61019a7a830edd447e24b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ad16eda56b7e90bcd7a5ec93ab71402" id="r_a3ad16eda56b7e90bcd7a5ec93ab71402"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d77/structbme280__calib__data.xhtml">bme280_calib_data</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ad16eda56b7e90bcd7a5ec93ab71402">_bme280_calib</a></td></tr>
<tr class="memdesc:a3ad16eda56b7e90bcd7a5ec93ab71402"><td class="mdescLeft">&#160;</td><td class="mdescRight">here calibration data is stored  <br /></td></tr>
<tr class="separator:a3ad16eda56b7e90bcd7a5ec93ab71402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adad02c3c3e5d3f95c3bba27f7b4f5843" id="r_adad02c3c3e5d3f95c3bba27f7b4f5843"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/dd8/structTiny__BME280_1_1config.xhtml">config</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adad02c3c3e5d3f95c3bba27f7b4f5843">_configReg</a></td></tr>
<tr class="memdesc:adad02c3c3e5d3f95c3bba27f7b4f5843"><td class="mdescLeft">&#160;</td><td class="mdescRight">config register object  <br /></td></tr>
<tr class="separator:adad02c3c3e5d3f95c3bba27f7b4f5843"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67a0cc859f97725382968afcebcb024f" id="r_a67a0cc859f97725382968afcebcb024f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d58/structTiny__BME280_1_1ctrl__meas.xhtml">ctrl_meas</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a67a0cc859f97725382968afcebcb024f">_measReg</a></td></tr>
<tr class="memdesc:a67a0cc859f97725382968afcebcb024f"><td class="mdescLeft">&#160;</td><td class="mdescRight">measurement register object  <br /></td></tr>
<tr class="separator:a67a0cc859f97725382968afcebcb024f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8343f0e929630b5b72101419acf4888b" id="r_a8343f0e929630b5b72101419acf4888b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d11/structTiny__BME280_1_1ctrl__hum.xhtml">ctrl_hum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8343f0e929630b5b72101419acf4888b">_humReg</a></td></tr>
<tr class="memdesc:a8343f0e929630b5b72101419acf4888b"><td class="mdescLeft">&#160;</td><td class="mdescRight">hum register object  <br /></td></tr>
<tr class="separator:a8343f0e929630b5b72101419acf4888b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p>Class that stores state and functions for interacting with <a class="el" href="../../d6/d24/classBME280.xhtml">BME280</a> IC. </p>
</div><h2 class="groupheader">Documentation des énumérations membres</h2>
<a id="a3f24240e5ffc3a447f989fc281efbcc5" name="a3f24240e5ffc3a447f989fc281efbcc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f24240e5ffc3a447f989fc281efbcc5">&#9670;&#160;</a></span>sensor_filter</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5">Tiny_BME280::sensor_filter</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>filter values </p>
<table class="fieldtable">
<tr><th colspan="2">Valeurs énumérées</th></tr><tr><td class="fieldname"><a id="a3f24240e5ffc3a447f989fc281efbcc5ac5f0311967099886ad08e72d1af68d33" name="a3f24240e5ffc3a447f989fc281efbcc5ac5f0311967099886ad08e72d1af68d33"></a>FILTER_OFF&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3f24240e5ffc3a447f989fc281efbcc5a32460b1da54d57c71a445503867dc928" name="a3f24240e5ffc3a447f989fc281efbcc5a32460b1da54d57c71a445503867dc928"></a>FILTER_X2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3f24240e5ffc3a447f989fc281efbcc5a69c0d54e1d217f5d0e4fdee4cc57492a" name="a3f24240e5ffc3a447f989fc281efbcc5a69c0d54e1d217f5d0e4fdee4cc57492a"></a>FILTER_X4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3f24240e5ffc3a447f989fc281efbcc5a4d04692e0dcbb55ad172a5a5e7453110" name="a3f24240e5ffc3a447f989fc281efbcc5a4d04692e0dcbb55ad172a5a5e7453110"></a>FILTER_X8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a3f24240e5ffc3a447f989fc281efbcc5ae82f46cd8c7130ca3d1a390a66314a5d" name="a3f24240e5ffc3a447f989fc281efbcc5ae82f46cd8c7130ca3d1a390a66314a5d"></a>FILTER_X16&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a8241882ad2581ee978da33746d4c6e2d" name="a8241882ad2581ee978da33746d4c6e2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8241882ad2581ee978da33746d4c6e2d">&#9670;&#160;</a></span>sensor_mode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#a8241882ad2581ee978da33746d4c6e2d">Tiny_BME280::sensor_mode</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>power modes </p>
<table class="fieldtable">
<tr><th colspan="2">Valeurs énumérées</th></tr><tr><td class="fieldname"><a id="a8241882ad2581ee978da33746d4c6e2daf85f8e5d4eea1ef8dd563a96dac2400d" name="a8241882ad2581ee978da33746d4c6e2daf85f8e5d4eea1ef8dd563a96dac2400d"></a>MODE_SLEEP&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a8241882ad2581ee978da33746d4c6e2dab294b6826124a84d443c6fd5591b2588" name="a8241882ad2581ee978da33746d4c6e2dab294b6826124a84d443c6fd5591b2588"></a>MODE_FORCED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a8241882ad2581ee978da33746d4c6e2da25ae9cdf05e204b5911690e3e4748cf4" name="a8241882ad2581ee978da33746d4c6e2da25ae9cdf05e204b5911690e3e4748cf4"></a>MODE_NORMAL&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="aabf282324bed1debd8aff32a2b86aaf7" name="aabf282324bed1debd8aff32a2b86aaf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabf282324bed1debd8aff32a2b86aaf7">&#9670;&#160;</a></span>sensor_sampling</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">Tiny_BME280::sensor_sampling</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sampling rates </p>
<table class="fieldtable">
<tr><th colspan="2">Valeurs énumérées</th></tr><tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7ac22109e1018a21d80ad64f6df9f70fd2" name="aabf282324bed1debd8aff32a2b86aaf7ac22109e1018a21d80ad64f6df9f70fd2"></a>SAMPLING_NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7a40b0685bddd85147f6e00878a268924b" name="aabf282324bed1debd8aff32a2b86aaf7a40b0685bddd85147f6e00878a268924b"></a>SAMPLING_X1&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7a767281de286d606b215955dcfd816be6" name="aabf282324bed1debd8aff32a2b86aaf7a767281de286d606b215955dcfd816be6"></a>SAMPLING_X2&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7ad3e9a5c0d9c7f9f1f45bb3849dfe3b18" name="aabf282324bed1debd8aff32a2b86aaf7ad3e9a5c0d9c7f9f1f45bb3849dfe3b18"></a>SAMPLING_X4&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7a1a4605b0b28e1be163346d11908935b2" name="aabf282324bed1debd8aff32a2b86aaf7a1a4605b0b28e1be163346d11908935b2"></a>SAMPLING_X8&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629" name="aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629"></a>SAMPLING_X16&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="adc3e03071562eef85f7136fd3aafadb2" name="adc3e03071562eef85f7136fd3aafadb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc3e03071562eef85f7136fd3aafadb2">&#9670;&#160;</a></span>standby_duration</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#adc3e03071562eef85f7136fd3aafadb2">Tiny_BME280::standby_duration</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>standby duration in ms </p>
<table class="fieldtable">
<tr><th colspan="2">Valeurs énumérées</th></tr><tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2ac8e5e06b23089757d41ceff104e1f4e5" name="adc3e03071562eef85f7136fd3aafadb2ac8e5e06b23089757d41ceff104e1f4e5"></a>STANDBY_MS_0_5&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2a6490b8d738870b804c612b629f612e20" name="adc3e03071562eef85f7136fd3aafadb2a6490b8d738870b804c612b629f612e20"></a>STANDBY_MS_10&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2a487880ba54f560c9371a1f6cf9de59ec" name="adc3e03071562eef85f7136fd3aafadb2a487880ba54f560c9371a1f6cf9de59ec"></a>STANDBY_MS_20&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2a909e2473258c0a22f85d5cdbc6185ba6" name="adc3e03071562eef85f7136fd3aafadb2a909e2473258c0a22f85d5cdbc6185ba6"></a>STANDBY_MS_62_5&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2af071fe34464ed1e6807334aca04ed501" name="adc3e03071562eef85f7136fd3aafadb2af071fe34464ed1e6807334aca04ed501"></a>STANDBY_MS_125&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2acce684ae2f7ea1d30bc55be07f2c685e" name="adc3e03071562eef85f7136fd3aafadb2acce684ae2f7ea1d30bc55be07f2c685e"></a>STANDBY_MS_250&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2af61508d5eace84bfa562b2328b4afb4c" name="adc3e03071562eef85f7136fd3aafadb2af61508d5eace84bfa562b2328b4afb4c"></a>STANDBY_MS_500&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adc3e03071562eef85f7136fd3aafadb2a1c79a1a89f91ec8aa858ab3964eef2c3" name="adc3e03071562eef85f7136fd3aafadb2a1c79a1a89f91ec8aa858ab3964eef2c3"></a>STANDBY_MS_1000&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="a62046b8b5886ecad13ac036cb43a857d" name="a62046b8b5886ecad13ac036cb43a857d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62046b8b5886ecad13ac036cb43a857d">&#9670;&#160;</a></span>Tiny_BME280()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Tiny_BME280::Tiny_BME280 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>class constructor </p>

</div>
</div>
<a id="a97ce6bfebdb11ae151c454d4dbc7e827" name="a97ce6bfebdb11ae151c454d4dbc7e827"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97ce6bfebdb11ae151c454d4dbc7e827">&#9670;&#160;</a></span>~Tiny_BME280()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Tiny_BME280::~Tiny_BME280 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="a0fbe17b84233a7c87a29ade4f72469ea" name="a0fbe17b84233a7c87a29ade4f72469ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fbe17b84233a7c87a29ade4f72469ea">&#9670;&#160;</a></span>begin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Tiny_BME280::begin </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>addr</em> = <code><a class="el" href="../../d8/d24/Tiny__BME280_8h.xhtml#a632fe389011b56233474fad5bc075e4b">BME280_ADDRESS</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TwoWire *&#160;</td>
          <td class="paramname"><em>theWire</em> = <code>&amp;Wire</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise sensor with given parameters / settings. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">addr</td><td>the I2C address the device can be found on </td></tr>
    <tr><td class="paramname">theWire</td><td>the I2C object to use, defaults to &amp;Wire </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true on success, false otherwise </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a0fbe17b84233a7c87a29ade4f72469ea_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0f1897e8bde5486829679261b7783d93" name="a0f1897e8bde5486829679261b7783d93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f1897e8bde5486829679261b7783d93">&#9670;&#160;</a></span>getHumiditySensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> * Tiny_BME280::getHumiditySensor </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the humidity sensor component. </p>
<dl class="section return"><dt>Renvoie</dt><dd><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> pointer to humidity sensor </dd></dl>

</div>
</div>
<a id="a97ed943794603113c96f005f47702b27" name="a97ed943794603113c96f005f47702b27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97ed943794603113c96f005f47702b27">&#9670;&#160;</a></span>getPressureSensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> * Tiny_BME280::getPressureSensor </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the pressure sensor component. </p>
<dl class="section return"><dt>Renvoie</dt><dd><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> pointer to pressure sensor </dd></dl>

</div>
</div>
<a id="aef215f91f80923feed6735b8f9fdc50c" name="aef215f91f80923feed6735b8f9fdc50c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef215f91f80923feed6735b8f9fdc50c">&#9670;&#160;</a></span>getTemperatureSensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml">Adafruit_Sensor</a> * Tiny_BME280::getTemperatureSensor </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an Adafruit Unified <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> object for the temp sensor component. </p>
<dl class="section return"><dt>Renvoie</dt><dd><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> pointer to temperature sensor </dd></dl>

</div>
</div>
<a id="a5b3b5a5e1edf6e327c19e40367dc7e46" name="a5b3b5a5e1edf6e327c19e40367dc7e46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b3b5a5e1edf6e327c19e40367dc7e46">&#9670;&#160;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Tiny_BME280::init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialise sensor with given parameters / settings. </p>
<dl class="section return"><dt>Renvoie</dt><dd>true on success, false otherwise </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a5b3b5a5e1edf6e327c19e40367dc7e46_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a5b3b5a5e1edf6e327c19e40367dc7e46_icgraph.svg" width="352" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab9df818cc5d654495a403dbe121d5322" name="ab9df818cc5d654495a403dbe121d5322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9df818cc5d654495a403dbe121d5322">&#9670;&#160;</a></span>isReadingCalibration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Tiny_BME280::isReadingCalibration </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>return true if chip is busy reading cal data </p>
<dl class="section return"><dt>Renvoie</dt><dd>true if reading calibration, false otherwise </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ab9df818cc5d654495a403dbe121d5322_cgraph.svg" width="467" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ab9df818cc5d654495a403dbe121d5322_icgraph.svg" width="654" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a336e34f6d83b30ea2fd7da60954cccb1" name="a336e34f6d83b30ea2fd7da60954cccb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a336e34f6d83b30ea2fd7da60954cccb1">&#9670;&#160;</a></span>read16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t Tiny_BME280::read16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a 16 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the 16 bit data value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a336e34f6d83b30ea2fd7da60954cccb1_icgraph.svg" width="100%" height="423"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a91c6dd90a0518655c27d12d0f7d462fe" name="a91c6dd90a0518655c27d12d0f7d462fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91c6dd90a0518655c27d12d0f7d462fe">&#9670;&#160;</a></span>read16_LE()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t Tiny_BME280::read16_LE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a signed 16 bit little endian value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the 16 bit data value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a91c6dd90a0518655c27d12d0f7d462fe_cgraph.svg" width="407" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a91c6dd90a0518655c27d12d0f7d462fe_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab2b70e2d8fb9580e63f5c4288e041a42" name="ab2b70e2d8fb9580e63f5c4288e041a42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2b70e2d8fb9580e63f5c4288e041a42">&#9670;&#160;</a></span>read24()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t Tiny_BME280::read24 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a 24 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the 24 bit data value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ab2b70e2d8fb9580e63f5c4288e041a42_icgraph.svg" width="100%" height="439"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a631cc94459e8f0cdb46caacf6266eb57" name="a631cc94459e8f0cdb46caacf6266eb57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a631cc94459e8f0cdb46caacf6266eb57">&#9670;&#160;</a></span>read8()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t Tiny_BME280::read8 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads an 8 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the data byte read from the device </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a631cc94459e8f0cdb46caacf6266eb57_icgraph.svg" width="100%" height="421"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a31778391214d9703b30b6a045cab6614" name="a31778391214d9703b30b6a045cab6614"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31778391214d9703b30b6a045cab6614">&#9670;&#160;</a></span>readAltitude()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float Tiny_BME280::readAltitude </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>seaLevel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calculates the altitude (in meters) from the specified atmospheric pressure (in hPa), and sea-level pressure (in hPa). </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">seaLevel</td><td>Sea-level pressure in hPa </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the altitude value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a31778391214d9703b30b6a045cab6614_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab43c5a7fdfa831563e9b588c2928ed8e" name="ab43c5a7fdfa831563e9b588c2928ed8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab43c5a7fdfa831563e9b588c2928ed8e">&#9670;&#160;</a></span>readCoefficients()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Tiny_BME280::readCoefficients </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads the factory-set coefficients. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ab43c5a7fdfa831563e9b588c2928ed8e_cgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ab43c5a7fdfa831563e9b588c2928ed8e_icgraph.svg" width="624" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a605f1e7a8ff97f7953e929f7dae0305f" name="a605f1e7a8ff97f7953e929f7dae0305f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a605f1e7a8ff97f7953e929f7dae0305f">&#9670;&#160;</a></span>readHumidity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float Tiny_BME280::readHumidity </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the humidity from the sensor. </p>
<dl class="section return"><dt>Renvoie</dt><dd>the humidity value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a605f1e7a8ff97f7953e929f7dae0305f_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a605f1e7a8ff97f7953e929f7dae0305f_icgraph.svg" width="443" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6d9bd7e6e3ec84d4dbaaf4fd0292344f" name="a6d9bd7e6e3ec84d4dbaaf4fd0292344f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d9bd7e6e3ec84d4dbaaf4fd0292344f">&#9670;&#160;</a></span>readPressure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float Tiny_BME280::readPressure </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the pressure from the sensor. </p>
<dl class="section return"><dt>Renvoie</dt><dd>the pressure value (in Pascal) read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a6d9bd7e6e3ec84d4dbaaf4fd0292344f_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a6d9bd7e6e3ec84d4dbaaf4fd0292344f_icgraph.svg" width="460" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a654ab9e5fea8b7d3d7c5e677bbc024dc" name="a654ab9e5fea8b7d3d7c5e677bbc024dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a654ab9e5fea8b7d3d7c5e677bbc024dc">&#9670;&#160;</a></span>readS16()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t Tiny_BME280::readS16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a signed 16 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the 16 bit data value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a654ab9e5fea8b7d3d7c5e677bbc024dc_cgraph.svg" width="392" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a91b268f8bf722d5f317e5d6029116d7a" name="a91b268f8bf722d5f317e5d6029116d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91b268f8bf722d5f317e5d6029116d7a">&#9670;&#160;</a></span>readS16_LE()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t Tiny_BME280::readS16_LE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads a signed little endian 16 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to read from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the 16 bit data value read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a91b268f8bf722d5f317e5d6029116d7a_cgraph.svg" width="648" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a91b268f8bf722d5f317e5d6029116d7a_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a106df67231caaea5cf96824d908efff0" name="a106df67231caaea5cf96824d908efff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a106df67231caaea5cf96824d908efff0">&#9670;&#160;</a></span>readTemperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float Tiny_BME280::readTemperature </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the temperature from the sensor. </p>
<dl class="section return"><dt>Renvoie</dt><dd>the temperature read from the device </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a106df67231caaea5cf96824d908efff0_cgraph.svg" width="451" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a106df67231caaea5cf96824d908efff0_icgraph.svg" width="100%" height="449"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a64a9b9d64c35910427001c1d764460ad" name="a64a9b9d64c35910427001c1d764460ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64a9b9d64c35910427001c1d764460ad">&#9670;&#160;</a></span>seaLevelForAltitude()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float Tiny_BME280::seaLevelForAltitude </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>altitude</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>atmospheric</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calculates the pressure at sea level (in hPa) from the specified altitude (in meters), and atmospheric pressure (in hPa). </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">altitude</td><td>Altitude in meters </td></tr>
    <tr><td class="paramname">atmospheric</td><td>Atmospheric pressure in hPa </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the pressure at sea level (in hPa) from the specified altitude </dd></dl>

</div>
</div>
<a id="a3b400ad396c7e678d37130a79a465aef" name="a3b400ad396c7e678d37130a79a465aef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b400ad396c7e678d37130a79a465aef">&#9670;&#160;</a></span>sensorID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t Tiny_BME280::sensorID </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> ID found by <a class="el" href="#a5b3b5a5e1edf6e327c19e40367dc7e46" title="Initialise sensor with given parameters / settings.">init()</a> for diagnostics </p><dl class="section return"><dt>Renvoie</dt><dd><a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a> ID 0x60 for <a class="el" href="../../d6/d24/classBME280.xhtml">BME280</a>, 0x56, 0x57, 0x58 BMP280 </dd></dl>

</div>
</div>
<a id="a5ef48ff16d11914ebd34628df02c63f9" name="a5ef48ff16d11914ebd34628df02c63f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ef48ff16d11914ebd34628df02c63f9">&#9670;&#160;</a></span>setSampling()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Tiny_BME280::setSampling </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a8241882ad2581ee978da33746d4c6e2d">sensor_mode</a>&#160;</td>
          <td class="paramname"><em>mode</em> = <code><a class="el" href="#a8241882ad2581ee978da33746d4c6e2da25ae9cdf05e204b5911690e3e4748cf4">MODE_NORMAL</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a>&#160;</td>
          <td class="paramname"><em>tempSampling</em> = <code><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a>&#160;</td>
          <td class="paramname"><em>pressSampling</em> = <code><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7">sensor_sampling</a>&#160;</td>
          <td class="paramname"><em>humSampling</em> = <code><a class="el" href="#aabf282324bed1debd8aff32a2b86aaf7a5005d3a86b432a26f665a3c4e3e98629">SAMPLING_X16</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5">sensor_filter</a>&#160;</td>
          <td class="paramname"><em>filter</em> = <code><a class="el" href="#a3f24240e5ffc3a447f989fc281efbcc5ac5f0311967099886ad08e72d1af68d33">FILTER_OFF</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#adc3e03071562eef85f7136fd3aafadb2">standby_duration</a>&#160;</td>
          <td class="paramname"><em>duration</em> = <code><a class="el" href="#adc3e03071562eef85f7136fd3aafadb2ac8e5e06b23089757d41ceff104e1f4e5">STANDBY_MS_0_5</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setup sensor with given parameters / settings </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>the power mode to use for the sensor </td></tr>
    <tr><td class="paramname">tempSampling</td><td>the temp samping rate to use </td></tr>
    <tr><td class="paramname">pressSampling</td><td>the pressure sampling rate to use </td></tr>
    <tr><td class="paramname">humSampling</td><td>the humidity sampling rate to use </td></tr>
    <tr><td class="paramname">filter</td><td>the filter mode to use </td></tr>
    <tr><td class="paramname">duration</td><td>the standby duration to use </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a5ef48ff16d11914ebd34628df02c63f9_cgraph.svg" width="468" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a5ef48ff16d11914ebd34628df02c63f9_icgraph.svg" width="599" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a46e70010eee56ee4488e1353a7d6e275" name="a46e70010eee56ee4488e1353a7d6e275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46e70010eee56ee4488e1353a7d6e275">&#9670;&#160;</a></span>takeForcedMeasurement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Tiny_BME280::takeForcedMeasurement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Take a new measurement (only possible in forced mode) </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_a46e70010eee56ee4488e1353a7d6e275_cgraph.svg" width="663" height="208"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad9a42aed9801eb95065745eabdf7e670" name="ad9a42aed9801eb95065745eabdf7e670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9a42aed9801eb95065745eabdf7e670">&#9670;&#160;</a></span>write8()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Tiny_BME280::write8 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>reg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/df0/Arduino_8h.xhtml#ab8ef12fab634c171394422d0ee8baf94">byte</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes an 8 bit value over I2C. </p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramname">reg</td><td>the register address to write to </td></tr>
    <tr><td class="paramname">value</td><td>the value to write to the register </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d4/d1b/classTiny__BME280_ad9a42aed9801eb95065745eabdf7e670_icgraph.svg" width="100%" height="383"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="a3ad16eda56b7e90bcd7a5ec93ab71402" name="a3ad16eda56b7e90bcd7a5ec93ab71402"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ad16eda56b7e90bcd7a5ec93ab71402">&#9670;&#160;</a></span>_bme280_calib</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d77/structbme280__calib__data.xhtml">bme280_calib_data</a> Tiny_BME280::_bme280_calib</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>here calibration data is stored </p>

</div>
</div>
<a id="adad02c3c3e5d3f95c3bba27f7b4f5843" name="adad02c3c3e5d3f95c3bba27f7b4f5843"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adad02c3c3e5d3f95c3bba27f7b4f5843">&#9670;&#160;</a></span>_configReg</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd8/structTiny__BME280_1_1config.xhtml">config</a> Tiny_BME280::_configReg</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>config register object </p>

</div>
</div>
<a id="a8343f0e929630b5b72101419acf4888b" name="a8343f0e929630b5b72101419acf4888b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8343f0e929630b5b72101419acf4888b">&#9670;&#160;</a></span>_humReg</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d11/structTiny__BME280_1_1ctrl__hum.xhtml">ctrl_hum</a> Tiny_BME280::_humReg</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>hum register object </p>

</div>
</div>
<a id="a877cba58b35c912c46d157402e49ac60" name="a877cba58b35c912c46d157402e49ac60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a877cba58b35c912c46d157402e49ac60">&#9670;&#160;</a></span>_i2caddr</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t Tiny_BME280::_i2caddr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>I2C addr for the TwoWire interface. </p>

</div>
</div>
<a id="a67a0cc859f97725382968afcebcb024f" name="a67a0cc859f97725382968afcebcb024f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67a0cc859f97725382968afcebcb024f">&#9670;&#160;</a></span>_measReg</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d58/structTiny__BME280_1_1ctrl__meas.xhtml">ctrl_meas</a> Tiny_BME280::_measReg</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>measurement register object </p>

</div>
</div>
<a id="a704ce4005f67a480c3d786b9952f3128" name="a704ce4005f67a480c3d786b9952f3128"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a704ce4005f67a480c3d786b9952f3128">&#9670;&#160;</a></span>_sensorID</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t Tiny_BME280::_sensorID</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ID of the BME <a class="el" href="../../de/d5a/structSensor.xhtml" title="Structure représentant un capteur.">Sensor</a>. </p>

</div>
</div>
<a id="a9fffa57d572a1c788504a8ab43733d1c" name="a9fffa57d572a1c788504a8ab43733d1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fffa57d572a1c788504a8ab43733d1c">&#9670;&#160;</a></span>_wire</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">TwoWire* Tiny_BME280::_wire</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>pointer to a TwoWire object </p>

</div>
</div>
<a id="a7edcfaad1dcec8192a99a1d7a199e889" name="a7edcfaad1dcec8192a99a1d7a199e889"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7edcfaad1dcec8192a99a1d7a199e889">&#9670;&#160;</a></span>humidity_sensor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d7/dd5/classTiny__BME280__Humidity.xhtml">Tiny_BME280_Humidity</a>* Tiny_BME280::humidity_sensor = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat humidity sensor component. </p>

</div>
</div>
<a id="aadafcce6beea1f676bc8c2480ad996df" name="aadafcce6beea1f676bc8c2480ad996df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadafcce6beea1f676bc8c2480ad996df">&#9670;&#160;</a></span>pressure_sensor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/d9c/classTiny__BME280__Pressure.xhtml">Tiny_BME280_Pressure</a>* Tiny_BME280::pressure_sensor = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat pressure sensor component. </p>

</div>
</div>
<a id="a93062dbfb61019a7a830edd447e24b51" name="a93062dbfb61019a7a830edd447e24b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93062dbfb61019a7a830edd447e24b51">&#9670;&#160;</a></span>t_fine</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t Tiny_BME280::t_fine</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>temperature with high resolution, stored as an attribute as this is used for temperature compensation reading humidity and pressure </p>

</div>
</div>
<a id="afd4ebb4c5630a2bf975e79f85cd94251" name="afd4ebb4c5630a2bf975e79f85cd94251"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd4ebb4c5630a2bf975e79f85cd94251">&#9670;&#160;</a></span>temp_sensor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/dd1/classTiny__BME280__Temp.xhtml">Tiny_BME280_Temp</a>* Tiny_BME280::temp_sensor = <a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="../../df/d16/classAdafruit__Sensor.xhtml" title="Common sensor interface to unify various sensors. Intentionally modeled after sensors....">Adafruit_Sensor</a> compat temperature sensor component. </p>

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../d8/d24/Tiny__BME280_8h_source.xhtml">Tiny_BME280.h</a></li>
<li><a class="el" href="../../d9/d52/Tiny__BME280_8cpp.xhtml">Tiny_BME280.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d1b/classTiny__BME280.xhtml">Tiny_BME280</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
