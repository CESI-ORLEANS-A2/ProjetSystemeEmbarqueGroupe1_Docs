<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe StdioStream</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/d64/classStdioStream.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pri-methods">Fonctions membres privées</a> &#124;
<a href="#pri-attribs">Attributs privés</a> &#124;
<a href="#pri-static-attribs">Attributs privés statiques</a> &#124;
<a href="../../d9/d60/classStdioStream-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe StdioStream</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../da/d64/classStdioStream.xhtml" title="StdioStream implements a minimal stdio stream.">StdioStream</a> implements a minimal stdio stream.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/dcd/StdioStream_8h_source.xhtml">StdioStream.h</a>&gt;</code></p>
<div class="dynheader">
Graphe d'héritage de StdioStream:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d9/dc6/classStdioStream__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Graphe de collaboration de StdioStream:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d3e/classStdioStream__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:a96b2c027e76bfca6d6835c9ae1be2ad2" id="r_a96b2c027e76bfca6d6835c9ae1be2ad2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a96b2c027e76bfca6d6835c9ae1be2ad2">StdioStream</a> ()</td></tr>
<tr class="separator:a96b2c027e76bfca6d6835c9ae1be2ad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa737e5680fc2808a03a603ea8559d82b" id="r_aa737e5680fc2808a03a603ea8559d82b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa737e5680fc2808a03a603ea8559d82b">clearerr</a> ()</td></tr>
<tr class="separator:aa737e5680fc2808a03a603ea8559d82b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ddd4658d49182013d2fa2a181e96c5a" id="r_a4ddd4658d49182013d2fa2a181e96c5a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ddd4658d49182013d2fa2a181e96c5a">fclose</a> ()</td></tr>
<tr class="separator:a4ddd4658d49182013d2fa2a181e96c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb38c3211feedbf2206eb1d9a3a9d24f" id="r_acb38c3211feedbf2206eb1d9a3a9d24f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb38c3211feedbf2206eb1d9a3a9d24f">feof</a> ()</td></tr>
<tr class="separator:acb38c3211feedbf2206eb1d9a3a9d24f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd64cec6440b923660b444f6d5f0586e" id="r_afd64cec6440b923660b444f6d5f0586e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd64cec6440b923660b444f6d5f0586e">ferror</a> ()</td></tr>
<tr class="separator:afd64cec6440b923660b444f6d5f0586e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ce32ec7ea3f2fd8ea42b9633890f1c0" id="r_a7ce32ec7ea3f2fd8ea42b9633890f1c0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7ce32ec7ea3f2fd8ea42b9633890f1c0">fflush</a> ()</td></tr>
<tr class="separator:a7ce32ec7ea3f2fd8ea42b9633890f1c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a160bd2828cb7e7370cffe1046eff8899" id="r_a160bd2828cb7e7370cffe1046eff8899"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a160bd2828cb7e7370cffe1046eff8899">fgetc</a> ()</td></tr>
<tr class="separator:a160bd2828cb7e7370cffe1046eff8899"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa240c1021a1aad1cc57f63a483541dc7" id="r_aa240c1021a1aad1cc57f63a483541dc7"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa240c1021a1aad1cc57f63a483541dc7">fgets</a> (char *str, size_t num, size_t *len=0)</td></tr>
<tr class="separator:aa240c1021a1aad1cc57f63a483541dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ffc37225fb6deed98905aa71d1f9c4b" id="r_a4ffc37225fb6deed98905aa71d1f9c4b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ffc37225fb6deed98905aa71d1f9c4b">fopen</a> (const char *path, const char *<a class="el" href="../../de/dfb/src_2main_8cpp.xhtml#a2618e89b4c26dc851feae865df3a1a49">mode</a>)</td></tr>
<tr class="separator:a4ffc37225fb6deed98905aa71d1f9c4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f23cfa6b112a5da6ae08340af23c57b" id="r_a9f23cfa6b112a5da6ae08340af23c57b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f23cfa6b112a5da6ae08340af23c57b">fputc</a> (int c)</td></tr>
<tr class="separator:a9f23cfa6b112a5da6ae08340af23c57b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6adea52f55ef7d97cdb54e9e11fc2daa" id="r_a6adea52f55ef7d97cdb54e9e11fc2daa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6adea52f55ef7d97cdb54e9e11fc2daa">fputs</a> (const char *str)</td></tr>
<tr class="separator:a6adea52f55ef7d97cdb54e9e11fc2daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d363b02abcef82b25ff025d50375bce" id="r_a2d363b02abcef82b25ff025d50375bce"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2d363b02abcef82b25ff025d50375bce">fread</a> (void *ptr, size_t size, size_t count)</td></tr>
<tr class="separator:a2d363b02abcef82b25ff025d50375bce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71584fd5c5cda3c31ce6cdbcc56f104d" id="r_a71584fd5c5cda3c31ce6cdbcc56f104d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a71584fd5c5cda3c31ce6cdbcc56f104d">fseek</a> (int32_t offset, int origin)</td></tr>
<tr class="separator:a71584fd5c5cda3c31ce6cdbcc56f104d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809639fc5fb4fa5b6789dc121659f386" id="r_a809639fc5fb4fa5b6789dc121659f386"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a809639fc5fb4fa5b6789dc121659f386">ftell</a> ()</td></tr>
<tr class="separator:a809639fc5fb4fa5b6789dc121659f386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79465afb52579cbc801f4585c3f9c25" id="r_ad79465afb52579cbc801f4585c3f9c25"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad79465afb52579cbc801f4585c3f9c25">fwrite</a> (const void *ptr, size_t size, size_t count)</td></tr>
<tr class="separator:ad79465afb52579cbc801f4585c3f9c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40db6bac09edd73f80a3800ac4534bf7" id="r_a40db6bac09edd73f80a3800ac4534bf7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a40db6bac09edd73f80a3800ac4534bf7">__attribute__</a> ((always_inline)) int getc()</td></tr>
<tr class="separator:a40db6bac09edd73f80a3800ac4534bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb979112a06a62281a8a64105e5ea0b" id="r_a2fb979112a06a62281a8a64105e5ea0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fb979112a06a62281a8a64105e5ea0b">__attribute__</a> ((always_inline)) int putc(int c)</td></tr>
<tr class="separator:a2fb979112a06a62281a8a64105e5ea0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a84b42d51f30209eb35e9137c32b945" id="r_a3a84b42d51f30209eb35e9137c32b945"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a84b42d51f30209eb35e9137c32b945">__attribute__</a> ((always_inline)) int putCRLF()</td></tr>
<tr class="separator:a3a84b42d51f30209eb35e9137c32b945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3f6ee8e8ca5dcf6dabfd88199b172e2" id="r_ad3f6ee8e8ca5dcf6dabfd88199b172e2"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3f6ee8e8ca5dcf6dabfd88199b172e2">print</a> (char c)</td></tr>
<tr class="separator:ad3f6ee8e8ca5dcf6dabfd88199b172e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1158ea5f9bf041f21b1733b7811c9bb9" id="r_a1158ea5f9bf041f21b1733b7811c9bb9"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1158ea5f9bf041f21b1733b7811c9bb9">print</a> (const char *str)</td></tr>
<tr class="separator:a1158ea5f9bf041f21b1733b7811c9bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26f5b98560b6771225005b073166108b" id="r_a26f5b98560b6771225005b073166108b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a26f5b98560b6771225005b073166108b">print</a> (double val, uint8_t prec=2)</td></tr>
<tr class="separator:a26f5b98560b6771225005b073166108b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06b6eb9f0a7000fdcc73cd6af8d40560" id="r_a06b6eb9f0a7000fdcc73cd6af8d40560"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a06b6eb9f0a7000fdcc73cd6af8d40560">print</a> (float val, uint8_t prec=2)</td></tr>
<tr class="separator:a06b6eb9f0a7000fdcc73cd6af8d40560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7129f85c7c5f16867f467731ef84dee9" id="r_a7129f85c7c5f16867f467731ef84dee9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7129f85c7c5f16867f467731ef84dee9"><td class="memTemplItemLeft" align="right" valign="top">size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a7129f85c7c5f16867f467731ef84dee9">print</a> (T val)</td></tr>
<tr class="separator:a7129f85c7c5f16867f467731ef84dee9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0cd3acc05a91456f505752377bd405a" id="r_ad0cd3acc05a91456f505752377bd405a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad0cd3acc05a91456f505752377bd405a">println</a> ()</td></tr>
<tr class="separator:ad0cd3acc05a91456f505752377bd405a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3793dd66cf347a1ca0b7b167e948cce9" id="r_a3793dd66cf347a1ca0b7b167e948cce9"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3793dd66cf347a1ca0b7b167e948cce9">println</a> (double val, uint8_t prec=2)</td></tr>
<tr class="separator:a3793dd66cf347a1ca0b7b167e948cce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac250d041a7844c8db1cbd2d97ecfdaa" id="r_aac250d041a7844c8db1cbd2d97ecfdaa"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac250d041a7844c8db1cbd2d97ecfdaa">println</a> (float val, uint8_t prec=2)</td></tr>
<tr class="separator:aac250d041a7844c8db1cbd2d97ecfdaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b14532768d07e6ed89c762d04792c12" id="r_a3b14532768d07e6ed89c762d04792c12"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3b14532768d07e6ed89c762d04792c12"><td class="memTemplItemLeft" align="right" valign="top">size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a3b14532768d07e6ed89c762d04792c12">println</a> (T val)</td></tr>
<tr class="separator:a3b14532768d07e6ed89c762d04792c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0a907feb1e4b7e00de99857b4c0a470" id="r_ac0a907feb1e4b7e00de99857b4c0a470"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac0a907feb1e4b7e00de99857b4c0a470">printDec</a> (char n)</td></tr>
<tr class="separator:ac0a907feb1e4b7e00de99857b4c0a470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2707ea97f6113c226781469f4f39ff62" id="r_a2707ea97f6113c226781469f4f39ff62"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2707ea97f6113c226781469f4f39ff62">printDec</a> (signed char n)</td></tr>
<tr class="separator:a2707ea97f6113c226781469f4f39ff62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6ac78caa6259a4c4934707bf497a2b" id="r_a6e6ac78caa6259a4c4934707bf497a2b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e6ac78caa6259a4c4934707bf497a2b">printDec</a> (unsigned char n)</td></tr>
<tr class="separator:a6e6ac78caa6259a4c4934707bf497a2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a218af88db35f38babf01d6e0a9cdceeb" id="r_a218af88db35f38babf01d6e0a9cdceeb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a218af88db35f38babf01d6e0a9cdceeb">printDec</a> (int16_t n)</td></tr>
<tr class="separator:a218af88db35f38babf01d6e0a9cdceeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b2999af94a3578fff7579c2acf8e35" id="r_a90b2999af94a3578fff7579c2acf8e35"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a90b2999af94a3578fff7579c2acf8e35">printDec</a> (uint16_t n)</td></tr>
<tr class="separator:a90b2999af94a3578fff7579c2acf8e35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4591f1234b57f63c1acf0f3392099ac" id="r_ad4591f1234b57f63c1acf0f3392099ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad4591f1234b57f63c1acf0f3392099ac">printDec</a> (int32_t n)</td></tr>
<tr class="separator:ad4591f1234b57f63c1acf0f3392099ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b6c2c80342abe45e6f564e9bd5bb7ea" id="r_a8b6c2c80342abe45e6f564e9bd5bb7ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8b6c2c80342abe45e6f564e9bd5bb7ea">printDec</a> (uint32_t n)</td></tr>
<tr class="separator:a8b6c2c80342abe45e6f564e9bd5bb7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8921947d4dbbae840d285cb633e8aa" id="r_aaa8921947d4dbbae840d285cb633e8aa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa8921947d4dbbae840d285cb633e8aa">printDec</a> (double value, uint8_t prec)</td></tr>
<tr class="separator:aaa8921947d4dbbae840d285cb633e8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a09284b1c6d0769c27916a2e131e749" id="r_a6a09284b1c6d0769c27916a2e131e749"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a09284b1c6d0769c27916a2e131e749">printDec</a> (float value, uint8_t prec)</td></tr>
<tr class="separator:a6a09284b1c6d0769c27916a2e131e749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4988592ada39c4b4c603b061f84d183f" id="r_a4988592ada39c4b4c603b061f84d183f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4988592ada39c4b4c603b061f84d183f">printField</a> (double value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a4988592ada39c4b4c603b061f84d183f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b90b2317cc391f94784a847f5313c08" id="r_a3b90b2317cc391f94784a847f5313c08"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b90b2317cc391f94784a847f5313c08">printField</a> (float value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a3b90b2317cc391f94784a847f5313c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c2ad1a2e71e82d238b8386cf3e6c41" id="r_a02c2ad1a2e71e82d238b8386cf3e6c41"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a02c2ad1a2e71e82d238b8386cf3e6c41"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a02c2ad1a2e71e82d238b8386cf3e6c41">printField</a> (T value, char term)</td></tr>
<tr class="separator:a02c2ad1a2e71e82d238b8386cf3e6c41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add39b2b4ec3daa7c8922e96ce5d368bc" id="r_add39b2b4ec3daa7c8922e96ce5d368bc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add39b2b4ec3daa7c8922e96ce5d368bc">printHex</a> (uint32_t n)</td></tr>
<tr class="separator:add39b2b4ec3daa7c8922e96ce5d368bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6ebea511489b0ef6b61d9132d93af9" id="r_aec6ebea511489b0ef6b61d9132d93af9"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec6ebea511489b0ef6b61d9132d93af9">printHexln</a> (uint32_t n)</td></tr>
<tr class="separator:aec6ebea511489b0ef6b61d9132d93af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad985866675193d2ee1dde9e27b0d08da" id="r_ad985866675193d2ee1dde9e27b0d08da"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad985866675193d2ee1dde9e27b0d08da">rewind</a> ()</td></tr>
<tr class="separator:ad985866675193d2ee1dde9e27b0d08da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac00e0dd906c2e857ece53794c6c92786" id="r_ac00e0dd906c2e857ece53794c6c92786"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac00e0dd906c2e857ece53794c6c92786">ungetc</a> (int c)</td></tr>
<tr class="separator:ac00e0dd906c2e857ece53794c6c92786"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Fonctions membres privées</h2></td></tr>
<tr class="memitem:acdb0e26a73dae3dda8d07ed2a84fcdda" id="r_acdb0e26a73dae3dda8d07ed2a84fcdda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acdb0e26a73dae3dda8d07ed2a84fcdda">fillBuf</a> ()</td></tr>
<tr class="separator:acdb0e26a73dae3dda8d07ed2a84fcdda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8aca0d1524f214fc22986057a32c146" id="r_ae8aca0d1524f214fc22986057a32c146"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8aca0d1524f214fc22986057a32c146">fillGet</a> ()</td></tr>
<tr class="separator:ae8aca0d1524f214fc22986057a32c146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525cecc51f31e964f7ef43b6cf6d8b38" id="r_a525cecc51f31e964f7ef43b6cf6d8b38"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a525cecc51f31e964f7ef43b6cf6d8b38">flushBuf</a> ()</td></tr>
<tr class="separator:a525cecc51f31e964f7ef43b6cf6d8b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5af3ee714e99da0bc464a0e20cb7157" id="r_ae5af3ee714e99da0bc464a0e20cb7157"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae5af3ee714e99da0bc464a0e20cb7157">flushPut</a> (uint8_t c)</td></tr>
<tr class="separator:ae5af3ee714e99da0bc464a0e20cb7157"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1976bebf66840cc4c16f287d6f9ee79" id="r_ac1976bebf66840cc4c16f287d6f9ee79"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac1976bebf66840cc4c16f287d6f9ee79">write</a> (const void *buf, size_t count)</td></tr>
<tr class="separator:ac1976bebf66840cc4c16f287d6f9ee79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classFatFile"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classFatFile')"><img src="../../closed.png" alt="-"/>&#160;Fonctions membres privées hérités de <a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a></td></tr>
<tr class="memitem:a7b591c9b92165fa8e4eae8c30c30e533 inherit pub_methods_classFatFile" id="r_a7b591c9b92165fa8e4eae8c30c30e533"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7b591c9b92165fa8e4eae8c30c30e533">FatFile</a> ()</td></tr>
<tr class="separator:a7b591c9b92165fa8e4eae8c30c30e533 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f9a296138648d6135cbbbf41ef6b92 inherit pub_methods_classFatFile" id="r_a38f9a296138648d6135cbbbf41ef6b92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a38f9a296138648d6135cbbbf41ef6b92">FatFile</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag)</td></tr>
<tr class="separator:a38f9a296138648d6135cbbbf41ef6b92 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6738e1bf9c75bd854d9c9c989c53668 inherit pub_methods_classFatFile" id="r_ac6738e1bf9c75bd854d9c9c989c53668"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac6738e1bf9c75bd854d9c9c989c53668">operator bool</a> () const</td></tr>
<tr class="separator:ac6738e1bf9c75bd854d9c9c989c53668 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f40718e0e4923659a1b38e3cd24d0dd inherit pub_methods_classFatFile" id="r_a2f40718e0e4923659a1b38e3cd24d0dd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a2f40718e0e4923659a1b38e3cd24d0dd">attrib</a> ()</td></tr>
<tr class="separator:a2f40718e0e4923659a1b38e3cd24d0dd inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6470379dc6d57c62a8cc650635049da9 inherit pub_methods_classFatFile" id="r_a6470379dc6d57c62a8cc650635049da9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a6470379dc6d57c62a8cc650635049da9">attrib</a> (uint8_t bits)</td></tr>
<tr class="separator:a6470379dc6d57c62a8cc650635049da9 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3cb9982c0e8e6e627f28d8ee552446 inherit pub_methods_classFatFile" id="r_a7b3cb9982c0e8e6e627f28d8ee552446"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7b3cb9982c0e8e6e627f28d8ee552446">available</a> () const</td></tr>
<tr class="separator:a7b3cb9982c0e8e6e627f28d8ee552446 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac304e37e45f3871395780021bf84cea1 inherit pub_methods_classFatFile" id="r_ac304e37e45f3871395780021bf84cea1"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac304e37e45f3871395780021bf84cea1">available32</a> () const</td></tr>
<tr class="separator:ac304e37e45f3871395780021bf84cea1 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052e2c15a39b322a5307b693b8835b22 inherit pub_methods_classFatFile" id="r_a052e2c15a39b322a5307b693b8835b22"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a052e2c15a39b322a5307b693b8835b22">clearError</a> ()</td></tr>
<tr class="separator:a052e2c15a39b322a5307b693b8835b22 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca2a2eff91e6aa55fe1b0e3860c9a05 inherit pub_methods_classFatFile" id="r_aeca2a2eff91e6aa55fe1b0e3860c9a05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aeca2a2eff91e6aa55fe1b0e3860c9a05">clearWriteError</a> ()</td></tr>
<tr class="separator:aeca2a2eff91e6aa55fe1b0e3860c9a05 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd16af325e0642e4bff6430b7d8bb18b inherit pub_methods_classFatFile" id="r_afd16af325e0642e4bff6430b7d8bb18b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#afd16af325e0642e4bff6430b7d8bb18b">close</a> ()</td></tr>
<tr class="separator:afd16af325e0642e4bff6430b7d8bb18b inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b3c5a763416ca62c70e3db74033cd0 inherit pub_methods_classFatFile" id="r_a12b3c5a763416ca62c70e3db74033cd0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a12b3c5a763416ca62c70e3db74033cd0">contiguousRange</a> (uint32_t *bgnSector, uint32_t *endSector)</td></tr>
<tr class="separator:a12b3c5a763416ca62c70e3db74033cd0 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0afc2a1cffa238d1cb2049bfa2d8d199 inherit pub_methods_classFatFile" id="r_a0afc2a1cffa238d1cb2049bfa2d8d199"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a0afc2a1cffa238d1cb2049bfa2d8d199">createContiguous</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *path, uint32_t size)</td></tr>
<tr class="separator:a0afc2a1cffa238d1cb2049bfa2d8d199 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0853fbd44aee2798d14d8e3aed78f8bf inherit pub_methods_classFatFile" id="r_a0853fbd44aee2798d14d8e3aed78f8bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a0853fbd44aee2798d14d8e3aed78f8bf">createContiguous</a> (const char *path, uint32_t size)</td></tr>
<tr class="separator:a0853fbd44aee2798d14d8e3aed78f8bf inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526f3dd56ce205690e45ffc86ef6f891 inherit pub_methods_classFatFile" id="r_a526f3dd56ce205690e45ffc86ef6f891"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a526f3dd56ce205690e45ffc86ef6f891">curCluster</a> () const</td></tr>
<tr class="separator:a526f3dd56ce205690e45ffc86ef6f891 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e0620949f97e9b9c91ed1094d728aa inherit pub_methods_classFatFile" id="r_a97e0620949f97e9b9c91ed1094d728aa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a97e0620949f97e9b9c91ed1094d728aa">curPosition</a> () const</td></tr>
<tr class="separator:a97e0620949f97e9b9c91ed1094d728aa inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4e9ab3056125b07f15d14ca26d5346 inherit pub_methods_classFatFile" id="r_a2f4e9ab3056125b07f15d14ca26d5346"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a2f4e9ab3056125b07f15d14ca26d5346">dirEntry</a> (<a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *dir)</td></tr>
<tr class="separator:a2f4e9ab3056125b07f15d14ca26d5346 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f0d6488685dc3be61720caca49fa116 inherit pub_methods_classFatFile" id="r_a7f0d6488685dc3be61720caca49fa116"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7f0d6488685dc3be61720caca49fa116">dirIndex</a> () const</td></tr>
<tr class="separator:a7f0d6488685dc3be61720caca49fa116 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2ed15f05c9ccbce355e7a8d3ce8382d inherit pub_methods_classFatFile" id="r_ae2ed15f05c9ccbce355e7a8d3ce8382d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ae2ed15f05c9ccbce355e7a8d3ce8382d">dirSize</a> ()</td></tr>
<tr class="separator:ae2ed15f05c9ccbce355e7a8d3ce8382d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f01d27954ae49aeb6888ac7302f55d9 inherit pub_methods_classFatFile" id="r_a4f01d27954ae49aeb6888ac7302f55d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a4f01d27954ae49aeb6888ac7302f55d9">dmpFile</a> (print_t *pr, uint32_t pos, size_t n)</td></tr>
<tr class="separator:a4f01d27954ae49aeb6888ac7302f55d9 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50242f98dea0d4488ce4039a279f2a57 inherit pub_methods_classFatFile" id="r_a50242f98dea0d4488ce4039a279f2a57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a50242f98dea0d4488ce4039a279f2a57">exists</a> (const char *path)</td></tr>
<tr class="separator:a50242f98dea0d4488ce4039a279f2a57 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8593cb31d4e857adf1cb5312c08ad7c3 inherit pub_methods_classFatFile" id="r_a8593cb31d4e857adf1cb5312c08ad7c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a8593cb31d4e857adf1cb5312c08ad7c3">fgetpos</a> (<a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos) const</td></tr>
<tr class="separator:a8593cb31d4e857adf1cb5312c08ad7c3 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d86cd3af397b36d0f9ef2bf7b2afab inherit pub_methods_classFatFile" id="r_a69d86cd3af397b36d0f9ef2bf7b2afab"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets</a> (char *str, int num, char *delim=<a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a>)</td></tr>
<tr class="separator:a69d86cd3af397b36d0f9ef2bf7b2afab inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a874940574b9c99e763526465adf8dc28 inherit pub_methods_classFatFile" id="r_a874940574b9c99e763526465adf8dc28"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a874940574b9c99e763526465adf8dc28">fileSize</a> () const</td></tr>
<tr class="separator:a874940574b9c99e763526465adf8dc28 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ac8a604863d18840f4a93c5c788b7c8 inherit pub_methods_classFatFile" id="r_a5ac8a604863d18840f4a93c5c788b7c8"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5ac8a604863d18840f4a93c5c788b7c8">firstBlock</a> () const</td></tr>
<tr class="separator:a5ac8a604863d18840f4a93c5c788b7c8 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3108df387f30ca3d367dd390a04daaa inherit pub_methods_classFatFile" id="r_af3108df387f30ca3d367dd390a04daaa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#af3108df387f30ca3d367dd390a04daaa">firstSector</a> () const</td></tr>
<tr class="separator:af3108df387f30ca3d367dd390a04daaa inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166b5ff04754cc925f2aee71bf92f800 inherit pub_methods_classFatFile" id="r_a166b5ff04754cc925f2aee71bf92f800"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a166b5ff04754cc925f2aee71bf92f800">flush</a> ()</td></tr>
<tr class="separator:a166b5ff04754cc925f2aee71bf92f800 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac042c43d41ecfff4e101b88f3f82086e inherit pub_methods_classFatFile" id="r_ac042c43d41ecfff4e101b88f3f82086e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac042c43d41ecfff4e101b88f3f82086e">fsetpos</a> (const <a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos)</td></tr>
<tr class="separator:ac042c43d41ecfff4e101b88f3f82086e inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d085c695e920b658a1505e480bc467f inherit pub_methods_classFatFile" id="r_a5d085c695e920b658a1505e480bc467f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5d085c695e920b658a1505e480bc467f">getAccessDate</a> (uint16_t *pdate)</td></tr>
<tr class="separator:a5d085c695e920b658a1505e480bc467f inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70c42baeb45e0d7047ae63de568d0d2 inherit pub_methods_classFatFile" id="r_af70c42baeb45e0d7047ae63de568d0d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#af70c42baeb45e0d7047ae63de568d0d2">getAccessDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:af70c42baeb45e0d7047ae63de568d0d2 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94d484b5198032a9e00194e72182cc57 inherit pub_methods_classFatFile" id="r_a94d484b5198032a9e00194e72182cc57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a94d484b5198032a9e00194e72182cc57">getCreateDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:a94d484b5198032a9e00194e72182cc57 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af732f14454c7e1468d8ed7cadcaef527 inherit pub_methods_classFatFile" id="r_af732f14454c7e1468d8ed7cadcaef527"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#af732f14454c7e1468d8ed7cadcaef527">getError</a> () const</td></tr>
<tr class="separator:af732f14454c7e1468d8ed7cadcaef527 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28537b48ed2cb886c5f22984d07492b7 inherit pub_methods_classFatFile" id="r_a28537b48ed2cb886c5f22984d07492b7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a28537b48ed2cb886c5f22984d07492b7">getModifyDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:a28537b48ed2cb886c5f22984d07492b7 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0313d518970d1438d5cad721720cc109 inherit pub_methods_classFatFile" id="r_a0313d518970d1438d5cad721720cc109"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a0313d518970d1438d5cad721720cc109">getName</a> (char *name, size_t size)</td></tr>
<tr class="separator:a0313d518970d1438d5cad721720cc109 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf906ba7948cf1331d80e530bacea489 inherit pub_methods_classFatFile" id="r_abf906ba7948cf1331d80e530bacea489"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#abf906ba7948cf1331d80e530bacea489">getName7</a> (char *name, size_t size)</td></tr>
<tr class="separator:abf906ba7948cf1331d80e530bacea489 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2369692e7bc19a68ac106fd7499a2910 inherit pub_methods_classFatFile" id="r_a2369692e7bc19a68ac106fd7499a2910"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a2369692e7bc19a68ac106fd7499a2910">getName8</a> (char *name, size_t size)</td></tr>
<tr class="separator:a2369692e7bc19a68ac106fd7499a2910 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adec535e4293b78431c8c9c1f44989dc4 inherit pub_methods_classFatFile" id="r_adec535e4293b78431c8c9c1f44989dc4"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#adec535e4293b78431c8c9c1f44989dc4">__attribute__</a> ((error(&quot;use <a class="el" href="../../d3/db4/classFatFile.xhtml#a9dfb8b93dc97289648756e695bbd17f3">getSFN</a>(name, size)&quot;))) getSFN(char *name)</td></tr>
<tr class="separator:adec535e4293b78431c8c9c1f44989dc4 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dfb8b93dc97289648756e695bbd17f3 inherit pub_methods_classFatFile" id="r_a9dfb8b93dc97289648756e695bbd17f3"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a9dfb8b93dc97289648756e695bbd17f3">getSFN</a> (char *name, size_t size)</td></tr>
<tr class="separator:a9dfb8b93dc97289648756e695bbd17f3 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c7b5894ff8deee63b4db0663975321 inherit pub_methods_classFatFile" id="r_ac5c7b5894ff8deee63b4db0663975321"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac5c7b5894ff8deee63b4db0663975321">getWriteError</a> () const</td></tr>
<tr class="separator:ac5c7b5894ff8deee63b4db0663975321 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a845038578df0ef76e2a1f48d6e404aac inherit pub_methods_classFatFile" id="r_a845038578df0ef76e2a1f48d6e404aac"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a845038578df0ef76e2a1f48d6e404aac">isBusy</a> ()</td></tr>
<tr class="separator:a845038578df0ef76e2a1f48d6e404aac inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933360b20b496421b2bd9ee7a95563a6 inherit pub_methods_classFatFile" id="r_a933360b20b496421b2bd9ee7a95563a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a933360b20b496421b2bd9ee7a95563a6">isDir</a> () const</td></tr>
<tr class="separator:a933360b20b496421b2bd9ee7a95563a6 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc5a87da1a5c8cb9758bfeaa7ae47b57 inherit pub_methods_classFatFile" id="r_acc5a87da1a5c8cb9758bfeaa7ae47b57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#acc5a87da1a5c8cb9758bfeaa7ae47b57">isFile</a> () const</td></tr>
<tr class="separator:acc5a87da1a5c8cb9758bfeaa7ae47b57 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6917ba9b62b4de6fc77d356d1f077a9 inherit pub_methods_classFatFile" id="r_ae6917ba9b62b4de6fc77d356d1f077a9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ae6917ba9b62b4de6fc77d356d1f077a9">isFileOrSubDir</a> () const</td></tr>
<tr class="separator:ae6917ba9b62b4de6fc77d356d1f077a9 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae216b4a2bc44a9cfb88478fa051a1fd8 inherit pub_methods_classFatFile" id="r_ae216b4a2bc44a9cfb88478fa051a1fd8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ae216b4a2bc44a9cfb88478fa051a1fd8">isHidden</a> () const</td></tr>
<tr class="separator:ae216b4a2bc44a9cfb88478fa051a1fd8 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8f456ab790e818bfdd225cf6ffd40f3 inherit pub_methods_classFatFile" id="r_af8f456ab790e818bfdd225cf6ffd40f3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#af8f456ab790e818bfdd225cf6ffd40f3">isLFN</a> () const</td></tr>
<tr class="separator:af8f456ab790e818bfdd225cf6ffd40f3 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b8a2850c086d3ce79bee64a23fbf7a6 inherit pub_methods_classFatFile" id="r_a8b8a2850c086d3ce79bee64a23fbf7a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a8b8a2850c086d3ce79bee64a23fbf7a6">isOpen</a> () const</td></tr>
<tr class="separator:a8b8a2850c086d3ce79bee64a23fbf7a6 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae60b4cedb69c88ac641813d5edfa6b4a inherit pub_methods_classFatFile" id="r_ae60b4cedb69c88ac641813d5edfa6b4a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ae60b4cedb69c88ac641813d5edfa6b4a">isReadable</a> () const</td></tr>
<tr class="separator:ae60b4cedb69c88ac641813d5edfa6b4a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaf639ec8f86f34aeb7e6b3615526f0b inherit pub_methods_classFatFile" id="r_abaf639ec8f86f34aeb7e6b3615526f0b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#abaf639ec8f86f34aeb7e6b3615526f0b">isReadOnly</a> () const</td></tr>
<tr class="separator:abaf639ec8f86f34aeb7e6b3615526f0b inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03421a0c28649332f55e6ca06d3aeedb inherit pub_methods_classFatFile" id="r_a03421a0c28649332f55e6ca06d3aeedb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a03421a0c28649332f55e6ca06d3aeedb">isRoot</a> () const</td></tr>
<tr class="separator:a03421a0c28649332f55e6ca06d3aeedb inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fda8004720ec4cc55710869dbb52e35 inherit pub_methods_classFatFile" id="r_a8fda8004720ec4cc55710869dbb52e35"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a8fda8004720ec4cc55710869dbb52e35">isRoot32</a> () const</td></tr>
<tr class="separator:a8fda8004720ec4cc55710869dbb52e35 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc65089f7ce6c1ff92edbf0bff59dee inherit pub_methods_classFatFile" id="r_a0cc65089f7ce6c1ff92edbf0bff59dee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a0cc65089f7ce6c1ff92edbf0bff59dee">isRootFixed</a> () const</td></tr>
<tr class="separator:a0cc65089f7ce6c1ff92edbf0bff59dee inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd02c5d26f7d4f8739a8610116a6660 inherit pub_methods_classFatFile" id="r_abfd02c5d26f7d4f8739a8610116a6660"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#abfd02c5d26f7d4f8739a8610116a6660">isSubDir</a> () const</td></tr>
<tr class="separator:abfd02c5d26f7d4f8739a8610116a6660 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48087bdeb6b94fc27e0f74c3d90af5a9 inherit pub_methods_classFatFile" id="r_a48087bdeb6b94fc27e0f74c3d90af5a9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a48087bdeb6b94fc27e0f74c3d90af5a9">isSystem</a> () const</td></tr>
<tr class="separator:a48087bdeb6b94fc27e0f74c3d90af5a9 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa484d5b2b147c5f3fe0e26b6eaf11ffc inherit pub_methods_classFatFile" id="r_aa484d5b2b147c5f3fe0e26b6eaf11ffc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aa484d5b2b147c5f3fe0e26b6eaf11ffc">isWritable</a> () const</td></tr>
<tr class="separator:aa484d5b2b147c5f3fe0e26b6eaf11ffc inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ab9d16bcc778150a364c26de467de1 inherit pub_methods_classFatFile" id="r_a60ab9d16bcc778150a364c26de467de1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a60ab9d16bcc778150a364c26de467de1">ls</a> (print_t *pr, uint8_t flags=0, uint8_t indent=0)</td></tr>
<tr class="separator:a60ab9d16bcc778150a364c26de467de1 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abab5b9f72cc796388dd4eed01d13d90d inherit pub_methods_classFatFile" id="r_abab5b9f72cc796388dd4eed01d13d90d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#abab5b9f72cc796388dd4eed01d13d90d">mkdir</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dir, const char *path, bool pFlag=true)</td></tr>
<tr class="separator:abab5b9f72cc796388dd4eed01d13d90d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2bbee53059029f7a22c8eaec81cb8a inherit pub_methods_classFatFile" id="r_a5f2bbee53059029f7a22c8eaec81cb8a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5f2bbee53059029f7a22c8eaec81cb8a">open</a> (<a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *vol, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a5f2bbee53059029f7a22c8eaec81cb8a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5318ee7a7700ff23721497945fba363d inherit pub_methods_classFatFile" id="r_a5318ee7a7700ff23721497945fba363d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5318ee7a7700ff23721497945fba363d">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, uint16_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a5318ee7a7700ff23721497945fba363d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a662db270440e29b619cbc89f5595f73d inherit pub_methods_classFatFile" id="r_a662db270440e29b619cbc89f5595f73d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a662db270440e29b619cbc89f5595f73d">open</a> (uint16_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a662db270440e29b619cbc89f5595f73d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22c2b68a8a426758d15981de17431b5d inherit pub_methods_classFatFile" id="r_a22c2b68a8a426758d15981de17431b5d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a22c2b68a8a426758d15981de17431b5d">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a22c2b68a8a426758d15981de17431b5d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2da94d4556eebd807669e0514433fffa inherit pub_methods_classFatFile" id="r_a2da94d4556eebd807669e0514433fffa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a2da94d4556eebd807669e0514433fffa">open</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a2da94d4556eebd807669e0514433fffa inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8977563ad297039946e13a1acd5c651 inherit pub_methods_classFatFile" id="r_ad8977563ad297039946e13a1acd5c651"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ad8977563ad297039946e13a1acd5c651">openCwd</a> ()</td></tr>
<tr class="separator:ad8977563ad297039946e13a1acd5c651 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ca76086a89af45d2cae451b55e6f20f inherit pub_methods_classFatFile" id="r_a4ca76086a89af45d2cae451b55e6f20f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a4ca76086a89af45d2cae451b55e6f20f">openExistingSFN</a> (const char *path)</td></tr>
<tr class="separator:a4ca76086a89af45d2cae451b55e6f20f inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acda9b1bf547d43e183e657bee053a48d inherit pub_methods_classFatFile" id="r_acda9b1bf547d43e183e657bee053a48d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#acda9b1bf547d43e183e657bee053a48d">openNext</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:acda9b1bf547d43e183e657bee053a48d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e0c0548fed3a69e7284b91b694439d4 inherit pub_methods_classFatFile" id="r_a7e0c0548fed3a69e7284b91b694439d4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7e0c0548fed3a69e7284b91b694439d4">openRoot</a> (<a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *vol)</td></tr>
<tr class="separator:a7e0c0548fed3a69e7284b91b694439d4 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05b7136b887539426856c623869aa3a inherit pub_methods_classFatFile" id="r_ac05b7136b887539426856c623869aa3a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac05b7136b887539426856c623869aa3a">peek</a> ()</td></tr>
<tr class="separator:ac05b7136b887539426856c623869aa3a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeb13b9de68bf9097c863c41d655ee83 inherit pub_methods_classFatFile" id="r_aeeb13b9de68bf9097c863c41d655ee83"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aeeb13b9de68bf9097c863c41d655ee83">preAllocate</a> (uint32_t length)</td></tr>
<tr class="separator:aeeb13b9de68bf9097c863c41d655ee83 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22be4c339d0bfa331f75415b74dd4f37 inherit pub_methods_classFatFile" id="r_a22be4c339d0bfa331f75415b74dd4f37"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a22be4c339d0bfa331f75415b74dd4f37">printAccessDate</a> (print_t *pr)</td></tr>
<tr class="separator:a22be4c339d0bfa331f75415b74dd4f37 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b3196bb1f6a68a2447e53b09369aef inherit pub_methods_classFatFile" id="r_a19b3196bb1f6a68a2447e53b09369aef"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a19b3196bb1f6a68a2447e53b09369aef">printAccessDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a19b3196bb1f6a68a2447e53b09369aef inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab22396a285e27b53501a0047ddd97f59 inherit pub_methods_classFatFile" id="r_ab22396a285e27b53501a0047ddd97f59"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ab22396a285e27b53501a0047ddd97f59">printCreateDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:ab22396a285e27b53501a0047ddd97f59 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4a61a0cca1813d2ad0f6fe99cc4e41d inherit pub_methods_classFatFile" id="r_aa4a61a0cca1813d2ad0f6fe99cc4e41d"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aa4a61a0cca1813d2ad0f6fe99cc4e41d">printField</a> (double value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:aa4a61a0cca1813d2ad0f6fe99cc4e41d inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90ccef676afd62bbe7c773dd863a56e0 inherit pub_methods_classFatFile" id="r_a90ccef676afd62bbe7c773dd863a56e0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a90ccef676afd62bbe7c773dd863a56e0">printField</a> (float value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a90ccef676afd62bbe7c773dd863a56e0 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f906be79086f38943cb0911310d67bf inherit pub_methods_classFatFile" id="r_a8f906be79086f38943cb0911310d67bf"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a8f906be79086f38943cb0911310d67bf inherit pub_methods_classFatFile"><td class="memTemplItemLeft" align="right" valign="top">size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a8f906be79086f38943cb0911310d67bf">printField</a> (Type value, char term)</td></tr>
<tr class="separator:a8f906be79086f38943cb0911310d67bf inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a5d2de2737c201aa39ca1bd2ab9c47 inherit pub_methods_classFatFile" id="r_a12a5d2de2737c201aa39ca1bd2ab9c47"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a12a5d2de2737c201aa39ca1bd2ab9c47">printFileSize</a> (print_t *pr)</td></tr>
<tr class="separator:a12a5d2de2737c201aa39ca1bd2ab9c47 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c8a1cabcae673e43c590f5db44c65a inherit pub_methods_classFatFile" id="r_a43c8a1cabcae673e43c590f5db44c65a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a43c8a1cabcae673e43c590f5db44c65a">printModifyDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a43c8a1cabcae673e43c590f5db44c65a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe18a787fb8640e2d2483370c770f82f inherit pub_methods_classFatFile" id="r_afe18a787fb8640e2d2483370c770f82f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#afe18a787fb8640e2d2483370c770f82f">printName</a> (print_t *pr)</td></tr>
<tr class="separator:afe18a787fb8640e2d2483370c770f82f inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35dedc90d44758d10d967785dc14da2b inherit pub_methods_classFatFile" id="r_a35dedc90d44758d10d967785dc14da2b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a35dedc90d44758d10d967785dc14da2b">printName7</a> (print_t *pr)</td></tr>
<tr class="separator:a35dedc90d44758d10d967785dc14da2b inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508c86ed62a34a920574dd270dc64322 inherit pub_methods_classFatFile" id="r_a508c86ed62a34a920574dd270dc64322"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a508c86ed62a34a920574dd270dc64322">printName8</a> (print_t *pr)</td></tr>
<tr class="separator:a508c86ed62a34a920574dd270dc64322 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a791cd7aade71f609aab62ec018aea3c0 inherit pub_methods_classFatFile" id="r_a791cd7aade71f609aab62ec018aea3c0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a791cd7aade71f609aab62ec018aea3c0">printSFN</a> (print_t *pr)</td></tr>
<tr class="separator:a791cd7aade71f609aab62ec018aea3c0 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ae55ff6fe158c2340071d702a363c5 inherit pub_methods_classFatFile" id="r_a60ae55ff6fe158c2340071d702a363c5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a60ae55ff6fe158c2340071d702a363c5">read</a> ()</td></tr>
<tr class="separator:a60ae55ff6fe158c2340071d702a363c5 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba893af8107a18017482d2311b066187 inherit pub_methods_classFatFile" id="r_aba893af8107a18017482d2311b066187"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aba893af8107a18017482d2311b066187">read</a> (void *buf, size_t count)</td></tr>
<tr class="separator:aba893af8107a18017482d2311b066187 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29502cd34ef186763d2196daef27df1f inherit pub_methods_classFatFile" id="r_a29502cd34ef186763d2196daef27df1f"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a29502cd34ef186763d2196daef27df1f">readDir</a> (<a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *dir)</td></tr>
<tr class="separator:a29502cd34ef186763d2196daef27df1f inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac837a537fbcca14c7aa390c5fc9f4e7c inherit pub_methods_classFatFile" id="r_ac837a537fbcca14c7aa390c5fc9f4e7c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac837a537fbcca14c7aa390c5fc9f4e7c">remove</a> ()</td></tr>
<tr class="separator:ac837a537fbcca14c7aa390c5fc9f4e7c inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d3276f0b02b03e863afafe5731fedb inherit pub_methods_classFatFile" id="r_a75d3276f0b02b03e863afafe5731fedb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a75d3276f0b02b03e863afafe5731fedb">remove</a> (const char *path)</td></tr>
<tr class="separator:a75d3276f0b02b03e863afafe5731fedb inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cebcac13c1f4c9de7a055ae73133599 inherit pub_methods_classFatFile" id="r_a4cebcac13c1f4c9de7a055ae73133599"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a4cebcac13c1f4c9de7a055ae73133599">rename</a> (const char *newPath)</td></tr>
<tr class="separator:a4cebcac13c1f4c9de7a055ae73133599 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b42f2454ff462555c07ea094a92a1e0 inherit pub_methods_classFatFile" id="r_a4b42f2454ff462555c07ea094a92a1e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a4b42f2454ff462555c07ea094a92a1e0">rename</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *newPath)</td></tr>
<tr class="separator:a4b42f2454ff462555c07ea094a92a1e0 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aac6e0b3cb08fc8b8668e916a8b0ca5 inherit pub_methods_classFatFile" id="r_a5aac6e0b3cb08fc8b8668e916a8b0ca5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5aac6e0b3cb08fc8b8668e916a8b0ca5">rewind</a> ()</td></tr>
<tr class="separator:a5aac6e0b3cb08fc8b8668e916a8b0ca5 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9515bac181d33e7f0125e88fa2ccd283 inherit pub_methods_classFatFile" id="r_a9515bac181d33e7f0125e88fa2ccd283"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a9515bac181d33e7f0125e88fa2ccd283">rmdir</a> ()</td></tr>
<tr class="separator:a9515bac181d33e7f0125e88fa2ccd283 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac780a80526f86d3def701ecdc99d8bfe inherit pub_methods_classFatFile" id="r_ac780a80526f86d3def701ecdc99d8bfe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ac780a80526f86d3def701ecdc99d8bfe">rmRfStar</a> ()</td></tr>
<tr class="separator:ac780a80526f86d3def701ecdc99d8bfe inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5812037ea30777cc350698ad26f2c73f inherit pub_methods_classFatFile" id="r_a5812037ea30777cc350698ad26f2c73f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5812037ea30777cc350698ad26f2c73f">seekCur</a> (int32_t offset)</td></tr>
<tr class="separator:a5812037ea30777cc350698ad26f2c73f inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84f677f4e75ef6fa2eb632f4cdf6b486 inherit pub_methods_classFatFile" id="r_a84f677f4e75ef6fa2eb632f4cdf6b486"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a84f677f4e75ef6fa2eb632f4cdf6b486">seekEnd</a> (int32_t offset=0)</td></tr>
<tr class="separator:a84f677f4e75ef6fa2eb632f4cdf6b486 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab067190d25733ed7e697d9890f61fd7a inherit pub_methods_classFatFile" id="r_ab067190d25733ed7e697d9890f61fd7a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ab067190d25733ed7e697d9890f61fd7a">seekSet</a> (uint32_t pos)</td></tr>
<tr class="separator:ab067190d25733ed7e697d9890f61fd7a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f3dc4896c542d695e11aac927f585e inherit pub_methods_classFatFile" id="r_a67f3dc4896c542d695e11aac927f585e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a67f3dc4896c542d695e11aac927f585e">sync</a> ()</td></tr>
<tr class="separator:a67f3dc4896c542d695e11aac927f585e inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56dabdf73833b7e961c4530eb8e16d23 inherit pub_methods_classFatFile" id="r_a56dabdf73833b7e961c4530eb8e16d23"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a56dabdf73833b7e961c4530eb8e16d23">timestamp</a> (uint8_t flags, uint16_t year, uint8_t month, uint8_t day, uint8_t hour, uint8_t minute, uint8_t second)</td></tr>
<tr class="separator:a56dabdf73833b7e961c4530eb8e16d23 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dda881dac19ea2aa9b2e85a229a98d7 inherit pub_methods_classFatFile" id="r_a7dda881dac19ea2aa9b2e85a229a98d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7dda881dac19ea2aa9b2e85a229a98d7">truncate</a> ()</td></tr>
<tr class="separator:a7dda881dac19ea2aa9b2e85a229a98d7 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e663098a578635d37d92e82d18d616 inherit pub_methods_classFatFile" id="r_aa6e663098a578635d37d92e82d18d616"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aa6e663098a578635d37d92e82d18d616">truncate</a> (uint32_t length)</td></tr>
<tr class="separator:aa6e663098a578635d37d92e82d18d616 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a081dd810835f1ebf8c23ffe92706b485 inherit pub_methods_classFatFile" id="r_a081dd810835f1ebf8c23ffe92706b485"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a081dd810835f1ebf8c23ffe92706b485">write</a> (const char *str)</td></tr>
<tr class="separator:a081dd810835f1ebf8c23ffe92706b485 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae51e724ac6cc3d67d64a5a666d5850f1 inherit pub_methods_classFatFile" id="r_ae51e724ac6cc3d67d64a5a666d5850f1"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ae51e724ac6cc3d67d64a5a666d5850f1">write</a> (uint8_t b)</td></tr>
<tr class="separator:ae51e724ac6cc3d67d64a5a666d5850f1 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d84d871ac904a22aa48308713d14682 inherit pub_methods_classFatFile" id="r_a5d84d871ac904a22aa48308713d14682"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a5d84d871ac904a22aa48308713d14682">write</a> (const void *buf, size_t count)</td></tr>
<tr class="separator:a5d84d871ac904a22aa48308713d14682 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a11f3307da6232b5f2d11812832d93a inherit pub_methods_classFatFile" id="r_a6a11f3307da6232b5f2d11812832d93a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a6a11f3307da6232b5f2d11812832d93a">ls</a> (uint8_t flags=0)</td></tr>
<tr class="separator:a6a11f3307da6232b5f2d11812832d93a inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1cbc3aeb0f5193b7a26595966da9621 inherit pub_methods_classFatFile" id="r_ad1cbc3aeb0f5193b7a26595966da9621"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#ad1cbc3aeb0f5193b7a26595966da9621">printName</a> ()</td></tr>
<tr class="separator:ad1cbc3aeb0f5193b7a26595966da9621 inherit pub_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Attributs privés</h2></td></tr>
<tr class="memitem:ad61924cb859b20014a2f9ec5e73d1079" id="r_ad61924cb859b20014a2f9ec5e73d1079"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad61924cb859b20014a2f9ec5e73d1079">m_buf</a> [<a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#ad9a6150ef11e2616c1a99bc777df17d3">STREAM_BUF_SIZE</a>]</td></tr>
<tr class="separator:ad61924cb859b20014a2f9ec5e73d1079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e315e10cc6699592443b2acc17f0bd" id="r_a25e315e10cc6699592443b2acc17f0bd"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a25e315e10cc6699592443b2acc17f0bd">m_status</a> = 0</td></tr>
<tr class="separator:a25e315e10cc6699592443b2acc17f0bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6c389eebc07a4d03031cbace51829c5" id="r_ac6c389eebc07a4d03031cbace51829c5"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6c389eebc07a4d03031cbace51829c5">m_p</a> = <a class="el" href="#ad61924cb859b20014a2f9ec5e73d1079">m_buf</a></td></tr>
<tr class="separator:ac6c389eebc07a4d03031cbace51829c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a9cb3cbad7f8ad8e49ce490262db97" id="r_a16a9cb3cbad7f8ad8e49ce490262db97"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a16a9cb3cbad7f8ad8e49ce490262db97">m_r</a> = 0</td></tr>
<tr class="separator:a16a9cb3cbad7f8ad8e49ce490262db97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af80daa542afa09e19ea719d133e0c4a1" id="r_af80daa542afa09e19ea719d133e0c4a1"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af80daa542afa09e19ea719d133e0c4a1">m_w</a> = 0</td></tr>
<tr class="separator:af80daa542afa09e19ea719d133e0c4a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Attributs privés statiques</h2></td></tr>
<tr class="memitem:aacbc0ab37acf2d43c64bc85b8aaf107b" id="r_aacbc0ab37acf2d43c64bc85b8aaf107b"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aacbc0ab37acf2d43c64bc85b8aaf107b">S_SRD</a> = 0x01</td></tr>
<tr class="separator:aacbc0ab37acf2d43c64bc85b8aaf107b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa44e8b96d635efb9cebd78bae1962030" id="r_aa44e8b96d635efb9cebd78bae1962030"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa44e8b96d635efb9cebd78bae1962030">S_SWR</a> = 0x02</td></tr>
<tr class="separator:aa44e8b96d635efb9cebd78bae1962030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d86a25820d0b886a48578d5bc4208e3" id="r_a5d86a25820d0b886a48578d5bc4208e3"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d86a25820d0b886a48578d5bc4208e3">S_SRW</a> = 0x04</td></tr>
<tr class="separator:a5d86a25820d0b886a48578d5bc4208e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6cfc02af02fe9ac86543747a652686" id="r_afe6cfc02af02fe9ac86543747a652686"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe6cfc02af02fe9ac86543747a652686">S_EOF</a> = 0x10</td></tr>
<tr class="separator:afe6cfc02af02fe9ac86543747a652686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3938d254cb8ad1c36d21690e95afc783" id="r_a3938d254cb8ad1c36d21690e95afc783"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3938d254cb8ad1c36d21690e95afc783">S_ERR</a> = 0x20</td></tr>
<tr class="separator:a3938d254cb8ad1c36d21690e95afc783"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Membres hérités additionnels</h2></td></tr>
<tr class="inherit_header pub_static_methods_classFatFile"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classFatFile')"><img src="../../closed.png" alt="-"/>&#160;Fonctions membres privées statiques hérités de <a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a></td></tr>
<tr class="memitem:aabcd863883bfcfb37b63dbd6021f7eb8 inherit pub_static_methods_classFatFile" id="r_aabcd863883bfcfb37b63dbd6021f7eb8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#aabcd863883bfcfb37b63dbd6021f7eb8">printFatDate</a> (print_t *pr, uint16_t fatDate)</td></tr>
<tr class="separator:aabcd863883bfcfb37b63dbd6021f7eb8 inherit pub_static_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f84d953190ea94710dad9ebb897b957 inherit pub_static_methods_classFatFile" id="r_a7f84d953190ea94710dad9ebb897b957"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/db4/classFatFile.xhtml#a7f84d953190ea94710dad9ebb897b957">printFatTime</a> (print_t *pr, uint16_t fatTime)</td></tr>
<tr class="separator:a7f84d953190ea94710dad9ebb897b957 inherit pub_static_methods_classFatFile"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p><a class="el" href="../../da/d64/classStdioStream.xhtml" title="StdioStream implements a minimal stdio stream.">StdioStream</a> implements a minimal stdio stream. </p>
<p><a class="el" href="../../da/d64/classStdioStream.xhtml" title="StdioStream implements a minimal stdio stream.">StdioStream</a> does not support subdirectories or long file names. </p>
</div><h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="a96b2c027e76bfca6d6835c9ae1be2ad2" name="a96b2c027e76bfca6d6835c9ae1be2ad2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96b2c027e76bfca6d6835c9ae1be2ad2">&#9670;&#160;</a></span>StdioStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">StdioStream::StdioStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor </p>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="a40db6bac09edd73f80a3800ac4534bf7" name="a40db6bac09edd73f80a3800ac4534bf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40db6bac09edd73f80a3800ac4534bf7">&#9670;&#160;</a></span>__attribute__() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">StdioStream::__attribute__ </td>
          <td>(</td>
          <td class="paramtype">(always_inline)&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a byte from the stream.</p>
<p>getc and fgetc are equivalent but getc is in-line so it is faster but require more flash memory.</p>
<dl class="section return"><dt>Renvoie</dt><dd>If the end-of-file indicator for the stream is set, or if the stream is at end-of-file, the end-of-file indicator for the stream is set and the fgetc function returns EOF. Otherwise, the fgetc function returns the next character from the input stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a40db6bac09edd73f80a3800ac4534bf7_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a2fb979112a06a62281a8a64105e5ea0b" name="a2fb979112a06a62281a8a64105e5ea0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fb979112a06a62281a8a64105e5ea0b">&#9670;&#160;</a></span>__attribute__() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">StdioStream::__attribute__ </td>
          <td>(</td>
          <td class="paramtype">(always_inline)&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a byte to a stream.</p>
<p>putc and fputc are equivalent but putc is in-line so it is faster but require more flash memory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>the byte to be written (converted to an unsigned char).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>Upon successful completion, <a class="el" href="#a9f23cfa6b112a5da6ae08340af23c57b">fputc()</a> returns the value it has written. Otherwise, it returns EOF and sets the error indicator for the stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a2fb979112a06a62281a8a64105e5ea0b_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a3a84b42d51f30209eb35e9137c32b945" name="a3a84b42d51f30209eb35e9137c32b945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a84b42d51f30209eb35e9137c32b945">&#9670;&#160;</a></span>__attribute__() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">StdioStream::__attribute__ </td>
          <td>(</td>
          <td class="paramtype">(always_inline)&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a CR/LF.</p>
<dl class="section return"><dt>Renvoie</dt><dd>two, the number of bytes written, for success or -1 for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a3a84b42d51f30209eb35e9137c32b945_cgraph.svg" width="570" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa737e5680fc2808a03a603ea8559d82b" name="aa737e5680fc2808a03a603ea8559d82b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa737e5680fc2808a03a603ea8559d82b">&#9670;&#160;</a></span>clearerr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void StdioStream::clearerr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clear the stream's end-of-file and error indicators. </p>

</div>
</div>
<a id="a4ddd4658d49182013d2fa2a181e96c5a" name="a4ddd4658d49182013d2fa2a181e96c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ddd4658d49182013d2fa2a181e96c5a">&#9670;&#160;</a></span>fclose()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fclose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Close a stream.</p>
<p>A successful call to the fclose function causes the stream to be flushed and the associated file to be closed. Any unwritten buffered data is written to the file; any unread buffered data is discarded. Whether or not the call succeeds, the stream is disassociated from the file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>zero if the stream was successfully closed, or EOF if any any errors are detected.</dd></dl>
<p>Copyright (c) 2011-2022 Bill Greiman This file is part of the SdFat library for SD memory cards.</p>
<p>MIT License</p>
<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>
<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a4ddd4658d49182013d2fa2a181e96c5a_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acb38c3211feedbf2206eb1d9a3a9d24f" name="acb38c3211feedbf2206eb1d9a3a9d24f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb38c3211feedbf2206eb1d9a3a9d24f">&#9670;&#160;</a></span>feof()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::feof </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test the stream's end-of-file indicator. </p><dl class="section return"><dt>Renvoie</dt><dd>non-zero if and only if the end-of-file indicator is set. </dd></dl>

</div>
</div>
<a id="afd64cec6440b923660b444f6d5f0586e" name="afd64cec6440b923660b444f6d5f0586e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd64cec6440b923660b444f6d5f0586e">&#9670;&#160;</a></span>ferror()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::ferror </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test the stream's error indicator. </p><dl class="section return"><dt>Renvoie</dt><dd>return non-zero if and only if the error indicator is set. </dd></dl>

</div>
</div>
<a id="a7ce32ec7ea3f2fd8ea42b9633890f1c0" name="a7ce32ec7ea3f2fd8ea42b9633890f1c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ce32ec7ea3f2fd8ea42b9633890f1c0">&#9670;&#160;</a></span>fflush()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fflush </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Flush the stream.</p>
<p>If stream is an output stream or an update stream in which the most recent operation was not input, any unwritten data is written to the file; otherwise the call is an error since any buffered input data would be lost.</p>
<dl class="section return"><dt>Renvoie</dt><dd>sets the error indicator for the stream and returns EOF if an error occurs, otherwise it returns zero. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a7ce32ec7ea3f2fd8ea42b9633890f1c0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a160bd2828cb7e7370cffe1046eff8899" name="a160bd2828cb7e7370cffe1046eff8899"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a160bd2828cb7e7370cffe1046eff8899">&#9670;&#160;</a></span>fgetc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fgetc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a byte from the stream.</p>
<dl class="section return"><dt>Renvoie</dt><dd>If the end-of-file indicator for the stream is set, or if the stream is at end-of-file, the end-of-file indicator for the stream is set and the fgetc function returns EOF. Otherwise, the fgetc function returns the next character from the input stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a160bd2828cb7e7370cffe1046eff8899_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa240c1021a1aad1cc57f63a483541dc7" name="aa240c1021a1aad1cc57f63a483541dc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa240c1021a1aad1cc57f63a483541dc7">&#9670;&#160;</a></span>fgets()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * StdioStream::fgets </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>len</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a string from a stream.</p>
<p>The fgets function reads at most one less than the number of characters specified by num from the stream into the array pointed to by str. No additional characters are read after a new-line character (which is retained) or after end-of-file. A null character is written immediately after the last character read into the array.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">str</td><td>Pointer to an array of where the string is copied.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>Maximum number of characters including the null character.</td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">len</td><td>If len is not null and fgets is successful, the length of the string is returned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>str if successful. If end-of-file is encountered and no characters have been read into the array, the contents of the array remain unchanged and a null pointer is returned. If a read error occurs during the operation, the array contents are indeterminate and a null pointer is returned. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_aa240c1021a1aad1cc57f63a483541dc7_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acdb0e26a73dae3dda8d07ed2a84fcdda" name="acdb0e26a73dae3dda8d07ed2a84fcdda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdb0e26a73dae3dda8d07ed2a84fcdda">&#9670;&#160;</a></span>fillBuf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool StdioStream::fillBuf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_acdb0e26a73dae3dda8d07ed2a84fcdda_cgraph.svg" width="523" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_acdb0e26a73dae3dda8d07ed2a84fcdda_icgraph.svg" width="599" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae8aca0d1524f214fc22986057a32c146" name="ae8aca0d1524f214fc22986057a32c146"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8aca0d1524f214fc22986057a32c146">&#9670;&#160;</a></span>fillGet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fillGet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ae8aca0d1524f214fc22986057a32c146_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ae8aca0d1524f214fc22986057a32c146_icgraph.svg" width="403" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a525cecc51f31e964f7ef43b6cf6d8b38" name="a525cecc51f31e964f7ef43b6cf6d8b38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a525cecc51f31e964f7ef43b6cf6d8b38">&#9670;&#160;</a></span>flushBuf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool StdioStream::flushBuf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a525cecc51f31e964f7ef43b6cf6d8b38_cgraph.svg" width="327" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a525cecc51f31e964f7ef43b6cf6d8b38_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae5af3ee714e99da0bc464a0e20cb7157" name="ae5af3ee714e99da0bc464a0e20cb7157"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5af3ee714e99da0bc464a0e20cb7157">&#9670;&#160;</a></span>flushPut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::flushPut </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ae5af3ee714e99da0bc464a0e20cb7157_cgraph.svg" width="538" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ae5af3ee714e99da0bc464a0e20cb7157_icgraph.svg" width="630" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4ffc37225fb6deed98905aa71d1f9c4b" name="a4ffc37225fb6deed98905aa71d1f9c4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ffc37225fb6deed98905aa71d1f9c4b">&#9670;&#160;</a></span>fopen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StdioStream::fopen </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a stream.</p>
<p>Open a file and associates the stream with it.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>a string that indicates the open mode.</td></tr>
  </table>
  </dd>
</dl>
<table class="doxtable">
<tr>
<td>"r" or "rb" </td><td>Open a file for reading. The file must exist.  </td></tr>
<tr>
<td>"w" or "wb" </td><td>Truncate an existing to zero length or create an empty file for writing.  </td></tr>
<tr>
<td>"wx" or "wbx" </td><td>Create a file for writing. Fails if the file already exists.  </td></tr>
<tr>
<td>"a" or "ab" </td><td>Append; open or create file for writing at end-of-file.  </td></tr>
<tr>
<td>"r+" or "rb+" or "r+b" </td><td>Open a file for update (reading and writing).  </td></tr>
<tr>
<td>"w+" or "w+b" or "wb+" </td><td>Truncate an existing to zero length or create a file for update.  </td></tr>
<tr>
<td>"w+x" or "w+bx" or "wb+x" </td><td>Create a file for update. Fails if the file already exists.  </td></tr>
<tr>
<td>"a+" or "a+b" or "ab+" </td><td>Append; open or create a file for update, writing at end-of-file.  </td></tr>
</table>
<p>The character 'b' shall have no effect, but is allowed for ISO C standard conformance.</p>
<p>Opening a file with append mode causes all subsequent writes to the file to be forced to the then current end-of-file, regardless of intervening calls to the fseek function.</p>
<p>When a file is opened with update mode, both input and output may be performed on the associated stream. However, output shall not be directly followed by input without an intervening call to the fflush function or to a file positioning function (fseek, or rewind), and input shall not be directly followed by output without an intervening call to a file positioning function, unless the input operation encounters end-of-file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a4ffc37225fb6deed98905aa71d1f9c4b_cgraph.svg" width="483" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a9f23cfa6b112a5da6ae08340af23c57b" name="a9f23cfa6b112a5da6ae08340af23c57b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f23cfa6b112a5da6ae08340af23c57b">&#9670;&#160;</a></span>fputc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fputc </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a byte to a stream.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>the byte to be written (converted to an unsigned char).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>Upon successful completion, <a class="el" href="#a9f23cfa6b112a5da6ae08340af23c57b">fputc()</a> returns the value it has written. Otherwise, it returns EOF and sets the error indicator for the stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a9f23cfa6b112a5da6ae08340af23c57b_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a9f23cfa6b112a5da6ae08340af23c57b_icgraph.svg" width="367" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6adea52f55ef7d97cdb54e9e11fc2daa" name="a6adea52f55ef7d97cdb54e9e11fc2daa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6adea52f55ef7d97cdb54e9e11fc2daa">&#9670;&#160;</a></span>fputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fputs </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write a string to a stream.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>a pointer to the string to be written.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>for success, <a class="el" href="#a6adea52f55ef7d97cdb54e9e11fc2daa">fputs()</a> returns a non-negative number. Otherwise, it returns EOF and sets the error indicator for the stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a6adea52f55ef7d97cdb54e9e11fc2daa_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a6adea52f55ef7d97cdb54e9e11fc2daa_icgraph.svg" width="342" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2d363b02abcef82b25ff025d50375bce" name="a2d363b02abcef82b25ff025d50375bce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d363b02abcef82b25ff025d50375bce">&#9670;&#160;</a></span>fread()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::fread </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Binary input.</p>
<p>Reads an array of up to count elements, each one with a size of size bytes. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">ptr</td><td>pointer to area of at least (size*count) bytes where the data will be stored.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the size, in bytes, of each element to be read.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>the number of elements to be read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>number of elements successfully read, which may be less than count if a read error or end-of-file is encountered. If size or count is zero, fread returns zero and the contents of the array and the state of the stream remain unchanged. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a2d363b02abcef82b25ff025d50375bce_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a71584fd5c5cda3c31ce6cdbcc56f104d" name="a71584fd5c5cda3c31ce6cdbcc56f104d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71584fd5c5cda3c31ce6cdbcc56f104d">&#9670;&#160;</a></span>fseek()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::fseek </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>origin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the file position for the stream.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>number of offset from the origin.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">origin</td><td>position used as reference for the offset. It is specified by one of the following constants.</td></tr>
  </table>
  </dd>
</dl>
<p>SEEK_SET - Beginning of file.</p>
<p>SEEK_CUR - Current position of the file pointer.</p>
<p>SEEK_END - End of file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>zero for success. Otherwise, it returns non-zero and sets the error indicator for the stream. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a71584fd5c5cda3c31ce6cdbcc56f104d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a809639fc5fb4fa5b6789dc121659f386" name="a809639fc5fb4fa5b6789dc121659f386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a809639fc5fb4fa5b6789dc121659f386">&#9670;&#160;</a></span>ftell()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t StdioStream::ftell </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the current position in a stream.</p>
<dl class="section return"><dt>Renvoie</dt><dd>If successful, ftell return the current value of the position indicator. On failure, ftell returns −1L. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a809639fc5fb4fa5b6789dc121659f386_cgraph.svg" width="338" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a809639fc5fb4fa5b6789dc121659f386_icgraph.svg" width="340" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad79465afb52579cbc801f4585c3f9c25" name="ad79465afb52579cbc801f4585c3f9c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad79465afb52579cbc801f4585c3f9c25">&#9670;&#160;</a></span>fwrite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::fwrite </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Binary output.</p>
<p>Writes an array of up to count elements, each one with a size of size bytes. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>pointer to (size*count) bytes of data to be written.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>the size, in bytes, of each element to be written.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>the number of elements to be written.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>number of elements successfully written. if this number is less than count, an error has occurred. If size or count is zero, fwrite returns zero. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad79465afb52579cbc801f4585c3f9c25_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad79465afb52579cbc801f4585c3f9c25_icgraph.svg" width="536" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad3f6ee8e8ca5dcf6dabfd88199b172e2" name="ad3f6ee8e8ca5dcf6dabfd88199b172e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3f6ee8e8ca5dcf6dabfd88199b172e2">&#9670;&#160;</a></span>print() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::print </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a character. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>the character to write. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad3f6ee8e8ca5dcf6dabfd88199b172e2_icgraph.svg" width="351" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1158ea5f9bf041f21b1733b7811c9bb9" name="a1158ea5f9bf041f21b1733b7811c9bb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1158ea5f9bf041f21b1733b7811c9bb9">&#9670;&#160;</a></span>print() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::print </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a string.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>the string to be written.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a1158ea5f9bf041f21b1733b7811c9bb9_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a26f5b98560b6771225005b073166108b" name="a26f5b98560b6771225005b073166108b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26f5b98560b6771225005b073166108b">&#9670;&#160;</a></span>print() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::print </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a floating point number.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the number to be printed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a26f5b98560b6771225005b073166108b_cgraph.svg" width="339" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a06b6eb9f0a7000fdcc73cd6af8d40560" name="a06b6eb9f0a7000fdcc73cd6af8d40560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06b6eb9f0a7000fdcc73cd6af8d40560">&#9670;&#160;</a></span>print() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::print </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a floating point number.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the number to be printed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a06b6eb9f0a7000fdcc73cd6af8d40560_cgraph.svg" width="364" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7129f85c7c5f16867f467731ef84dee9" name="a7129f85c7c5f16867f467731ef84dee9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7129f85c7c5f16867f467731ef84dee9">&#9670;&#160;</a></span>print() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::print </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the number to be printed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a7129f85c7c5f16867f467731ef84dee9_cgraph.svg" width="364" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac0a907feb1e4b7e00de99857b4c0a470" name="ac0a907feb1e4b7e00de99857b4c0a470"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0a907feb1e4b7e00de99857b4c0a470">&#9670;&#160;</a></span>printDec() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a char as a number. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ac0a907feb1e4b7e00de99857b4c0a470_cgraph.svg" width="176" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ac0a907feb1e4b7e00de99857b4c0a470_icgraph.svg" width="395" height="431"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aaa8921947d4dbbae840d285cb633e8aa" name="aaa8921947d4dbbae840d285cb633e8aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa8921947d4dbbae840d285cb633e8aa">&#9670;&#160;</a></span>printDec() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a double. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_aaa8921947d4dbbae840d285cb633e8aa_cgraph.svg" width="390" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6a09284b1c6d0769c27916a2e131e749" name="a6a09284b1c6d0769c27916a2e131e749"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a09284b1c6d0769c27916a2e131e749">&#9670;&#160;</a></span>printDec() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a float. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a6a09284b1c6d0769c27916a2e131e749_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a218af88db35f38babf01d6e0a9cdceeb" name="a218af88db35f38babf01d6e0a9cdceeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a218af88db35f38babf01d6e0a9cdceeb">&#9670;&#160;</a></span>printDec() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a int16_t </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a218af88db35f38babf01d6e0a9cdceeb_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad4591f1234b57f63c1acf0f3392099ac" name="ad4591f1234b57f63c1acf0f3392099ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4591f1234b57f63c1acf0f3392099ac">&#9670;&#160;</a></span>printDec() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a signed 32-bit integer. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad4591f1234b57f63c1acf0f3392099ac_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a2707ea97f6113c226781469f4f39ff62" name="a2707ea97f6113c226781469f4f39ff62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2707ea97f6113c226781469f4f39ff62">&#9670;&#160;</a></span>printDec() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">signed char&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>print a signed 8-bit integer </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a2707ea97f6113c226781469f4f39ff62_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a90b2999af94a3578fff7579c2acf8e35" name="a90b2999af94a3578fff7579c2acf8e35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b2999af94a3578fff7579c2acf8e35">&#9670;&#160;</a></span>printDec() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>print a uint16_t. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a90b2999af94a3578fff7579c2acf8e35_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8b6c2c80342abe45e6f564e9bd5bb7ea" name="a8b6c2c80342abe45e6f564e9bd5bb7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b6c2c80342abe45e6f564e9bd5bb7ea">&#9670;&#160;</a></span>printDec() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write an unsigned 32-bit number. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a8b6c2c80342abe45e6f564e9bd5bb7ea_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6e6ac78caa6259a4c4934707bf497a2b" name="a6e6ac78caa6259a4c4934707bf497a2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e6ac78caa6259a4c4934707bf497a2b">&#9670;&#160;</a></span>printDec() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printDec </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> an unsigned 8-bit number. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be print. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a6e6ac78caa6259a4c4934707bf497a2b_cgraph.svg" width="176" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a6e6ac78caa6259a4c4934707bf497a2b_icgraph.svg" width="176" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4988592ada39c4b4c603b061f84d183f" name="a4988592ada39c4b4c603b061f84d183f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4988592ada39c4b4c603b061f84d183f">&#9670;&#160;</a></span>printField() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printField </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a4988592ada39c4b4c603b061f84d183f_cgraph.svg" width="182" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a4988592ada39c4b4c603b061f84d183f_icgraph.svg" width="182" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3b90b2317cc391f94784a847f5313c08" name="a3b90b2317cc391f94784a847f5313c08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b90b2317cc391f94784a847f5313c08">&#9670;&#160;</a></span>printField() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printField </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a3b90b2317cc391f94784a847f5313c08_cgraph.svg" width="395" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a02c2ad1a2e71e82d238b8386cf3e6c41" name="a02c2ad1a2e71e82d238b8386cf3e6c41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02c2ad1a2e71e82d238b8386cf3e6c41">&#9670;&#160;</a></span>printField() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printField </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a02c2ad1a2e71e82d238b8386cf3e6c41_cgraph.svg" width="395" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="add39b2b4ec3daa7c8922e96ce5d368bc" name="add39b2b4ec3daa7c8922e96ce5d368bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add39b2b4ec3daa7c8922e96ce5d368bc">&#9670;&#160;</a></span>printHex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printHex </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> HEX </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed as HEX.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_add39b2b4ec3daa7c8922e96ce5d368bc_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_add39b2b4ec3daa7c8922e96ce5d368bc_icgraph.svg" width="404" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aec6ebea511489b0ef6b61d9132d93af9" name="aec6ebea511489b0ef6b61d9132d93af9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec6ebea511489b0ef6b61d9132d93af9">&#9670;&#160;</a></span>printHexln()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::printHexln </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> HEX with CRLF </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number to be printed as HEX.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_aec6ebea511489b0ef6b61d9132d93af9_cgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad0cd3acc05a91456f505752377bd405a" name="ad0cd3acc05a91456f505752377bd405a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0cd3acc05a91456f505752377bd405a">&#9670;&#160;</a></span>println() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::println </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a CR/LF.</p>
<dl class="section return"><dt>Renvoie</dt><dd>two, the number of bytes written, for success or zero for failure. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad0cd3acc05a91456f505752377bd405a_icgraph.svg" width="363" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3793dd66cf347a1ca0b7b167e948cce9" name="a3793dd66cf347a1ca0b7b167e948cce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3793dd66cf347a1ca0b7b167e948cce9">&#9670;&#160;</a></span>println() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::println </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a floating point number followed by CR/LF.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the number to be printed.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a3793dd66cf347a1ca0b7b167e948cce9_cgraph.svg" width="363" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aac250d041a7844c8db1cbd2d97ecfdaa" name="aac250d041a7844c8db1cbd2d97ecfdaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac250d041a7844c8db1cbd2d97ecfdaa">&#9670;&#160;</a></span>println() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::println </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a floating point number followed by CR/LF.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the number to be printed.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_aac250d041a7844c8db1cbd2d97ecfdaa_cgraph.svg" width="376" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3b14532768d07e6ed89c762d04792c12" name="a3b14532768d07e6ed89c762d04792c12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b14532768d07e6ed89c762d04792c12">&#9670;&#160;</a></span>println() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t StdioStream::println </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> an item followed by CR/LF</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">val</td><td>the item to be printed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the number of bytes written. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_a3b14532768d07e6ed89c762d04792c12_cgraph.svg" width="351" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad985866675193d2ee1dde9e27b0d08da" name="ad985866675193d2ee1dde9e27b0d08da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad985866675193d2ee1dde9e27b0d08da">&#9670;&#160;</a></span>rewind()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool StdioStream::rewind </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set position of a stream to the beginning.</p>
<p>The rewind function sets the file position to the beginning of the file. It is equivalent to fseek(0L, SEEK_SET) except that the error indicator for the stream is also cleared.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ad985866675193d2ee1dde9e27b0d08da_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac00e0dd906c2e857ece53794c6c92786" name="ac00e0dd906c2e857ece53794c6c92786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac00e0dd906c2e857ece53794c6c92786">&#9670;&#160;</a></span>ungetc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::ungetc </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Push a byte back into an input stream.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>the byte (converted to an unsigned char) to be pushed back.</td></tr>
  </table>
  </dd>
</dl>
<p>One character of push-back is guaranteed. If the ungetc function is called too many times without an intervening read or file positioning operation on that stream, the operation may fail.</p>
<p>A successful intervening call to a file positioning function (fseek, fsetpos, or rewind) discards any pushed-back characters for the stream.</p>
<dl class="section return"><dt>Renvoie</dt><dd>Upon successful completion, <a class="el" href="#ac00e0dd906c2e857ece53794c6c92786">ungetc()</a> returns the byte pushed back after conversion. Otherwise it returns EOF. </dd></dl>

</div>
</div>
<a id="ac1976bebf66840cc4c16f287d6f9ee79" name="ac1976bebf66840cc4c16f287d6f9ee79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1976bebf66840cc4c16f287d6f9ee79">&#9670;&#160;</a></span>write()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int StdioStream::write </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ac1976bebf66840cc4c16f287d6f9ee79_cgraph.svg" width="518" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../da/d64/classStdioStream_ac1976bebf66840cc4c16f287d6f9ee79_icgraph.svg" width="100%" height="475"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="ad61924cb859b20014a2f9ec5e73d1079" name="ad61924cb859b20014a2f9ec5e73d1079"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad61924cb859b20014a2f9ec5e73d1079">&#9670;&#160;</a></span>m_buf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t StdioStream::m_buf[<a class="el" href="../../d9/dcd/StdioStream_8h.xhtml#ad9a6150ef11e2616c1a99bc777df17d3">STREAM_BUF_SIZE</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6c389eebc07a4d03031cbace51829c5" name="ac6c389eebc07a4d03031cbace51829c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6c389eebc07a4d03031cbace51829c5">&#9670;&#160;</a></span>m_p</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* StdioStream::m_p = <a class="el" href="#ad61924cb859b20014a2f9ec5e73d1079">m_buf</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a16a9cb3cbad7f8ad8e49ce490262db97" name="a16a9cb3cbad7f8ad8e49ce490262db97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16a9cb3cbad7f8ad8e49ce490262db97">&#9670;&#160;</a></span>m_r</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t StdioStream::m_r = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25e315e10cc6699592443b2acc17f0bd" name="a25e315e10cc6699592443b2acc17f0bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25e315e10cc6699592443b2acc17f0bd">&#9670;&#160;</a></span>m_status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t StdioStream::m_status = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af80daa542afa09e19ea719d133e0c4a1" name="af80daa542afa09e19ea719d133e0c4a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af80daa542afa09e19ea719d133e0c4a1">&#9670;&#160;</a></span>m_w</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t StdioStream::m_w = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe6cfc02af02fe9ac86543747a652686" name="afe6cfc02af02fe9ac86543747a652686"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe6cfc02af02fe9ac86543747a652686">&#9670;&#160;</a></span>S_EOF</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t StdioStream::S_EOF = 0x10</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3938d254cb8ad1c36d21690e95afc783" name="a3938d254cb8ad1c36d21690e95afc783"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3938d254cb8ad1c36d21690e95afc783">&#9670;&#160;</a></span>S_ERR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t StdioStream::S_ERR = 0x20</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aacbc0ab37acf2d43c64bc85b8aaf107b" name="aacbc0ab37acf2d43c64bc85b8aaf107b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacbc0ab37acf2d43c64bc85b8aaf107b">&#9670;&#160;</a></span>S_SRD</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t StdioStream::S_SRD = 0x01</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d86a25820d0b886a48578d5bc4208e3" name="a5d86a25820d0b886a48578d5bc4208e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d86a25820d0b886a48578d5bc4208e3">&#9670;&#160;</a></span>S_SRW</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t StdioStream::S_SRW = 0x04</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa44e8b96d635efb9cebd78bae1962030" name="aa44e8b96d635efb9cebd78bae1962030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa44e8b96d635efb9cebd78bae1962030">&#9670;&#160;</a></span>S_SWR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t StdioStream::S_SWR = 0x02</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../d9/dcd/StdioStream_8h_source.xhtml">StdioStream.h</a></li>
<li><a class="el" href="../../df/d9a/StdioStream_8cpp.xhtml">StdioStream.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d64/classStdioStream.xhtml">StdioStream</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
