<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence du fichier new.cpp</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/dc8/new_8cpp.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Espaces de nommage</a> &#124;
<a href="#func-members">Fonctions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">Référence du fichier new.cpp</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="../../d7/d58/new_8h_source.xhtml">new.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Graphe des dépendances par inclusion de new.cpp:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../db/d15/new_8cpp__incl.svg" width="86" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Espaces de nommage</h2></td></tr>
<tr class="memitem:d8/dcc/namespacestd" id="r_d8/dcc/namespacestd"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dcc/namespacestd.xhtml">std</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Fonctions</h2></td></tr>
<tr class="memitem:a5919e577ba83a52d4e406cf4d0154463" id="r_a5919e577ba83a52d4e406cf4d0154463"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dcc/namespacestd.xhtml#a5919e577ba83a52d4e406cf4d0154463">std::terminate</a> ()</td></tr>
<tr class="separator:a5919e577ba83a52d4e406cf4d0154463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9ddbb8c902e95f12b84e1143c38d6e" id="r_aeb9ddbb8c902e95f12b84e1143c38d6e"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeb9ddbb8c902e95f12b84e1143c38d6e">new_helper</a> (std::size_t size)</td></tr>
<tr class="separator:aeb9ddbb8c902e95f12b84e1143c38d6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfad8f0764cf06b8abd170d8569a7b3f" id="r_acfad8f0764cf06b8abd170d8569a7b3f"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acfad8f0764cf06b8abd170d8569a7b3f">operator new</a> (std::size_t size)</td></tr>
<tr class="separator:acfad8f0764cf06b8abd170d8569a7b3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb4213ce34d87b1076be664d2e6ff53" id="r_a8fb4213ce34d87b1076be664d2e6ff53"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8fb4213ce34d87b1076be664d2e6ff53">operator new[]</a> (std::size_t size)</td></tr>
<tr class="separator:a8fb4213ce34d87b1076be664d2e6ff53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae986feeda4dba55e45ddbb10f8706e1c" id="r_ae986feeda4dba55e45ddbb10f8706e1c"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae986feeda4dba55e45ddbb10f8706e1c">operator new</a> (std::size_t size, const std::nothrow_t tag) noexcept</td></tr>
<tr class="separator:ae986feeda4dba55e45ddbb10f8706e1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b010d85ca2321765a743ed5c1f4368c" id="r_a0b010d85ca2321765a743ed5c1f4368c"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b010d85ca2321765a743ed5c1f4368c">operator new[]</a> (std::size_t size, const std::nothrow_t &amp;tag) noexcept</td></tr>
<tr class="separator:a0b010d85ca2321765a743ed5c1f4368c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1329b4640f8881fe845ab8687d264edd" id="r_a1329b4640f8881fe845ab8687d264edd"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1329b4640f8881fe845ab8687d264edd">operator new</a> (std::size_t size, void *place) noexcept</td></tr>
<tr class="separator:a1329b4640f8881fe845ab8687d264edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d189e2df1cc9c17a4137b7de336190a" id="r_a8d189e2df1cc9c17a4137b7de336190a"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d189e2df1cc9c17a4137b7de336190a">operator new[]</a> (std::size_t size, void *place) noexcept</td></tr>
<tr class="separator:a8d189e2df1cc9c17a4137b7de336190a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa145befcf5e7b83424408ca503c8637" id="r_afa145befcf5e7b83424408ca503c8637"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa145befcf5e7b83424408ca503c8637">operator delete</a> (void *ptr) noexcept</td></tr>
<tr class="separator:afa145befcf5e7b83424408ca503c8637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22aea74a1155aa798d6032da46da2391" id="r_a22aea74a1155aa798d6032da46da2391"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22aea74a1155aa798d6032da46da2391">operator delete[]</a> (void *ptr) noexcept</td></tr>
<tr class="separator:a22aea74a1155aa798d6032da46da2391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de24f7112c58b99e9601f0d8d30c239" id="r_a2de24f7112c58b99e9601f0d8d30c239"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2de24f7112c58b99e9601f0d8d30c239">operator delete</a> (void *ptr, const std::nothrow_t &amp;tag) noexcept</td></tr>
<tr class="separator:a2de24f7112c58b99e9601f0d8d30c239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add50227a255308a893efef302c51ab44" id="r_add50227a255308a893efef302c51ab44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add50227a255308a893efef302c51ab44">operator delete[]</a> (void *ptr, const std::nothrow_t &amp;tag) noexcept</td></tr>
<tr class="separator:add50227a255308a893efef302c51ab44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a402f57ed8486fa8cc2d6f97e8e3df16c" id="r_a402f57ed8486fa8cc2d6f97e8e3df16c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a402f57ed8486fa8cc2d6f97e8e3df16c">operator delete</a> (void *ptr, void *place) noexcept</td></tr>
<tr class="separator:a402f57ed8486fa8cc2d6f97e8e3df16c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fac552170e98bbbf578a23d5c4c7d6f" id="r_a7fac552170e98bbbf578a23d5c4c7d6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7fac552170e98bbbf578a23d5c4c7d6f">operator delete[]</a> (void *ptr, void *place) noexcept</td></tr>
<tr class="separator:a7fac552170e98bbbf578a23d5c4c7d6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ae4b7b14b5246bacb54f2a4ae366ccd44" id="r_ae4b7b14b5246bacb54f2a4ae366ccd44"><td class="memItemLeft" align="right" valign="top">const nothrow_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/dcc/namespacestd.xhtml#ae4b7b14b5246bacb54f2a4ae366ccd44">std::nothrow</a></td></tr>
<tr class="separator:ae4b7b14b5246bacb54f2a4ae366ccd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Documentation des fonctions</h2>
<a id="aeb9ddbb8c902e95f12b84e1143c38d6e" name="aeb9ddbb8c902e95f12b84e1143c38d6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb9ddbb8c902e95f12b84e1143c38d6e">&#9670;&#160;</a></span>new_helper()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void * new_helper </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/dc8/new_8cpp_aeb9ddbb8c902e95f12b84e1143c38d6e_icgraph.svg" width="275" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="afa145befcf5e7b83424408ca503c8637" name="afa145befcf5e7b83424408ca503c8637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa145befcf5e7b83424408ca503c8637">&#9670;&#160;</a></span>operator delete() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2de24f7112c58b99e9601f0d8d30c239" name="a2de24f7112c58b99e9601f0d8d30c239"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de24f7112c58b99e9601f0d8d30c239">&#9670;&#160;</a></span>operator delete() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::nothrow_t &amp;&#160;</td>
          <td class="paramname"><em>tag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a402f57ed8486fa8cc2d6f97e8e3df16c" name="a402f57ed8486fa8cc2d6f97e8e3df16c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a402f57ed8486fa8cc2d6f97e8e3df16c">&#9670;&#160;</a></span>operator delete() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>place</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a22aea74a1155aa798d6032da46da2391" name="a22aea74a1155aa798d6032da46da2391"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22aea74a1155aa798d6032da46da2391">&#9670;&#160;</a></span>operator delete[]() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete[] </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="add50227a255308a893efef302c51ab44" name="add50227a255308a893efef302c51ab44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add50227a255308a893efef302c51ab44">&#9670;&#160;</a></span>operator delete[]() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete[] </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::nothrow_t &amp;&#160;</td>
          <td class="paramname"><em>tag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7fac552170e98bbbf578a23d5c4c7d6f" name="a7fac552170e98bbbf578a23d5c4c7d6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fac552170e98bbbf578a23d5c4c7d6f">&#9670;&#160;</a></span>operator delete[]() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator delete[] </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>place</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acfad8f0764cf06b8abd170d8569a7b3f" name="acfad8f0764cf06b8abd170d8569a7b3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfad8f0764cf06b8abd170d8569a7b3f">&#9670;&#160;</a></span>operator new() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/dc8/new_8cpp_acfad8f0764cf06b8abd170d8569a7b3f_cgraph.svg" width="282" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae986feeda4dba55e45ddbb10f8706e1c" name="ae986feeda4dba55e45ddbb10f8706e1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae986feeda4dba55e45ddbb10f8706e1c">&#9670;&#160;</a></span>operator new() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::nothrow_t&#160;</td>
          <td class="paramname"><em>tag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/dc8/new_8cpp_ae986feeda4dba55e45ddbb10f8706e1c_cgraph.svg" width="264" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1329b4640f8881fe845ab8687d264edd" name="a1329b4640f8881fe845ab8687d264edd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1329b4640f8881fe845ab8687d264edd">&#9670;&#160;</a></span>operator new() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>place</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8fb4213ce34d87b1076be664d2e6ff53" name="a8fb4213ce34d87b1076be664d2e6ff53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fb4213ce34d87b1076be664d2e6ff53">&#9670;&#160;</a></span>operator new[]() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new[] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b010d85ca2321765a743ed5c1f4368c" name="a0b010d85ca2321765a743ed5c1f4368c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b010d85ca2321765a743ed5c1f4368c">&#9670;&#160;</a></span>operator new[]() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new[] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::nothrow_t &amp;&#160;</td>
          <td class="paramname"><em>tag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../da/dc8/new_8cpp_a0b010d85ca2321765a743ed5c1f4368c_cgraph.svg" width="275" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8d189e2df1cc9c17a4137b7de336190a" name="a8d189e2df1cc9c17a4137b7de336190a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d189e2df1cc9c17a4137b7de336190a">&#9670;&#160;</a></span>operator new[]() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * operator new[] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>place</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_6719ab1f1f7655efc2fa43f7eb574fd1.xhtml">libs</a></li><li class="navelem"><a class="el" href="../../dir_650b651c4fc0af5fb7ffad415ecb503f.xhtml">Arduino_AVR</a></li><li class="navelem"><a class="el" href="../../da/dc8/new_8cpp.xhtml">new.cpp</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
