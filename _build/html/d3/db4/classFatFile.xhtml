<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe FatFile</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d3/db4/classFatFile.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pub-static-methods">Fonctions membres publiques statiques</a> &#124;
<a href="#pri-methods">Fonctions membres privées</a> &#124;
<a href="#pri-static-methods">Fonctions membres privées statiques</a> &#124;
<a href="#pri-attribs">Attributs privés</a> &#124;
<a href="#pri-static-attribs">Attributs privés statiques</a> &#124;
<a href="#friends">Amis</a> &#124;
<a href="../../dc/d31/classFatFile-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe FatFile</div></div>
</div><!--header-->
<div class="contents">

<p>Basic file class.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dba/FatFile_8h_source.xhtml">FatFile.h</a>&gt;</code></p>
<div class="dynheader">
Graphe d'héritage de FatFile:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dc/d75/classFatFile__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Graphe de collaboration de FatFile:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d5/d94/classFatFile__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:a7b591c9b92165fa8e4eae8c30c30e533" id="r_a7b591c9b92165fa8e4eae8c30c30e533"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b591c9b92165fa8e4eae8c30c30e533">FatFile</a> ()</td></tr>
<tr class="separator:a7b591c9b92165fa8e4eae8c30c30e533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f9a296138648d6135cbbbf41ef6b92" id="r_a38f9a296138648d6135cbbbf41ef6b92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38f9a296138648d6135cbbbf41ef6b92">FatFile</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag)</td></tr>
<tr class="separator:a38f9a296138648d6135cbbbf41ef6b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6738e1bf9c75bd854d9c9c989c53668" id="r_ac6738e1bf9c75bd854d9c9c989c53668"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6738e1bf9c75bd854d9c9c989c53668">operator bool</a> () const</td></tr>
<tr class="separator:ac6738e1bf9c75bd854d9c9c989c53668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f40718e0e4923659a1b38e3cd24d0dd" id="r_a2f40718e0e4923659a1b38e3cd24d0dd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f40718e0e4923659a1b38e3cd24d0dd">attrib</a> ()</td></tr>
<tr class="separator:a2f40718e0e4923659a1b38e3cd24d0dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6470379dc6d57c62a8cc650635049da9" id="r_a6470379dc6d57c62a8cc650635049da9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6470379dc6d57c62a8cc650635049da9">attrib</a> (uint8_t bits)</td></tr>
<tr class="separator:a6470379dc6d57c62a8cc650635049da9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3cb9982c0e8e6e627f28d8ee552446" id="r_a7b3cb9982c0e8e6e627f28d8ee552446"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b3cb9982c0e8e6e627f28d8ee552446">available</a> () const</td></tr>
<tr class="separator:a7b3cb9982c0e8e6e627f28d8ee552446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac304e37e45f3871395780021bf84cea1" id="r_ac304e37e45f3871395780021bf84cea1"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac304e37e45f3871395780021bf84cea1">available32</a> () const</td></tr>
<tr class="separator:ac304e37e45f3871395780021bf84cea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052e2c15a39b322a5307b693b8835b22" id="r_a052e2c15a39b322a5307b693b8835b22"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a052e2c15a39b322a5307b693b8835b22">clearError</a> ()</td></tr>
<tr class="separator:a052e2c15a39b322a5307b693b8835b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca2a2eff91e6aa55fe1b0e3860c9a05" id="r_aeca2a2eff91e6aa55fe1b0e3860c9a05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeca2a2eff91e6aa55fe1b0e3860c9a05">clearWriteError</a> ()</td></tr>
<tr class="separator:aeca2a2eff91e6aa55fe1b0e3860c9a05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd16af325e0642e4bff6430b7d8bb18b" id="r_afd16af325e0642e4bff6430b7d8bb18b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd16af325e0642e4bff6430b7d8bb18b">close</a> ()</td></tr>
<tr class="separator:afd16af325e0642e4bff6430b7d8bb18b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b3c5a763416ca62c70e3db74033cd0" id="r_a12b3c5a763416ca62c70e3db74033cd0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a12b3c5a763416ca62c70e3db74033cd0">contiguousRange</a> (uint32_t *bgnSector, uint32_t *endSector)</td></tr>
<tr class="separator:a12b3c5a763416ca62c70e3db74033cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0afc2a1cffa238d1cb2049bfa2d8d199" id="r_a0afc2a1cffa238d1cb2049bfa2d8d199"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0afc2a1cffa238d1cb2049bfa2d8d199">createContiguous</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *path, uint32_t size)</td></tr>
<tr class="separator:a0afc2a1cffa238d1cb2049bfa2d8d199"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0853fbd44aee2798d14d8e3aed78f8bf" id="r_a0853fbd44aee2798d14d8e3aed78f8bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0853fbd44aee2798d14d8e3aed78f8bf">createContiguous</a> (const char *path, uint32_t size)</td></tr>
<tr class="separator:a0853fbd44aee2798d14d8e3aed78f8bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526f3dd56ce205690e45ffc86ef6f891" id="r_a526f3dd56ce205690e45ffc86ef6f891"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a526f3dd56ce205690e45ffc86ef6f891">curCluster</a> () const</td></tr>
<tr class="separator:a526f3dd56ce205690e45ffc86ef6f891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e0620949f97e9b9c91ed1094d728aa" id="r_a97e0620949f97e9b9c91ed1094d728aa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97e0620949f97e9b9c91ed1094d728aa">curPosition</a> () const</td></tr>
<tr class="separator:a97e0620949f97e9b9c91ed1094d728aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4e9ab3056125b07f15d14ca26d5346" id="r_a2f4e9ab3056125b07f15d14ca26d5346"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f4e9ab3056125b07f15d14ca26d5346">dirEntry</a> (<a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *dir)</td></tr>
<tr class="separator:a2f4e9ab3056125b07f15d14ca26d5346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f0d6488685dc3be61720caca49fa116" id="r_a7f0d6488685dc3be61720caca49fa116"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7f0d6488685dc3be61720caca49fa116">dirIndex</a> () const</td></tr>
<tr class="separator:a7f0d6488685dc3be61720caca49fa116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2ed15f05c9ccbce355e7a8d3ce8382d" id="r_ae2ed15f05c9ccbce355e7a8d3ce8382d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae2ed15f05c9ccbce355e7a8d3ce8382d">dirSize</a> ()</td></tr>
<tr class="separator:ae2ed15f05c9ccbce355e7a8d3ce8382d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f01d27954ae49aeb6888ac7302f55d9" id="r_a4f01d27954ae49aeb6888ac7302f55d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4f01d27954ae49aeb6888ac7302f55d9">dmpFile</a> (print_t *pr, uint32_t pos, size_t n)</td></tr>
<tr class="separator:a4f01d27954ae49aeb6888ac7302f55d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50242f98dea0d4488ce4039a279f2a57" id="r_a50242f98dea0d4488ce4039a279f2a57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a50242f98dea0d4488ce4039a279f2a57">exists</a> (const char *path)</td></tr>
<tr class="separator:a50242f98dea0d4488ce4039a279f2a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8593cb31d4e857adf1cb5312c08ad7c3" id="r_a8593cb31d4e857adf1cb5312c08ad7c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8593cb31d4e857adf1cb5312c08ad7c3">fgetpos</a> (<a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos) const</td></tr>
<tr class="separator:a8593cb31d4e857adf1cb5312c08ad7c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d86cd3af397b36d0f9ef2bf7b2afab" id="r_a69d86cd3af397b36d0f9ef2bf7b2afab"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets</a> (char *str, int num, char *delim=<a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a>)</td></tr>
<tr class="separator:a69d86cd3af397b36d0f9ef2bf7b2afab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a874940574b9c99e763526465adf8dc28" id="r_a874940574b9c99e763526465adf8dc28"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a874940574b9c99e763526465adf8dc28">fileSize</a> () const</td></tr>
<tr class="separator:a874940574b9c99e763526465adf8dc28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ac8a604863d18840f4a93c5c788b7c8" id="r_a5ac8a604863d18840f4a93c5c788b7c8"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ac8a604863d18840f4a93c5c788b7c8">firstBlock</a> () const</td></tr>
<tr class="separator:a5ac8a604863d18840f4a93c5c788b7c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3108df387f30ca3d367dd390a04daaa" id="r_af3108df387f30ca3d367dd390a04daaa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af3108df387f30ca3d367dd390a04daaa">firstSector</a> () const</td></tr>
<tr class="separator:af3108df387f30ca3d367dd390a04daaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166b5ff04754cc925f2aee71bf92f800" id="r_a166b5ff04754cc925f2aee71bf92f800"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a166b5ff04754cc925f2aee71bf92f800">flush</a> ()</td></tr>
<tr class="separator:a166b5ff04754cc925f2aee71bf92f800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac042c43d41ecfff4e101b88f3f82086e" id="r_ac042c43d41ecfff4e101b88f3f82086e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac042c43d41ecfff4e101b88f3f82086e">fsetpos</a> (const <a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *pos)</td></tr>
<tr class="separator:ac042c43d41ecfff4e101b88f3f82086e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d085c695e920b658a1505e480bc467f" id="r_a5d085c695e920b658a1505e480bc467f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d085c695e920b658a1505e480bc467f">getAccessDate</a> (uint16_t *pdate)</td></tr>
<tr class="separator:a5d085c695e920b658a1505e480bc467f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70c42baeb45e0d7047ae63de568d0d2" id="r_af70c42baeb45e0d7047ae63de568d0d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af70c42baeb45e0d7047ae63de568d0d2">getAccessDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:af70c42baeb45e0d7047ae63de568d0d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94d484b5198032a9e00194e72182cc57" id="r_a94d484b5198032a9e00194e72182cc57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a94d484b5198032a9e00194e72182cc57">getCreateDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:a94d484b5198032a9e00194e72182cc57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af732f14454c7e1468d8ed7cadcaef527" id="r_af732f14454c7e1468d8ed7cadcaef527"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af732f14454c7e1468d8ed7cadcaef527">getError</a> () const</td></tr>
<tr class="separator:af732f14454c7e1468d8ed7cadcaef527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28537b48ed2cb886c5f22984d07492b7" id="r_a28537b48ed2cb886c5f22984d07492b7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28537b48ed2cb886c5f22984d07492b7">getModifyDateTime</a> (uint16_t *pdate, uint16_t *ptime)</td></tr>
<tr class="separator:a28537b48ed2cb886c5f22984d07492b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0313d518970d1438d5cad721720cc109" id="r_a0313d518970d1438d5cad721720cc109"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0313d518970d1438d5cad721720cc109">getName</a> (char *name, size_t size)</td></tr>
<tr class="separator:a0313d518970d1438d5cad721720cc109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf906ba7948cf1331d80e530bacea489" id="r_abf906ba7948cf1331d80e530bacea489"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abf906ba7948cf1331d80e530bacea489">getName7</a> (char *name, size_t size)</td></tr>
<tr class="separator:abf906ba7948cf1331d80e530bacea489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2369692e7bc19a68ac106fd7499a2910" id="r_a2369692e7bc19a68ac106fd7499a2910"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2369692e7bc19a68ac106fd7499a2910">getName8</a> (char *name, size_t size)</td></tr>
<tr class="separator:a2369692e7bc19a68ac106fd7499a2910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adec535e4293b78431c8c9c1f44989dc4" id="r_adec535e4293b78431c8c9c1f44989dc4"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adec535e4293b78431c8c9c1f44989dc4">__attribute__</a> ((error(&quot;use <a class="el" href="#a9dfb8b93dc97289648756e695bbd17f3">getSFN</a>(name, size)&quot;))) getSFN(char *name)</td></tr>
<tr class="separator:adec535e4293b78431c8c9c1f44989dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dfb8b93dc97289648756e695bbd17f3" id="r_a9dfb8b93dc97289648756e695bbd17f3"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9dfb8b93dc97289648756e695bbd17f3">getSFN</a> (char *name, size_t size)</td></tr>
<tr class="separator:a9dfb8b93dc97289648756e695bbd17f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c7b5894ff8deee63b4db0663975321" id="r_ac5c7b5894ff8deee63b4db0663975321"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5c7b5894ff8deee63b4db0663975321">getWriteError</a> () const</td></tr>
<tr class="separator:ac5c7b5894ff8deee63b4db0663975321"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a845038578df0ef76e2a1f48d6e404aac" id="r_a845038578df0ef76e2a1f48d6e404aac"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a845038578df0ef76e2a1f48d6e404aac">isBusy</a> ()</td></tr>
<tr class="separator:a845038578df0ef76e2a1f48d6e404aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933360b20b496421b2bd9ee7a95563a6" id="r_a933360b20b496421b2bd9ee7a95563a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a933360b20b496421b2bd9ee7a95563a6">isDir</a> () const</td></tr>
<tr class="separator:a933360b20b496421b2bd9ee7a95563a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc5a87da1a5c8cb9758bfeaa7ae47b57" id="r_acc5a87da1a5c8cb9758bfeaa7ae47b57"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acc5a87da1a5c8cb9758bfeaa7ae47b57">isFile</a> () const</td></tr>
<tr class="separator:acc5a87da1a5c8cb9758bfeaa7ae47b57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6917ba9b62b4de6fc77d356d1f077a9" id="r_ae6917ba9b62b4de6fc77d356d1f077a9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6917ba9b62b4de6fc77d356d1f077a9">isFileOrSubDir</a> () const</td></tr>
<tr class="separator:ae6917ba9b62b4de6fc77d356d1f077a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae216b4a2bc44a9cfb88478fa051a1fd8" id="r_ae216b4a2bc44a9cfb88478fa051a1fd8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae216b4a2bc44a9cfb88478fa051a1fd8">isHidden</a> () const</td></tr>
<tr class="separator:ae216b4a2bc44a9cfb88478fa051a1fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8f456ab790e818bfdd225cf6ffd40f3" id="r_af8f456ab790e818bfdd225cf6ffd40f3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af8f456ab790e818bfdd225cf6ffd40f3">isLFN</a> () const</td></tr>
<tr class="separator:af8f456ab790e818bfdd225cf6ffd40f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b8a2850c086d3ce79bee64a23fbf7a6" id="r_a8b8a2850c086d3ce79bee64a23fbf7a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8b8a2850c086d3ce79bee64a23fbf7a6">isOpen</a> () const</td></tr>
<tr class="separator:a8b8a2850c086d3ce79bee64a23fbf7a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae60b4cedb69c88ac641813d5edfa6b4a" id="r_ae60b4cedb69c88ac641813d5edfa6b4a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae60b4cedb69c88ac641813d5edfa6b4a">isReadable</a> () const</td></tr>
<tr class="separator:ae60b4cedb69c88ac641813d5edfa6b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaf639ec8f86f34aeb7e6b3615526f0b" id="r_abaf639ec8f86f34aeb7e6b3615526f0b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abaf639ec8f86f34aeb7e6b3615526f0b">isReadOnly</a> () const</td></tr>
<tr class="separator:abaf639ec8f86f34aeb7e6b3615526f0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03421a0c28649332f55e6ca06d3aeedb" id="r_a03421a0c28649332f55e6ca06d3aeedb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03421a0c28649332f55e6ca06d3aeedb">isRoot</a> () const</td></tr>
<tr class="separator:a03421a0c28649332f55e6ca06d3aeedb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fda8004720ec4cc55710869dbb52e35" id="r_a8fda8004720ec4cc55710869dbb52e35"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8fda8004720ec4cc55710869dbb52e35">isRoot32</a> () const</td></tr>
<tr class="separator:a8fda8004720ec4cc55710869dbb52e35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc65089f7ce6c1ff92edbf0bff59dee" id="r_a0cc65089f7ce6c1ff92edbf0bff59dee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0cc65089f7ce6c1ff92edbf0bff59dee">isRootFixed</a> () const</td></tr>
<tr class="separator:a0cc65089f7ce6c1ff92edbf0bff59dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd02c5d26f7d4f8739a8610116a6660" id="r_abfd02c5d26f7d4f8739a8610116a6660"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abfd02c5d26f7d4f8739a8610116a6660">isSubDir</a> () const</td></tr>
<tr class="separator:abfd02c5d26f7d4f8739a8610116a6660"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48087bdeb6b94fc27e0f74c3d90af5a9" id="r_a48087bdeb6b94fc27e0f74c3d90af5a9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a48087bdeb6b94fc27e0f74c3d90af5a9">isSystem</a> () const</td></tr>
<tr class="separator:a48087bdeb6b94fc27e0f74c3d90af5a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa484d5b2b147c5f3fe0e26b6eaf11ffc" id="r_aa484d5b2b147c5f3fe0e26b6eaf11ffc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa484d5b2b147c5f3fe0e26b6eaf11ffc">isWritable</a> () const</td></tr>
<tr class="separator:aa484d5b2b147c5f3fe0e26b6eaf11ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ab9d16bcc778150a364c26de467de1" id="r_a60ab9d16bcc778150a364c26de467de1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a60ab9d16bcc778150a364c26de467de1">ls</a> (print_t *pr, uint8_t flags=0, uint8_t indent=0)</td></tr>
<tr class="separator:a60ab9d16bcc778150a364c26de467de1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abab5b9f72cc796388dd4eed01d13d90d" id="r_abab5b9f72cc796388dd4eed01d13d90d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abab5b9f72cc796388dd4eed01d13d90d">mkdir</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dir, const char *path, bool pFlag=true)</td></tr>
<tr class="separator:abab5b9f72cc796388dd4eed01d13d90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2bbee53059029f7a22c8eaec81cb8a" id="r_a5f2bbee53059029f7a22c8eaec81cb8a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5f2bbee53059029f7a22c8eaec81cb8a">open</a> (<a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *vol, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a5f2bbee53059029f7a22c8eaec81cb8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5318ee7a7700ff23721497945fba363d" id="r_a5318ee7a7700ff23721497945fba363d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5318ee7a7700ff23721497945fba363d">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, uint16_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a5318ee7a7700ff23721497945fba363d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a662db270440e29b619cbc89f5595f73d" id="r_a662db270440e29b619cbc89f5595f73d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a662db270440e29b619cbc89f5595f73d">open</a> (uint16_t index, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a662db270440e29b619cbc89f5595f73d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22c2b68a8a426758d15981de17431b5d" id="r_a22c2b68a8a426758d15981de17431b5d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22c2b68a8a426758d15981de17431b5d">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a22c2b68a8a426758d15981de17431b5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2da94d4556eebd807669e0514433fffa" id="r_a2da94d4556eebd807669e0514433fffa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2da94d4556eebd807669e0514433fffa">open</a> (const char *path, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:a2da94d4556eebd807669e0514433fffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8977563ad297039946e13a1acd5c651" id="r_ad8977563ad297039946e13a1acd5c651"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8977563ad297039946e13a1acd5c651">openCwd</a> ()</td></tr>
<tr class="separator:ad8977563ad297039946e13a1acd5c651"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ca76086a89af45d2cae451b55e6f20f" id="r_a4ca76086a89af45d2cae451b55e6f20f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ca76086a89af45d2cae451b55e6f20f">openExistingSFN</a> (const char *path)</td></tr>
<tr class="separator:a4ca76086a89af45d2cae451b55e6f20f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acda9b1bf547d43e183e657bee053a48d" id="r_acda9b1bf547d43e183e657bee053a48d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acda9b1bf547d43e183e657bee053a48d">openNext</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag=<a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a>)</td></tr>
<tr class="separator:acda9b1bf547d43e183e657bee053a48d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e0c0548fed3a69e7284b91b694439d4" id="r_a7e0c0548fed3a69e7284b91b694439d4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7e0c0548fed3a69e7284b91b694439d4">openRoot</a> (<a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *vol)</td></tr>
<tr class="separator:a7e0c0548fed3a69e7284b91b694439d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05b7136b887539426856c623869aa3a" id="r_ac05b7136b887539426856c623869aa3a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac05b7136b887539426856c623869aa3a">peek</a> ()</td></tr>
<tr class="separator:ac05b7136b887539426856c623869aa3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeb13b9de68bf9097c863c41d655ee83" id="r_aeeb13b9de68bf9097c863c41d655ee83"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeeb13b9de68bf9097c863c41d655ee83">preAllocate</a> (uint32_t length)</td></tr>
<tr class="separator:aeeb13b9de68bf9097c863c41d655ee83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22be4c339d0bfa331f75415b74dd4f37" id="r_a22be4c339d0bfa331f75415b74dd4f37"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22be4c339d0bfa331f75415b74dd4f37">printAccessDate</a> (print_t *pr)</td></tr>
<tr class="separator:a22be4c339d0bfa331f75415b74dd4f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b3196bb1f6a68a2447e53b09369aef" id="r_a19b3196bb1f6a68a2447e53b09369aef"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a19b3196bb1f6a68a2447e53b09369aef">printAccessDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a19b3196bb1f6a68a2447e53b09369aef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab22396a285e27b53501a0047ddd97f59" id="r_ab22396a285e27b53501a0047ddd97f59"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab22396a285e27b53501a0047ddd97f59">printCreateDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:ab22396a285e27b53501a0047ddd97f59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4a61a0cca1813d2ad0f6fe99cc4e41d" id="r_aa4a61a0cca1813d2ad0f6fe99cc4e41d"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa4a61a0cca1813d2ad0f6fe99cc4e41d">printField</a> (double value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:aa4a61a0cca1813d2ad0f6fe99cc4e41d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90ccef676afd62bbe7c773dd863a56e0" id="r_a90ccef676afd62bbe7c773dd863a56e0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a90ccef676afd62bbe7c773dd863a56e0">printField</a> (float value, char term, uint8_t prec=2)</td></tr>
<tr class="separator:a90ccef676afd62bbe7c773dd863a56e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f906be79086f38943cb0911310d67bf" id="r_a8f906be79086f38943cb0911310d67bf"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a8f906be79086f38943cb0911310d67bf"><td class="memTemplItemLeft" align="right" valign="top">size_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a8f906be79086f38943cb0911310d67bf">printField</a> (Type value, char term)</td></tr>
<tr class="separator:a8f906be79086f38943cb0911310d67bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a5d2de2737c201aa39ca1bd2ab9c47" id="r_a12a5d2de2737c201aa39ca1bd2ab9c47"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a12a5d2de2737c201aa39ca1bd2ab9c47">printFileSize</a> (print_t *pr)</td></tr>
<tr class="separator:a12a5d2de2737c201aa39ca1bd2ab9c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c8a1cabcae673e43c590f5db44c65a" id="r_a43c8a1cabcae673e43c590f5db44c65a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43c8a1cabcae673e43c590f5db44c65a">printModifyDateTime</a> (print_t *pr)</td></tr>
<tr class="separator:a43c8a1cabcae673e43c590f5db44c65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe18a787fb8640e2d2483370c770f82f" id="r_afe18a787fb8640e2d2483370c770f82f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe18a787fb8640e2d2483370c770f82f">printName</a> (print_t *pr)</td></tr>
<tr class="separator:afe18a787fb8640e2d2483370c770f82f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35dedc90d44758d10d967785dc14da2b" id="r_a35dedc90d44758d10d967785dc14da2b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35dedc90d44758d10d967785dc14da2b">printName7</a> (print_t *pr)</td></tr>
<tr class="separator:a35dedc90d44758d10d967785dc14da2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508c86ed62a34a920574dd270dc64322" id="r_a508c86ed62a34a920574dd270dc64322"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a508c86ed62a34a920574dd270dc64322">printName8</a> (print_t *pr)</td></tr>
<tr class="separator:a508c86ed62a34a920574dd270dc64322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a791cd7aade71f609aab62ec018aea3c0" id="r_a791cd7aade71f609aab62ec018aea3c0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a791cd7aade71f609aab62ec018aea3c0">printSFN</a> (print_t *pr)</td></tr>
<tr class="separator:a791cd7aade71f609aab62ec018aea3c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ae55ff6fe158c2340071d702a363c5" id="r_a60ae55ff6fe158c2340071d702a363c5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a60ae55ff6fe158c2340071d702a363c5">read</a> ()</td></tr>
<tr class="separator:a60ae55ff6fe158c2340071d702a363c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba893af8107a18017482d2311b066187" id="r_aba893af8107a18017482d2311b066187"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aba893af8107a18017482d2311b066187">read</a> (void *buf, size_t count)</td></tr>
<tr class="separator:aba893af8107a18017482d2311b066187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29502cd34ef186763d2196daef27df1f" id="r_a29502cd34ef186763d2196daef27df1f"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a29502cd34ef186763d2196daef27df1f">readDir</a> (<a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *dir)</td></tr>
<tr class="separator:a29502cd34ef186763d2196daef27df1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac837a537fbcca14c7aa390c5fc9f4e7c" id="r_ac837a537fbcca14c7aa390c5fc9f4e7c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac837a537fbcca14c7aa390c5fc9f4e7c">remove</a> ()</td></tr>
<tr class="separator:ac837a537fbcca14c7aa390c5fc9f4e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d3276f0b02b03e863afafe5731fedb" id="r_a75d3276f0b02b03e863afafe5731fedb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a75d3276f0b02b03e863afafe5731fedb">remove</a> (const char *path)</td></tr>
<tr class="separator:a75d3276f0b02b03e863afafe5731fedb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cebcac13c1f4c9de7a055ae73133599" id="r_a4cebcac13c1f4c9de7a055ae73133599"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4cebcac13c1f4c9de7a055ae73133599">rename</a> (const char *newPath)</td></tr>
<tr class="separator:a4cebcac13c1f4c9de7a055ae73133599"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b42f2454ff462555c07ea094a92a1e0" id="r_a4b42f2454ff462555c07ea094a92a1e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4b42f2454ff462555c07ea094a92a1e0">rename</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, const char *newPath)</td></tr>
<tr class="separator:a4b42f2454ff462555c07ea094a92a1e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aac6e0b3cb08fc8b8668e916a8b0ca5" id="r_a5aac6e0b3cb08fc8b8668e916a8b0ca5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5aac6e0b3cb08fc8b8668e916a8b0ca5">rewind</a> ()</td></tr>
<tr class="separator:a5aac6e0b3cb08fc8b8668e916a8b0ca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9515bac181d33e7f0125e88fa2ccd283" id="r_a9515bac181d33e7f0125e88fa2ccd283"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9515bac181d33e7f0125e88fa2ccd283">rmdir</a> ()</td></tr>
<tr class="separator:a9515bac181d33e7f0125e88fa2ccd283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac780a80526f86d3def701ecdc99d8bfe" id="r_ac780a80526f86d3def701ecdc99d8bfe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac780a80526f86d3def701ecdc99d8bfe">rmRfStar</a> ()</td></tr>
<tr class="separator:ac780a80526f86d3def701ecdc99d8bfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5812037ea30777cc350698ad26f2c73f" id="r_a5812037ea30777cc350698ad26f2c73f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5812037ea30777cc350698ad26f2c73f">seekCur</a> (int32_t offset)</td></tr>
<tr class="separator:a5812037ea30777cc350698ad26f2c73f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84f677f4e75ef6fa2eb632f4cdf6b486" id="r_a84f677f4e75ef6fa2eb632f4cdf6b486"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84f677f4e75ef6fa2eb632f4cdf6b486">seekEnd</a> (int32_t offset=0)</td></tr>
<tr class="separator:a84f677f4e75ef6fa2eb632f4cdf6b486"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab067190d25733ed7e697d9890f61fd7a" id="r_ab067190d25733ed7e697d9890f61fd7a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab067190d25733ed7e697d9890f61fd7a">seekSet</a> (uint32_t pos)</td></tr>
<tr class="separator:ab067190d25733ed7e697d9890f61fd7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f3dc4896c542d695e11aac927f585e" id="r_a67f3dc4896c542d695e11aac927f585e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a67f3dc4896c542d695e11aac927f585e">sync</a> ()</td></tr>
<tr class="separator:a67f3dc4896c542d695e11aac927f585e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56dabdf73833b7e961c4530eb8e16d23" id="r_a56dabdf73833b7e961c4530eb8e16d23"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56dabdf73833b7e961c4530eb8e16d23">timestamp</a> (uint8_t flags, uint16_t year, uint8_t month, uint8_t day, uint8_t hour, uint8_t minute, uint8_t second)</td></tr>
<tr class="separator:a56dabdf73833b7e961c4530eb8e16d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dda881dac19ea2aa9b2e85a229a98d7" id="r_a7dda881dac19ea2aa9b2e85a229a98d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7dda881dac19ea2aa9b2e85a229a98d7">truncate</a> ()</td></tr>
<tr class="separator:a7dda881dac19ea2aa9b2e85a229a98d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e663098a578635d37d92e82d18d616" id="r_aa6e663098a578635d37d92e82d18d616"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa6e663098a578635d37d92e82d18d616">truncate</a> (uint32_t length)</td></tr>
<tr class="separator:aa6e663098a578635d37d92e82d18d616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a081dd810835f1ebf8c23ffe92706b485" id="r_a081dd810835f1ebf8c23ffe92706b485"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a081dd810835f1ebf8c23ffe92706b485">write</a> (const char *str)</td></tr>
<tr class="separator:a081dd810835f1ebf8c23ffe92706b485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae51e724ac6cc3d67d64a5a666d5850f1" id="r_ae51e724ac6cc3d67d64a5a666d5850f1"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae51e724ac6cc3d67d64a5a666d5850f1">write</a> (uint8_t b)</td></tr>
<tr class="separator:ae51e724ac6cc3d67d64a5a666d5850f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d84d871ac904a22aa48308713d14682" id="r_a5d84d871ac904a22aa48308713d14682"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d84d871ac904a22aa48308713d14682">write</a> (const void *buf, size_t count)</td></tr>
<tr class="separator:a5d84d871ac904a22aa48308713d14682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a11f3307da6232b5f2d11812832d93a" id="r_a6a11f3307da6232b5f2d11812832d93a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a11f3307da6232b5f2d11812832d93a">ls</a> (uint8_t flags=0)</td></tr>
<tr class="separator:a6a11f3307da6232b5f2d11812832d93a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1cbc3aeb0f5193b7a26595966da9621" id="r_ad1cbc3aeb0f5193b7a26595966da9621"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad1cbc3aeb0f5193b7a26595966da9621">printName</a> ()</td></tr>
<tr class="separator:ad1cbc3aeb0f5193b7a26595966da9621"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Fonctions membres publiques statiques</h2></td></tr>
<tr class="memitem:aabcd863883bfcfb37b63dbd6021f7eb8" id="r_aabcd863883bfcfb37b63dbd6021f7eb8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabcd863883bfcfb37b63dbd6021f7eb8">printFatDate</a> (print_t *pr, uint16_t fatDate)</td></tr>
<tr class="separator:aabcd863883bfcfb37b63dbd6021f7eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f84d953190ea94710dad9ebb897b957" id="r_a7f84d953190ea94710dad9ebb897b957"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7f84d953190ea94710dad9ebb897b957">printFatTime</a> (print_t *pr, uint16_t fatTime)</td></tr>
<tr class="separator:a7f84d953190ea94710dad9ebb897b957"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Fonctions membres privées</h2></td></tr>
<tr class="memitem:afcf966473411ee32621742f1820abce1" id="r_afcf966473411ee32621742f1820abce1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afcf966473411ee32621742f1820abce1">addCluster</a> ()</td></tr>
<tr class="separator:afcf966473411ee32621742f1820abce1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65510f81a364343bb7b21f86b5a35b5" id="r_aa65510f81a364343bb7b21f86b5a35b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa65510f81a364343bb7b21f86b5a35b5">addDirCluster</a> ()</td></tr>
<tr class="separator:aa65510f81a364343bb7b21f86b5a35b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d0cd3aef6df0a7eff91b80898d83d88" id="r_a8d0cd3aef6df0a7eff91b80898d83d88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d0cd3aef6df0a7eff91b80898d83d88">cacheDir</a> (uint16_t index)</td></tr>
<tr class="separator:a8d0cd3aef6df0a7eff91b80898d83d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de799df045e4f60e9ebbcd6d341f9a8" id="r_a1de799df045e4f60e9ebbcd6d341f9a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1de799df045e4f60e9ebbcd6d341f9a8">cacheDirEntry</a> (uint8_t action)</td></tr>
<tr class="separator:a1de799df045e4f60e9ebbcd6d341f9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c22f576875289e31a7befcbd101d9f2" id="r_a5c22f576875289e31a7befcbd101d9f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c22f576875289e31a7befcbd101d9f2">cmpName</a> (uint16_t index, <a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname, uint8_t lfnOrd)</td></tr>
<tr class="separator:a5c22f576875289e31a7befcbd101d9f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f9fe3d3081c0bfbca25360adf391a8" id="r_af2f9fe3d3081c0bfbca25360adf391a8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2f9fe3d3081c0bfbca25360adf391a8">createLFN</a> (uint16_t index, <a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname, uint8_t lfnOrd)</td></tr>
<tr class="separator:af2f9fe3d3081c0bfbca25360adf391a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40d17b812ba502fe51873dcfd66ad77c" id="r_a40d17b812ba502fe51873dcfd66ad77c"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a40d17b812ba502fe51873dcfd66ad77c">getLfnChar</a> (<a class="el" href="../../d8/dfa/structDirLfn__t.xhtml">DirLfn_t</a> *ldir, uint8_t i)</td></tr>
<tr class="separator:a40d17b812ba502fe51873dcfd66ad77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b8a4ebe4e7ce29bf01e549bdb8f568b" id="r_a4b8a4ebe4e7ce29bf01e549bdb8f568b"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4b8a4ebe4e7ce29bf01e549bdb8f568b">lfnChecksum</a> (const uint8_t *name)</td></tr>
<tr class="separator:a4b8a4ebe4e7ce29bf01e549bdb8f568b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1b89789fd86994d0518c69247d8c27" id="r_afa1b89789fd86994d0518c69247d8c27"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa1b89789fd86994d0518c69247d8c27">makeUniqueSfn</a> (<a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname)</td></tr>
<tr class="separator:afa1b89789fd86994d0518c69247d8c27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df45b5ab9063af4730251c563d7af1e" id="r_a5df45b5ab9063af4730251c563d7af1e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5df45b5ab9063af4730251c563d7af1e">openCluster</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *file)</td></tr>
<tr class="separator:a5df45b5ab9063af4730251c563d7af1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49a7fdafed735cc59b9eda302399cf51" id="r_a49a7fdafed735cc59b9eda302399cf51"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a49a7fdafed735cc59b9eda302399cf51">parsePathName</a> (const char *str, <a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname, const char **ptr)</td></tr>
<tr class="separator:a49a7fdafed735cc59b9eda302399cf51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a00bdc3dc3678829a4ff46ed116a22" id="r_a33a00bdc3dc3678829a4ff46ed116a22"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a33a00bdc3dc3678829a4ff46ed116a22">parsePathName</a> (const char *str, <a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *fname, const char **ptr)</td></tr>
<tr class="separator:a33a00bdc3dc3678829a4ff46ed116a22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb4108f33aa7e10fff747b4939787c5a" id="r_acb4108f33aa7e10fff747b4939787c5a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb4108f33aa7e10fff747b4939787c5a">mkdir</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *parent, <a class="el" href="../../de/dba/FatFile_8h.xhtml#a30a3bf501b73ac231aae1e3047b342fb">FatName_t</a> *fname)</td></tr>
<tr class="separator:acb4108f33aa7e10fff747b4939787c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa729447d16ce34a9a575c27ac58dbb12" id="r_aa729447d16ce34a9a575c27ac58dbb12"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa729447d16ce34a9a575c27ac58dbb12">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, <a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag)</td></tr>
<tr class="separator:aa729447d16ce34a9a575c27ac58dbb12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd095e898758e6008f33cca17e92b72" id="r_aefd095e898758e6008f33cca17e92b72"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aefd095e898758e6008f33cca17e92b72">open</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, <a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *fname, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag)</td></tr>
<tr class="separator:aefd095e898758e6008f33cca17e92b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aa6e2d722bdf14ef34671beb23488ea" id="r_a8aa6e2d722bdf14ef34671beb23488ea"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8aa6e2d722bdf14ef34671beb23488ea">openSFN</a> (<a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *fname)</td></tr>
<tr class="separator:a8aa6e2d722bdf14ef34671beb23488ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad39f3c4d83135ad181c58306b23df0aa" id="r_ad39f3c4d83135ad181c58306b23df0aa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad39f3c4d83135ad181c58306b23df0aa">openCachedEntry</a> (<a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *dirFile, uint16_t cacheIndex, <a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a> oflag, uint8_t lfnOrd)</td></tr>
<tr class="separator:ad39f3c4d83135ad181c58306b23df0aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d137a7ff48af119d039d1e7ab8337a" id="r_a07d137a7ff48af119d039d1e7ab8337a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a07d137a7ff48af119d039d1e7ab8337a">readDirCache</a> (bool skipReadOk=false)</td></tr>
<tr class="separator:a07d137a7ff48af119d039d1e7ab8337a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-methods" name="pri-static-methods"></a>
Fonctions membres privées statiques</h2></td></tr>
<tr class="memitem:a0ccaaa03c766b52799294ec33236b01b" id="r_a0ccaaa03c766b52799294ec33236b01b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ccaaa03c766b52799294ec33236b01b">makeSFN</a> (<a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *fname)</td></tr>
<tr class="separator:a0ccaaa03c766b52799294ec33236b01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Attributs privés</h2></td></tr>
<tr class="memitem:a48c7d8668d748a04024021bc045dcc6e" id="r_a48c7d8668d748a04024021bc045dcc6e"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a48c7d8668d748a04024021bc045dcc6e">m_attributes</a> = <a class="el" href="#ae16fd44b1c014975f0a91422dc78b037">FILE_ATTR_CLOSED</a></td></tr>
<tr class="separator:a48c7d8668d748a04024021bc045dcc6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a881be485c12b054fd939e001ad762784" id="r_a881be485c12b054fd939e001ad762784"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a881be485c12b054fd939e001ad762784">m_error</a> = 0</td></tr>
<tr class="separator:a881be485c12b054fd939e001ad762784"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1849e40daeb9f7441deda7a7b05258a1" id="r_a1849e40daeb9f7441deda7a7b05258a1"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1849e40daeb9f7441deda7a7b05258a1">m_flags</a> = 0</td></tr>
<tr class="separator:a1849e40daeb9f7441deda7a7b05258a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4cf71ff0efdb6eef8be307df0c9fa5" id="r_a5f4cf71ff0efdb6eef8be307df0c9fa5"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5f4cf71ff0efdb6eef8be307df0c9fa5">m_lfnOrd</a></td></tr>
<tr class="separator:a5f4cf71ff0efdb6eef8be307df0c9fa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acef80642dcb06aab0df17512f3cf0e80" id="r_acef80642dcb06aab0df17512f3cf0e80"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acef80642dcb06aab0df17512f3cf0e80">m_dirIndex</a></td></tr>
<tr class="separator:acef80642dcb06aab0df17512f3cf0e80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad24d1529e3530de53d01d52a412e747b" id="r_ad24d1529e3530de53d01d52a412e747b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad24d1529e3530de53d01d52a412e747b">m_vol</a></td></tr>
<tr class="separator:ad24d1529e3530de53d01d52a412e747b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3fa11b216d6c34d1efe5b19eda102ac" id="r_ab3fa11b216d6c34d1efe5b19eda102ac"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3fa11b216d6c34d1efe5b19eda102ac">m_dirCluster</a></td></tr>
<tr class="separator:ab3fa11b216d6c34d1efe5b19eda102ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a2f8997fe5ac948bb2777a61c0425b3" id="r_a9a2f8997fe5ac948bb2777a61c0425b3"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a2f8997fe5ac948bb2777a61c0425b3">m_curCluster</a></td></tr>
<tr class="separator:a9a2f8997fe5ac948bb2777a61c0425b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87df00f4c68e43e58c47eb2ce19002e2" id="r_a87df00f4c68e43e58c47eb2ce19002e2"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a87df00f4c68e43e58c47eb2ce19002e2">m_curPosition</a></td></tr>
<tr class="separator:a87df00f4c68e43e58c47eb2ce19002e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72cf42ef8b28dc7dcdc2c2f50f15c290" id="r_a72cf42ef8b28dc7dcdc2c2f50f15c290"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a72cf42ef8b28dc7dcdc2c2f50f15c290">m_dirSector</a></td></tr>
<tr class="separator:a72cf42ef8b28dc7dcdc2c2f50f15c290"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5281ec4b3a498b15d89f47c41becbe6d" id="r_a5281ec4b3a498b15d89f47c41becbe6d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5281ec4b3a498b15d89f47c41becbe6d">m_fileSize</a></td></tr>
<tr class="separator:a5281ec4b3a498b15d89f47c41becbe6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3a378762cc94773507b1f32e362c5d" id="r_a3f3a378762cc94773507b1f32e362c5d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f3a378762cc94773507b1f32e362c5d">m_firstCluster</a></td></tr>
<tr class="separator:a3f3a378762cc94773507b1f32e362c5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Attributs privés statiques</h2></td></tr>
<tr class="memitem:ae16fd44b1c014975f0a91422dc78b037" id="r_ae16fd44b1c014975f0a91422dc78b037"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae16fd44b1c014975f0a91422dc78b037">FILE_ATTR_CLOSED</a> = 0</td></tr>
<tr class="separator:ae16fd44b1c014975f0a91422dc78b037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fc6734b7277948e48f048d21df45cf1" id="r_a6fc6734b7277948e48f048d21df45cf1"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6fc6734b7277948e48f048d21df45cf1">FILE_ATTR_FILE</a> = 0X08</td></tr>
<tr class="separator:a6fc6734b7277948e48f048d21df45cf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfe242bc0d32d9fd6cf0359e8b1ac7d7" id="r_abfe242bc0d32d9fd6cf0359e8b1ac7d7"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abfe242bc0d32d9fd6cf0359e8b1ac7d7">FILE_ATTR_SUBDIR</a> = <a class="el" href="../../dc/d87/FsStructs_8h.xhtml#a640662cabb5509a08f76bd02415c1760">FS_ATTRIB_DIRECTORY</a></td></tr>
<tr class="separator:abfe242bc0d32d9fd6cf0359e8b1ac7d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42aa9a9acb2365652bcb0f266e26e200" id="r_a42aa9a9acb2365652bcb0f266e26e200"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42aa9a9acb2365652bcb0f266e26e200">FILE_ATTR_ROOT_FIXED</a> = 0X40</td></tr>
<tr class="separator:a42aa9a9acb2365652bcb0f266e26e200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc90097077f2147a474123b0942fde70" id="r_abc90097077f2147a474123b0942fde70"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abc90097077f2147a474123b0942fde70">FILE_ATTR_ROOT32</a> = 0X80</td></tr>
<tr class="separator:abc90097077f2147a474123b0942fde70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e31200f87b9bf094779d2024d91eb81" id="r_a8e31200f87b9bf094779d2024d91eb81"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8e31200f87b9bf094779d2024d91eb81">FILE_ATTR_ROOT</a> = <a class="el" href="#a42aa9a9acb2365652bcb0f266e26e200">FILE_ATTR_ROOT_FIXED</a> | <a class="el" href="#abc90097077f2147a474123b0942fde70">FILE_ATTR_ROOT32</a></td></tr>
<tr class="separator:a8e31200f87b9bf094779d2024d91eb81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea3743e913b35de19b14e490b044707" id="r_a1ea3743e913b35de19b14e490b044707"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1ea3743e913b35de19b14e490b044707">FILE_ATTR_DIR</a> = <a class="el" href="#abfe242bc0d32d9fd6cf0359e8b1ac7d7">FILE_ATTR_SUBDIR</a> | <a class="el" href="#a8e31200f87b9bf094779d2024d91eb81">FILE_ATTR_ROOT</a></td></tr>
<tr class="separator:a1ea3743e913b35de19b14e490b044707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04e5a2f5cccbff1b39876fd828e3547" id="r_aa04e5a2f5cccbff1b39876fd828e3547"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa04e5a2f5cccbff1b39876fd828e3547">FILE_FLAG_READ</a> = 0X01</td></tr>
<tr class="separator:aa04e5a2f5cccbff1b39876fd828e3547"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4518991ca3fea0489213dfd8fb8978d3" id="r_a4518991ca3fea0489213dfd8fb8978d3"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4518991ca3fea0489213dfd8fb8978d3">FILE_FLAG_WRITE</a> = 0X02</td></tr>
<tr class="separator:a4518991ca3fea0489213dfd8fb8978d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0585bf2885f8366cea7c5b145ab4c58" id="r_aa0585bf2885f8366cea7c5b145ab4c58"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0585bf2885f8366cea7c5b145ab4c58">FILE_FLAG_APPEND</a> = 0X08</td></tr>
<tr class="separator:aa0585bf2885f8366cea7c5b145ab4c58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf4f38bf7448e25a4842753d4b05f0a2" id="r_acf4f38bf7448e25a4842753d4b05f0a2"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf4f38bf7448e25a4842753d4b05f0a2">FILE_FLAG_PREALLOCATE</a> = 0X20</td></tr>
<tr class="separator:acf4f38bf7448e25a4842753d4b05f0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a273b782b260a5a9365e83c582a8d7633" id="r_a273b782b260a5a9365e83c582a8d7633"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a273b782b260a5a9365e83c582a8d7633">FILE_FLAG_CONTIGUOUS</a> = 0X40</td></tr>
<tr class="separator:a273b782b260a5a9365e83c582a8d7633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18bbad5dcdba556ecb48d7eb7af0fa7c" id="r_a18bbad5dcdba556ecb48d7eb7af0fa7c"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18bbad5dcdba556ecb48d7eb7af0fa7c">FILE_FLAG_DIR_DIRTY</a> = 0X80</td></tr>
<tr class="separator:a18bbad5dcdba556ecb48d7eb7af0fa7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e494d044c64dee482b0c25ded6595c1" id="r_a6e494d044c64dee482b0c25ded6595c1"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e494d044c64dee482b0c25ded6595c1">WRITE_ERROR</a> = 0X1</td></tr>
<tr class="separator:a6e494d044c64dee482b0c25ded6595c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a864c4ee4f60ef74685f19538a1293c07" id="r_a864c4ee4f60ef74685f19538a1293c07"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a864c4ee4f60ef74685f19538a1293c07">READ_ERROR</a> = 0X2</td></tr>
<tr class="separator:a864c4ee4f60ef74685f19538a1293c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Amis</h2></td></tr>
<tr class="memitem:a6ca3f436167f187097347a20ea221555" id="r_a6ca3f436167f187097347a20ea221555"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ca3f436167f187097347a20ea221555">FatVolume</a></td></tr>
<tr class="separator:a6ca3f436167f187097347a20ea221555"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p>Basic file class. </p>
</div><h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="a7b591c9b92165fa8e4eae8c30c30e533" name="a7b591c9b92165fa8e4eae8c30c30e533"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b591c9b92165fa8e4eae8c30c30e533">&#9670;&#160;</a></span>FatFile() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FatFile::FatFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create an instance. </p>

</div>
</div>
<a id="a38f9a296138648d6135cbbbf41ef6b92" name="a38f9a296138648d6135cbbbf41ef6b92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38f9a296138648d6135cbbbf41ef6b92">&#9670;&#160;</a></span>FatFile() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FatFile::FatFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create a file object and open it in the current working directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of open flags. see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a38f9a296138648d6135cbbbf41ef6b92_cgraph.svg" width="451" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="adec535e4293b78431c8c9c1f44989dc4" name="adec535e4293b78431c8c9c1f44989dc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adec535e4293b78431c8c9c1f44989dc4">&#9670;&#160;</a></span>__attribute__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::__attribute__ </td>
          <td>(</td>
          <td class="paramtype">(error(&quot;use <a class="el" href="#a9dfb8b93dc97289648756e695bbd17f3">getSFN</a>(name, size)&quot;))&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afcf966473411ee32621742f1820abce1" name="afcf966473411ee32621742f1820abce1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcf966473411ee32621742f1820abce1">&#9670;&#160;</a></span>addCluster()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::addCluster </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afcf966473411ee32621742f1820abce1_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afcf966473411ee32621742f1820abce1_icgraph.svg" width="522" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa65510f81a364343bb7b21f86b5a35b5" name="aa65510f81a364343bb7b21f86b5a35b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa65510f81a364343bb7b21f86b5a35b5">&#9670;&#160;</a></span>addDirCluster()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::addDirCluster </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa65510f81a364343bb7b21f86b5a35b5_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa65510f81a364343bb7b21f86b5a35b5_icgraph.svg" width="331" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2f40718e0e4923659a1b38e3cd24d0dd" name="a2f40718e0e4923659a1b38e3cd24d0dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f40718e0e4923659a1b38e3cd24d0dd">&#9670;&#160;</a></span>attrib() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::attrib </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>user settable file attributes for success else -1. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2f40718e0e4923659a1b38e3cd24d0dd_cgraph.svg" width="504" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2f40718e0e4923659a1b38e3cd24d0dd_icgraph.svg" width="478" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6470379dc6d57c62a8cc650635049da9" name="a6470379dc6d57c62a8cc650635049da9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6470379dc6d57c62a8cc650635049da9">&#9670;&#160;</a></span>attrib() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::attrib </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set file attributes</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bits</td><td>bit-wise or of selected attributes: FS_ATTRIB_READ_ONLY, FS_ATTRIB_HIDDEN, FS_ATTRIB_SYSTEM, FS_ATTRIB_ARCHIVE.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="#a2f40718e0e4923659a1b38e3cd24d0dd">attrib()</a> will fail for set read-only if the file is open for write. </dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a6470379dc6d57c62a8cc650635049da9_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7b3cb9982c0e8e6e627f28d8ee552446" name="a7b3cb9982c0e8e6e627f28d8ee552446"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b3cb9982c0e8e6e627f28d8ee552446">&#9670;&#160;</a></span>available()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::available </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes available from the current position to EOF for normal files. INT_MAX is returned for very large files.</dd></dl>
<p><a class="el" href="#ac304e37e45f3871395780021bf84cea1">available32()</a> is recomended for very large files.</p>
<p>Zero is returned for directory files. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7b3cb9982c0e8e6e627f28d8ee552446_cgraph.svg" width="531" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7b3cb9982c0e8e6e627f28d8ee552446_icgraph.svg" width="351" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac304e37e45f3871395780021bf84cea1" name="ac304e37e45f3871395780021bf84cea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac304e37e45f3871395780021bf84cea1">&#9670;&#160;</a></span>available32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::available32 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes available from the current position to EOF for normal files. Zero is returned for directory files. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac304e37e45f3871395780021bf84cea1_cgraph.svg" width="351" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac304e37e45f3871395780021bf84cea1_icgraph.svg" width="591" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8d0cd3aef6df0a7eff91b80898d83d88" name="a8d0cd3aef6df0a7eff91b80898d83d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d0cd3aef6df0a7eff91b80898d83d88">&#9670;&#160;</a></span>cacheDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> * FatFile::cacheDir </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8d0cd3aef6df0a7eff91b80898d83d88_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8d0cd3aef6df0a7eff91b80898d83d88_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1de799df045e4f60e9ebbcd6d341f9a8" name="a1de799df045e4f60e9ebbcd6d341f9a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de799df045e4f60e9ebbcd6d341f9a8">&#9670;&#160;</a></span>cacheDirEntry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> * FatFile::cacheDirEntry </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>action</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a1de799df045e4f60e9ebbcd6d341f9a8_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a1de799df045e4f60e9ebbcd6d341f9a8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a052e2c15a39b322a5307b693b8835b22" name="a052e2c15a39b322a5307b693b8835b22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a052e2c15a39b322a5307b693b8835b22">&#9670;&#160;</a></span>clearError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::clearError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clear all error bits. </p>

</div>
</div>
<a id="aeca2a2eff91e6aa55fe1b0e3860c9a05" name="aeca2a2eff91e6aa55fe1b0e3860c9a05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca2a2eff91e6aa55fe1b0e3860c9a05">&#9670;&#160;</a></span>clearWriteError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::clearWriteError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set writeError to zero </p>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aeca2a2eff91e6aa55fe1b0e3860c9a05_icgraph.svg" width="100%" height="407"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="afd16af325e0642e4bff6430b7d8bb18b" name="afd16af325e0642e4bff6430b7d8bb18b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd16af325e0642e4bff6430b7d8bb18b">&#9670;&#160;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Close a file and force cached data and directory information to be written to the storage device.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afd16af325e0642e4bff6430b7d8bb18b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afd16af325e0642e4bff6430b7d8bb18b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5c22f576875289e31a7befcbd101d9f2" name="a5c22f576875289e31a7befcbd101d9f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c22f576875289e31a7befcbd101d9f2">&#9670;&#160;</a></span>cmpName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::cmpName </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>lfnOrd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5c22f576875289e31a7befcbd101d9f2_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5c22f576875289e31a7befcbd101d9f2_icgraph.svg" width="302" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a12b3c5a763416ca62c70e3db74033cd0" name="a12b3c5a763416ca62c70e3db74033cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12b3c5a763416ca62c70e3db74033cd0">&#9670;&#160;</a></span>contiguousRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::contiguousRange </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>bgnSector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>endSector</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check for contiguous file and return its raw sector range.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">bgnSector</td><td>the first sector address for the file. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">endSector</td><td>the last sector address for the file.</td></tr>
  </table>
  </dd>
</dl>
<p>Set the contiguous flag if the file is contiguous. The parameters may be nullptr to only set the flag. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a12b3c5a763416ca62c70e3db74033cd0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a12b3c5a763416ca62c70e3db74033cd0_icgraph.svg" width="455" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0853fbd44aee2798d14d8e3aed78f8bf" name="a0853fbd44aee2798d14d8e3aed78f8bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0853fbd44aee2798d14d8e3aed78f8bf">&#9670;&#160;</a></span>createContiguous() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::createContiguous </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create and open a new contiguous file of a specified size.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid file name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The desired file size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0853fbd44aee2798d14d8e3aed78f8bf_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0afc2a1cffa238d1cb2049bfa2d8d199" name="a0afc2a1cffa238d1cb2049bfa2d8d199"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0afc2a1cffa238d1cb2049bfa2d8d199">&#9670;&#160;</a></span>createContiguous() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::createContiguous </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create and open a new contiguous file of a specified size.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dirFile</td><td>The directory where the file will be created. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid file name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The desired file size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0afc2a1cffa238d1cb2049bfa2d8d199_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af2f9fe3d3081c0bfbca25360adf391a8" name="af2f9fe3d3081c0bfbca25360adf391a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2f9fe3d3081c0bfbca25360adf391a8">&#9670;&#160;</a></span>createLFN()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::createLFN </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>lfnOrd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af2f9fe3d3081c0bfbca25360adf391a8_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af2f9fe3d3081c0bfbca25360adf391a8_icgraph.svg" width="302" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a526f3dd56ce205690e45ffc86ef6f891" name="a526f3dd56ce205690e45ffc86ef6f891"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a526f3dd56ce205690e45ffc86ef6f891">&#9670;&#160;</a></span>curCluster()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::curCluster </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The current cluster number for a file or directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a526f3dd56ce205690e45ffc86ef6f891_icgraph.svg" width="364" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a97e0620949f97e9b9c91ed1094d728aa" name="a97e0620949f97e9b9c91ed1094d728aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e0620949f97e9b9c91ed1094d728aa">&#9670;&#160;</a></span>curPosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::curPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The current position for a file or directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a97e0620949f97e9b9c91ed1094d728aa_icgraph.svg" width="100%" height="567"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a2f4e9ab3056125b07f15d14ca26d5346" name="a2f4e9ab3056125b07f15d14ca26d5346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f4e9ab3056125b07f15d14ca26d5346">&#9670;&#160;</a></span>dirEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::dirEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *&#160;</td>
          <td class="paramname"><em>dir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a file's directory entry.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">dir</td><td>Location for return of the file's directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2f4e9ab3056125b07f15d14ca26d5346_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2f4e9ab3056125b07f15d14ca26d5346_icgraph.svg" width="100%" height="530"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7f0d6488685dc3be61720caca49fa116" name="a7f0d6488685dc3be61720caca49fa116"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f0d6488685dc3be61720caca49fa116">&#9670;&#160;</a></span>dirIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t FatFile::dirIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Directory entry index. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7f0d6488685dc3be61720caca49fa116_icgraph.svg" width="100%" height="514"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae2ed15f05c9ccbce355e7a8d3ce8382d" name="ae2ed15f05c9ccbce355e7a8d3ce8382d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2ed15f05c9ccbce355e7a8d3ce8382d">&#9670;&#160;</a></span>dirSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::dirSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes allocated to a directory or zero if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae2ed15f05c9ccbce355e7a8d3ce8382d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4f01d27954ae49aeb6888ac7302f55d9" name="a4f01d27954ae49aeb6888ac7302f55d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f01d27954ae49aeb6888ac7302f55d9">&#9670;&#160;</a></span>dmpFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::dmpFile </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Dump file in Hex </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for list. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>Start position in file. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number of locations to dump. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4f01d27954ae49aeb6888ac7302f55d9_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a50242f98dea0d4488ce4039a279f2a57" name="a50242f98dea0d4488ce4039a279f2a57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50242f98dea0d4488ce4039a279f2a57">&#9670;&#160;</a></span>exists()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::exists </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test for the existence of a file in a directory</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Path of the file to be tested for.</td></tr>
  </table>
  </dd>
</dl>
<p>The calling instance must be an open directory file.</p>
<p>dirFile.exists("TOFIND.TXT") searches for "TOFIND.TXT" in the directory dirFile.</p>
<dl class="section return"><dt>Renvoie</dt><dd>True if the file exists. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a50242f98dea0d4488ce4039a279f2a57_cgraph.svg" width="447" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a50242f98dea0d4488ce4039a279f2a57_icgraph.svg" width="308" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8593cb31d4e857adf1cb5312c08ad7c3" name="a8593cb31d4e857adf1cb5312c08ad7c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8593cb31d4e857adf1cb5312c08ad7c3">&#9670;&#160;</a></span>fgetpos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::fgetpos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get position for streams </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pos</td><td>struct to receive position </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8593cb31d4e857adf1cb5312c08ad7c3_icgraph.svg" width="330" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a69d86cd3af397b36d0f9ef2bf7b2afab" name="a69d86cd3af397b36d0f9ef2bf7b2afab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69d86cd3af397b36d0f9ef2bf7b2afab">&#9670;&#160;</a></span>fgets()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::fgets </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>delim</em> = <code><a class="el" href="../../d0/d1b/SysCall_8h.xhtml#ab979d9d4b4923f7c54d6caa6e1a61936">nullptr</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a string from a file.</p>
<p><a class="el" href="#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets()</a> reads bytes from a file into the array pointed to by <em>str</em>, until <em>num</em> - 1 bytes are read, or a delimiter is read and transferred to <em>str</em>, or end-of-file is encountered. The string is then terminated with a null byte.</p>
<p><a class="el" href="#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets()</a> deletes CR, '\r', from the string. This insures only a '\n' terminates the string for Windows text files which use CRLF for newline.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">str</td><td>Pointer to the array where the string is stored. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td>Maximum number of characters to be read (including the final null byte). Usually the length of the array <em>str</em> is used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">delim</td><td>Optional set of delimiters. The default is "\n".</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets()</a> returns the length of the string in <em>str</em>. If no data is read, <a class="el" href="#a69d86cd3af397b36d0f9ef2bf7b2afab">fgets()</a> returns zero for EOF or -1 if an error occurred. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a69d86cd3af397b36d0f9ef2bf7b2afab_cgraph.svg" width="266" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a69d86cd3af397b36d0f9ef2bf7b2afab_icgraph.svg" width="298" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a874940574b9c99e763526465adf8dc28" name="a874940574b9c99e763526465adf8dc28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a874940574b9c99e763526465adf8dc28">&#9670;&#160;</a></span>fileSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::fileSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>The total number of bytes in a file. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a874940574b9c99e763526465adf8dc28_icgraph.svg" width="100%" height="493"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5ac8a604863d18840f4a93c5c788b7c8" name="a5ac8a604863d18840f4a93c5c788b7c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ac8a604863d18840f4a93c5c788b7c8">&#9670;&#160;</a></span>firstBlock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::firstBlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>first sector of file or zero for empty file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5ac8a604863d18840f4a93c5c788b7c8_cgraph.svg" width="558" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af3108df387f30ca3d367dd390a04daaa" name="af3108df387f30ca3d367dd390a04daaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3108df387f30ca3d367dd390a04daaa">&#9670;&#160;</a></span>firstSector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::firstSector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Address of first sector or zero for empty file. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af3108df387f30ca3d367dd390a04daaa_cgraph.svg" width="376" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af3108df387f30ca3d367dd390a04daaa_icgraph.svg" width="364" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a166b5ff04754cc925f2aee71bf92f800" name="a166b5ff04754cc925f2aee71bf92f800"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a166b5ff04754cc925f2aee71bf92f800">&#9670;&#160;</a></span>flush()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::flush </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Arduino name for <a class="el" href="#a67f3dc4896c542d695e11aac927f585e">sync()</a> </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a166b5ff04754cc925f2aee71bf92f800_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac042c43d41ecfff4e101b88f3f82086e" name="ac042c43d41ecfff4e101b88f3f82086e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac042c43d41ecfff4e101b88f3f82086e">&#9670;&#160;</a></span>fsetpos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::fsetpos </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/da6/structfspos__t.xhtml">fspos_t</a> *&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>set position for streams </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>struct with value for new position </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac042c43d41ecfff4e101b88f3f82086e_icgraph.svg" width="327" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a5d085c695e920b658a1505e480bc467f" name="a5d085c695e920b658a1505e480bc467f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d085c695e920b658a1505e480bc467f">&#9670;&#160;</a></span>getAccessDate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::getAccessDate </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's access date.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5d085c695e920b658a1505e480bc467f_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5d085c695e920b658a1505e480bc467f_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af70c42baeb45e0d7047ae63de568d0d2" name="af70c42baeb45e0d7047ae63de568d0d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af70c42baeb45e0d7047ae63de568d0d2">&#9670;&#160;</a></span>getAccessDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::getAccessDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get a file's access date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>return zero since FAT has no time.</td></tr>
  </table>
  </dd>
</dl>
<p>This function is for comparability in <a class="el" href="../../d5/d4f/classFsFile.xhtml" title="FsBaseFile file with Arduino Stream.">FsFile</a>.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af70c42baeb45e0d7047ae63de568d0d2_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af70c42baeb45e0d7047ae63de568d0d2_icgraph.svg" width="492" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a94d484b5198032a9e00194e72182cc57" name="a94d484b5198032a9e00194e72182cc57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94d484b5198032a9e00194e72182cc57">&#9670;&#160;</a></span>getCreateDateTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::getCreateDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's create date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>Packed time for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a94d484b5198032a9e00194e72182cc57_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a94d484b5198032a9e00194e72182cc57_icgraph.svg" width="487" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af732f14454c7e1468d8ed7cadcaef527" name="af732f14454c7e1468d8ed7cadcaef527"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af732f14454c7e1468d8ed7cadcaef527">&#9670;&#160;</a></span>getError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::getError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>All error bits. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af732f14454c7e1468d8ed7cadcaef527_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a40d17b812ba502fe51873dcfd66ad77c" name="a40d17b812ba502fe51873dcfd66ad77c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40d17b812ba502fe51873dcfd66ad77c">&#9670;&#160;</a></span>getLfnChar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t FatFile::getLfnChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dfa/structDirLfn__t.xhtml">DirLfn_t</a> *&#160;</td>
          <td class="paramname"><em>ldir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>i</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a40d17b812ba502fe51873dcfd66ad77c_cgraph.svg" width="276" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a40d17b812ba502fe51873dcfd66ad77c_icgraph.svg" width="100%" height="475"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a28537b48ed2cb886c5f22984d07492b7" name="a28537b48ed2cb886c5f22984d07492b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28537b48ed2cb886c5f22984d07492b7">&#9670;&#160;</a></span>getModifyDateTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::getModifyDateTime </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>pdate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's modify date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">pdate</td><td>Packed date for directory entry. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">ptime</td><td>Packed time for directory entry.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a28537b48ed2cb886c5f22984d07492b7_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a28537b48ed2cb886c5f22984d07492b7_icgraph.svg" width="100%" height="382"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0313d518970d1438d5cad721720cc109" name="a0313d518970d1438d5cad721720cc109"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0313d518970d1438d5cad721720cc109">&#9670;&#160;</a></span>getName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::getName </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's name followed by a zero byte.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">name</td><td>An array of characters for the file's name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The size of the array in bytes. The array must be at least 13 bytes long. The file's name will be truncated if the file's name is too long. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>length for success or zero for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0313d518970d1438d5cad721720cc109_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0313d518970d1438d5cad721720cc109_icgraph.svg" width="351" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="abf906ba7948cf1331d80e530bacea489" name="abf906ba7948cf1331d80e530bacea489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf906ba7948cf1331d80e530bacea489">&#9670;&#160;</a></span>getName7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::getName7 </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's ASCII name followed by a zero.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">name</td><td>An array of characters for the file's name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The size of the array in characters. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the name length. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abf906ba7948cf1331d80e530bacea489_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abf906ba7948cf1331d80e530bacea489_icgraph.svg" width="539" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2369692e7bc19a68ac106fd7499a2910" name="a2369692e7bc19a68ac106fd7499a2910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2369692e7bc19a68ac106fd7499a2910">&#9670;&#160;</a></span>getName8()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::getName8 </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's UTF-8 name followed by a zero.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">name</td><td>An array of characters for the file's name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>The size of the array in characters. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>the name length. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2369692e7bc19a68ac106fd7499a2910_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2369692e7bc19a68ac106fd7499a2910_icgraph.svg" width="539" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a9dfb8b93dc97289648756e695bbd17f3" name="a9dfb8b93dc97289648756e695bbd17f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dfb8b93dc97289648756e695bbd17f3">&#9670;&#160;</a></span>getSFN()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::getSFN </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get a file's Short File Name followed by a zero byte.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">name</td><td>An array of characters for the file's name. The array should be at least 13 bytes long. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">size</td><td>size of name array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a9dfb8b93dc97289648756e695bbd17f3_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a9dfb8b93dc97289648756e695bbd17f3_icgraph.svg" width="100%" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac5c7b5894ff8deee63b4db0663975321" name="ac5c7b5894ff8deee63b4db0663975321"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5c7b5894ff8deee63b4db0663975321">&#9670;&#160;</a></span>getWriteError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::getWriteError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>value of writeError </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac5c7b5894ff8deee63b4db0663975321_cgraph.svg" width="335" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac5c7b5894ff8deee63b4db0663975321_icgraph.svg" width="648" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a845038578df0ef76e2a1f48d6e404aac" name="a845038578df0ef76e2a1f48d6e404aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a845038578df0ef76e2a1f48d6e404aac">&#9670;&#160;</a></span>isBusy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isBusy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check for device busy.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if busy else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a845038578df0ef76e2a1f48d6e404aac_cgraph.svg" width="100%" height="529"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a845038578df0ef76e2a1f48d6e404aac_icgraph.svg" width="316" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a933360b20b496421b2bd9ee7a95563a6" name="a933360b20b496421b2bd9ee7a95563a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a933360b20b496421b2bd9ee7a95563a6">&#9670;&#160;</a></span>isDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a933360b20b496421b2bd9ee7a95563a6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acc5a87da1a5c8cb9758bfeaa7ae47b57" name="acc5a87da1a5c8cb9758bfeaa7ae47b57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc5a87da1a5c8cb9758bfeaa7ae47b57">&#9670;&#160;</a></span>isFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a normal file. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_acc5a87da1a5c8cb9758bfeaa7ae47b57_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae6917ba9b62b4de6fc77d356d1f077a9" name="ae6917ba9b62b4de6fc77d356d1f077a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6917ba9b62b4de6fc77d356d1f077a9">&#9670;&#160;</a></span>isFileOrSubDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isFileOrSubDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a normal file or sub-directory. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae6917ba9b62b4de6fc77d356d1f077a9_cgraph.svg" width="350" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae6917ba9b62b4de6fc77d356d1f077a9_icgraph.svg" width="100%" height="456"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae216b4a2bc44a9cfb88478fa051a1fd8" name="ae216b4a2bc44a9cfb88478fa051a1fd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae216b4a2bc44a9cfb88478fa051a1fd8">&#9670;&#160;</a></span>isHidden()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isHidden </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a hidden file. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae216b4a2bc44a9cfb88478fa051a1fd8_icgraph.svg" width="660" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af8f456ab790e818bfdd225cf6ffd40f3" name="af8f456ab790e818bfdd225cf6ffd40f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8f456ab790e818bfdd225cf6ffd40f3">&#9670;&#160;</a></span>isLFN()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isLFN </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>true if this file has a Long File Name. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_af8f456ab790e818bfdd225cf6ffd40f3_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8b8a2850c086d3ce79bee64a23fbf7a6" name="a8b8a2850c086d3ce79bee64a23fbf7a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b8a2850c086d3ce79bee64a23fbf7a6">&#9670;&#160;</a></span>isOpen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is an open file/directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8b8a2850c086d3ce79bee64a23fbf7a6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae60b4cedb69c88ac641813d5edfa6b4a" name="ae60b4cedb69c88ac641813d5edfa6b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae60b4cedb69c88ac641813d5edfa6b4a">&#9670;&#160;</a></span>isReadable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isReadable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True file is readable. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae60b4cedb69c88ac641813d5edfa6b4a_icgraph.svg" width="375" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="abaf639ec8f86f34aeb7e6b3615526f0b" name="abaf639ec8f86f34aeb7e6b3615526f0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaf639ec8f86f34aeb7e6b3615526f0b">&#9670;&#160;</a></span>isReadOnly()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isReadOnly </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if file is read-only </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abaf639ec8f86f34aeb7e6b3615526f0b_icgraph.svg" width="100%" height="456"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a03421a0c28649332f55e6ca06d3aeedb" name="a03421a0c28649332f55e6ca06d3aeedb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03421a0c28649332f55e6ca06d3aeedb">&#9670;&#160;</a></span>isRoot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isRoot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is the root directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a03421a0c28649332f55e6ca06d3aeedb_icgraph.svg" width="100%" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8fda8004720ec4cc55710869dbb52e35" name="a8fda8004720ec4cc55710869dbb52e35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fda8004720ec4cc55710869dbb52e35">&#9670;&#160;</a></span>isRoot32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isRoot32 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is the FAT32 root directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8fda8004720ec4cc55710869dbb52e35_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0cc65089f7ce6c1ff92edbf0bff59dee" name="a0cc65089f7ce6c1ff92edbf0bff59dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cc65089f7ce6c1ff92edbf0bff59dee">&#9670;&#160;</a></span>isRootFixed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isRootFixed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is the FAT12 of FAT16 root directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0cc65089f7ce6c1ff92edbf0bff59dee_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="abfd02c5d26f7d4f8739a8610116a6660" name="abfd02c5d26f7d4f8739a8610116a6660"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfd02c5d26f7d4f8739a8610116a6660">&#9670;&#160;</a></span>isSubDir()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isSubDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a sub-directory. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abfd02c5d26f7d4f8739a8610116a6660_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a48087bdeb6b94fc27e0f74c3d90af5a9" name="a48087bdeb6b94fc27e0f74c3d90af5a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48087bdeb6b94fc27e0f74c3d90af5a9">&#9670;&#160;</a></span>isSystem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isSystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True if this is a system file. </dd></dl>

</div>
</div>
<a id="aa484d5b2b147c5f3fe0e26b6eaf11ffc" name="aa484d5b2b147c5f3fe0e26b6eaf11ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa484d5b2b147c5f3fe0e26b6eaf11ffc">&#9670;&#160;</a></span>isWritable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::isWritable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>True file is writable. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa484d5b2b147c5f3fe0e26b6eaf11ffc_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4b8a4ebe4e7ce29bf01e549bdb8f568b" name="a4b8a4ebe4e7ce29bf01e549bdb8f568b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b8a4ebe4e7ce29bf01e549bdb8f568b">&#9670;&#160;</a></span>lfnChecksum()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::lfnChecksum </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4b8a4ebe4e7ce29bf01e549bdb8f568b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a60ab9d16bcc778150a364c26de467de1" name="a60ab9d16bcc778150a364c26de467de1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60ab9d16bcc778150a364c26de467de1">&#9670;&#160;</a></span>ls() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::ls </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>indent</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>List directory contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for list.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>The inclusive OR of</td></tr>
  </table>
  </dd>
</dl>
<p>LS_DATE - Print file modification date</p>
<p>LS_SIZE - Print file size.</p>
<p>LS_R - Recursive list of subdirectories.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">indent</td><td>Amount of space before file name. Used for recursive list to indicate subdirectory level.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a60ab9d16bcc778150a364c26de467de1_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a60ab9d16bcc778150a364c26de467de1_icgraph.svg" width="408" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a6a11f3307da6232b5f2d11812832d93a" name="a6a11f3307da6232b5f2d11812832d93a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a11f3307da6232b5f2d11812832d93a">&#9670;&#160;</a></span>ls() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::ls </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List directory contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>The inclusive OR of</td></tr>
  </table>
  </dd>
</dl>
<p>LS_DATE - Print file modification date</p>
<p>LS_SIZE - Print file size.</p>
<p>LS_R - Recursive list of subdirectories.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a6a11f3307da6232b5f2d11812832d93a_cgraph.svg" width="94" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a6a11f3307da6232b5f2d11812832d93a_icgraph.svg" width="94" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0ccaaa03c766b52799294ec33236b01b" name="a0ccaaa03c766b52799294ec33236b01b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ccaaa03c766b52799294ec33236b01b">&#9670;&#160;</a></span>makeSFN()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::makeSFN </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0ccaaa03c766b52799294ec33236b01b_cgraph.svg" width="327" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a0ccaaa03c766b52799294ec33236b01b_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="afa1b89789fd86994d0518c69247d8c27" name="afa1b89789fd86994d0518c69247d8c27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa1b89789fd86994d0518c69247d8c27">&#9670;&#160;</a></span>makeUniqueSfn()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::makeUniqueSfn </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afa1b89789fd86994d0518c69247d8c27_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afa1b89789fd86994d0518c69247d8c27_icgraph.svg" width="338" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="abab5b9f72cc796388dd4eed01d13d90d" name="abab5b9f72cc796388dd4eed01d13d90d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abab5b9f72cc796388dd4eed01d13d90d">&#9670;&#160;</a></span>mkdir() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::mkdir </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pFlag</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Make a new directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>An open <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> instance for the directory that will contain the new directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid name for the new directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pFlag</td><td>Create missing parent directories if true.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abab5b9f72cc796388dd4eed01d13d90d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_abab5b9f72cc796388dd4eed01d13d90d_icgraph.svg" width="492" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="acb4108f33aa7e10fff747b4939787c5a" name="acb4108f33aa7e10fff747b4939787c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb4108f33aa7e10fff747b4939787c5a">&#9670;&#160;</a></span>mkdir() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::mkdir </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/dba/FatFile_8h.xhtml#a30a3bf501b73ac231aae1e3047b342fb">FatName_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_acb4108f33aa7e10fff747b4939787c5a_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a2da94d4556eebd807669e0514433fffa" name="a2da94d4556eebd807669e0514433fffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2da94d4556eebd807669e0514433fffa">&#9670;&#160;</a></span>open() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file in the current working volume.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid name for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a2da94d4556eebd807669e0514433fffa_cgraph.svg" width="460" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a22c2b68a8a426758d15981de17431b5d" name="a22c2b68a8a426758d15981de17431b5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22c2b68a8a426758d15981de17431b5d">&#9670;&#160;</a></span>open() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file or directory by name.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dirFile</td><td>An open <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> instance for the directory containing the file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>A path with a valid name for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>Values for <em>oflag</em> are constructed by a bitwise-inclusive OR of flags from the following list. Only one of O_RDONLY, O_READ, O_WRONLY, O_WRITE, or O_RDWR is allowed.</td></tr>
  </table>
  </dd>
</dl>
<p>O_RDONLY - Open for reading.</p>
<p>O_READ - Same as O_RDONLY.</p>
<p>O_WRONLY - Open for writing.</p>
<p>O_WRITE - Same as O_WRONLY.</p>
<p>O_RDWR - Open for reading and writing.</p>
<p>O_APPEND - If set, the file offset shall be set to the end of the file prior to each write.</p>
<p>O_AT_END - Set the initial position at the end of the file.</p>
<p>O_CREAT - If the file exists, this flag has no effect except as noted under O_EXCL below. Otherwise, the file shall be created</p>
<p>O_EXCL - If O_CREAT and O_EXCL are set, <a class="el" href="#a5f2bbee53059029f7a22c8eaec81cb8a">open()</a> shall fail if the file exists.</p>
<p>O_TRUNC - If the file exists and is a regular file, and the file is successfully opened and is not read only, its length shall be truncated to 0.</p>
<p>WARNING: A given file must not be opened by more than one <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> object or file corruption may occur.</p>
<dl class="section note"><dt>Note</dt><dd>Directory files must be opened read only. Write and truncation is not allowed for directory files.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a22c2b68a8a426758d15981de17431b5d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa729447d16ce34a9a575c27ac58dbb12" name="aa729447d16ce34a9a575c27ac58dbb12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa729447d16ce34a9a575c27ac58dbb12">&#9670;&#160;</a></span>open() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa729447d16ce34a9a575c27ac58dbb12_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aefd095e898758e6008f33cca17e92b72" name="aefd095e898758e6008f33cca17e92b72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefd095e898758e6008f33cca17e92b72">&#9670;&#160;</a></span>open() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aefd095e898758e6008f33cca17e92b72_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5318ee7a7700ff23721497945fba363d" name="a5318ee7a7700ff23721497945fba363d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5318ee7a7700ff23721497945fba363d">&#9670;&#160;</a></span>open() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file by index.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dirFile</td><td>An open <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> instance for the directory.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The <em>index</em> of the directory entry for the file to be opened. The value for <em>index</em> is (directory file position)/32.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>See <a class="el" href="#a5f2bbee53059029f7a22c8eaec81cb8a">open()</a> by path for definition of flags. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5318ee7a7700ff23721497945fba363d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5f2bbee53059029f7a22c8eaec81cb8a" name="a5f2bbee53059029f7a22c8eaec81cb8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f2bbee53059029f7a22c8eaec81cb8a">&#9670;&#160;</a></span>open() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *&#160;</td>
          <td class="paramname"><em>vol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file in the volume root directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vol</td><td>Volume where the file is located.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>with a valid name for a file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5f2bbee53059029f7a22c8eaec81cb8a_cgraph.svg" width="288" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5f2bbee53059029f7a22c8eaec81cb8a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a662db270440e29b619cbc89f5595f73d" name="a662db270440e29b619cbc89f5595f73d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a662db270440e29b619cbc89f5595f73d">&#9670;&#160;</a></span>open() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::open </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a file by index in the current working directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>The <em>index</em> of the directory entry for the file to be opened. The value for <em>index</em> is (directory file position)/32.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>See <a class="el" href="#a5f2bbee53059029f7a22c8eaec81cb8a">open()</a> by path for definition of flags. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a662db270440e29b619cbc89f5595f73d_cgraph.svg" width="460" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad39f3c4d83135ad181c58306b23df0aa" name="ad39f3c4d83135ad181c58306b23df0aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad39f3c4d83135ad181c58306b23df0aa">&#9670;&#160;</a></span>openCachedEntry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openCachedEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>cacheIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>lfnOrd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad39f3c4d83135ad181c58306b23df0aa_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad39f3c4d83135ad181c58306b23df0aa_icgraph.svg" width="100%" height="456"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5df45b5ab9063af4730251c563d7af1e" name="a5df45b5ab9063af4730251c563d7af1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df45b5ab9063af4730251c563d7af1e">&#9670;&#160;</a></span>openCluster()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openCluster </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5df45b5ab9063af4730251c563d7af1e_cgraph.svg" width="543" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5df45b5ab9063af4730251c563d7af1e_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad8977563ad297039946e13a1acd5c651" name="ad8977563ad297039946e13a1acd5c651"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8977563ad297039946e13a1acd5c651">&#9670;&#160;</a></span>openCwd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openCwd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open the current working directory.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad8977563ad297039946e13a1acd5c651_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad8977563ad297039946e13a1acd5c651_icgraph.svg" width="531" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4ca76086a89af45d2cae451b55e6f20f" name="a4ca76086a89af45d2cae451b55e6f20f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ca76086a89af45d2cae451b55e6f20f">&#9670;&#160;</a></span>openExistingSFN()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openExistingSFN </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open existing file wih Short 8.3 names. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>with short 8.3 names.</td></tr>
  </table>
  </dd>
</dl>
<p>the purpose of this function is to save flash on Uno and other small boards.</p>
<p>Directories will be opened O_RDONLY, files O_RDWR. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4ca76086a89af45d2cae451b55e6f20f_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="acda9b1bf547d43e183e657bee053a48d" name="acda9b1bf547d43e183e657bee053a48d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acda9b1bf547d43e183e657bee053a48d">&#9670;&#160;</a></span>openNext()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openNext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a39cbe71da20b3a35100d369620187d4f">oflag_t</a>&#160;</td>
          <td class="paramname"><em>oflag</em> = <code><a class="el" href="../../d9/d33/FsApiConstants_8h.xhtml#a7a68c9ffaac7dbcd652225dd7c06a54b">O_RDONLY</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open the next file or subdirectory in a directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dirFile</td><td>An open <a class="el" href="../../d3/db4/classFatFile.xhtml" title="Basic file class.">FatFile</a> instance for the directory containing the file to be opened.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oflag</td><td>bitwise-inclusive OR of open flags. See see <a class="el" href="#a22c2b68a8a426758d15981de17431b5d">FatFile::open(FatFile*, const char*, uint8_t)</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_acda9b1bf547d43e183e657bee053a48d_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_acda9b1bf547d43e183e657bee053a48d_icgraph.svg" width="100%" height="456"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7e0c0548fed3a69e7284b91b694439d4" name="a7e0c0548fed3a69e7284b91b694439d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e0c0548fed3a69e7284b91b694439d4">&#9670;&#160;</a></span>openRoot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openRoot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a> *&#160;</td>
          <td class="paramname"><em>vol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Open a volume's root directory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vol</td><td>The FAT volume containing the root directory to be opened.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7e0c0548fed3a69e7284b91b694439d4_cgraph.svg" width="344" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7e0c0548fed3a69e7284b91b694439d4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8aa6e2d722bdf14ef34671beb23488ea" name="a8aa6e2d722bdf14ef34671beb23488ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8aa6e2d722bdf14ef34671beb23488ea">&#9670;&#160;</a></span>openSFN()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::openSFN </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8aa6e2d722bdf14ef34671beb23488ea_cgraph.svg" width="546" height="471"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8aa6e2d722bdf14ef34671beb23488ea_icgraph.svg" width="372" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac6738e1bf9c75bd854d9c9c989c53668" name="ac6738e1bf9c75bd854d9c9c989c53668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6738e1bf9c75bd854d9c9c989c53668">&#9670;&#160;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FatFile::operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The parenthesis operator.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if a file is open. </dd></dl>

</div>
</div>
<a id="a49a7fdafed735cc59b9eda302399cf51" name="a49a7fdafed735cc59b9eda302399cf51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49a7fdafed735cc59b9eda302399cf51">&#9670;&#160;</a></span>parsePathName() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::parsePathName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/d4d/classFatLfn__t.xhtml">FatLfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a49a7fdafed735cc59b9eda302399cf51_cgraph.svg" width="550" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a49a7fdafed735cc59b9eda302399cf51_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a33a00bdc3dc3678829a4ff46ed116a22" name="a33a00bdc3dc3678829a4ff46ed116a22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33a00bdc3dc3678829a4ff46ed116a22">&#9670;&#160;</a></span>parsePathName() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::parsePathName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d90/classFatSfn__t.xhtml">FatSfn_t</a> *&#160;</td>
          <td class="paramname"><em>fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a33a00bdc3dc3678829a4ff46ed116a22_cgraph.svg" width="367" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac05b7136b887539426856c623869aa3a" name="ac05b7136b887539426856c623869aa3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac05b7136b887539426856c623869aa3a">&#9670;&#160;</a></span>peek()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::peek </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the next available byte without consuming it.</p>
<dl class="section return"><dt>Renvoie</dt><dd>The byte if no error and not at eof else -1; </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac05b7136b887539426856c623869aa3a_cgraph.svg" width="264" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aeeb13b9de68bf9097c863c41d655ee83" name="aeeb13b9de68bf9097c863c41d655ee83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeeb13b9de68bf9097c863c41d655ee83">&#9670;&#160;</a></span>preAllocate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::preAllocate </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allocate contiguous clusters to an empty file.</p>
<p>The file must be empty with no clusters allocated.</p>
<p>The file will contain uninitialized data.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>size of the file in bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aeeb13b9de68bf9097c863c41d655ee83_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aeeb13b9de68bf9097c863c41d655ee83_icgraph.svg" width="392" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a22be4c339d0bfa331f75415b74dd4f37" name="a22be4c339d0bfa331f75415b74dd4f37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22be4c339d0bfa331f75415b74dd4f37">&#9670;&#160;</a></span>printAccessDate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printAccessDate </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's access date</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a22be4c339d0bfa331f75415b74dd4f37_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a22be4c339d0bfa331f75415b74dd4f37_icgraph.svg" width="448" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a19b3196bb1f6a68a2447e53b09369aef" name="a19b3196bb1f6a68a2447e53b09369aef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19b3196bb1f6a68a2447e53b09369aef">&#9670;&#160;</a></span>printAccessDateTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printAccessDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's access date</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a19b3196bb1f6a68a2447e53b09369aef_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab22396a285e27b53501a0047ddd97f59" name="ab22396a285e27b53501a0047ddd97f59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab22396a285e27b53501a0047ddd97f59">&#9670;&#160;</a></span>printCreateDateTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printCreateDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's creation date and time</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes printed. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ab22396a285e27b53501a0047ddd97f59_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aabcd863883bfcfb37b63dbd6021f7eb8" name="aabcd863883bfcfb37b63dbd6021f7eb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabcd863883bfcfb37b63dbd6021f7eb8">&#9670;&#160;</a></span>printFatDate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void FatFile::printFatDate </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fatDate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Print a directory date field.</p>
<p>Format is yyyy-mm-dd.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fatDate</td><td>The date field from a directory entry. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7f84d953190ea94710dad9ebb897b957" name="a7f84d953190ea94710dad9ebb897b957"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f84d953190ea94710dad9ebb897b957">&#9670;&#160;</a></span>printFatTime()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void FatFile::printFatTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fatTime</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Print a directory time field.</p>
<p>Format is hh:mm:ss.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fatTime</td><td>The time field from a directory entry. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4a61a0cca1813d2ad0f6fe99cc4e41d" name="aa4a61a0cca1813d2ad0f6fe99cc4e41d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4a61a0cca1813d2ad0f6fe99cc4e41d">&#9670;&#160;</a></span>printField() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printField </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa4a61a0cca1813d2ad0f6fe99cc4e41d_cgraph.svg" width="439" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa4a61a0cca1813d2ad0f6fe99cc4e41d_icgraph.svg" width="326" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a90ccef676afd62bbe7c773dd863a56e0" name="a90ccef676afd62bbe7c773dd863a56e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90ccef676afd62bbe7c773dd863a56e0">&#9670;&#160;</a></span>printField() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printField </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prec</em> = <code>2</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">prec</td><td>Number of digits after decimal point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a90ccef676afd62bbe7c773dd863a56e0_cgraph.svg" width="620" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8f906be79086f38943cb0911310d67bf" name="a8f906be79086f38943cb0911310d67bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f906be79086f38943cb0911310d67bf">&#9670;&#160;</a></span>printField() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printField </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>term</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a number followed by a field terminator. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>The number to be printed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">term</td><td>The field terminator. Use '\n' for CR LF. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of bytes written or -1 if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a8f906be79086f38943cb0911310d67bf_cgraph.svg" width="298" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a12a5d2de2737c201aa39ca1bd2ab9c47" name="a12a5d2de2737c201aa39ca1bd2ab9c47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12a5d2de2737c201aa39ca1bd2ab9c47">&#9670;&#160;</a></span>printFileSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printFileSize </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's size.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed is returned for success and zero is returned for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a12a5d2de2737c201aa39ca1bd2ab9c47_cgraph.svg" width="330" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a12a5d2de2737c201aa39ca1bd2ab9c47_icgraph.svg" width="608" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a43c8a1cabcae673e43c590f5db44c65a" name="a43c8a1cabcae673e43c590f5db44c65a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43c8a1cabcae673e43c590f5db44c65a">&#9670;&#160;</a></span>printModifyDateTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printModifyDateTime </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's modify date and time</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a43c8a1cabcae673e43c590f5db44c65a_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a43c8a1cabcae673e43c590f5db44c65a_icgraph.svg" width="667" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad1cbc3aeb0f5193b7a26595966da9621" name="ad1cbc3aeb0f5193b7a26595966da9621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1cbc3aeb0f5193b7a26595966da9621">&#9670;&#160;</a></span>printName() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's name.</p>
<dl class="section return"><dt>Renvoie</dt><dd>length for success or zero for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad1cbc3aeb0f5193b7a26595966da9621_cgraph.svg" width="152" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ad1cbc3aeb0f5193b7a26595966da9621_icgraph.svg" width="152" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="afe18a787fb8640e2d2483370c770f82f" name="afe18a787fb8640e2d2483370c770f82f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe18a787fb8640e2d2483370c770f82f">&#9670;&#160;</a></span>printName() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printName </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's name</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>length for success or zero for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afe18a787fb8640e2d2483370c770f82f_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_afe18a787fb8640e2d2483370c770f82f_icgraph.svg" width="598" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a35dedc90d44758d10d967785dc14da2b" name="a35dedc90d44758d10d967785dc14da2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35dedc90d44758d10d967785dc14da2b">&#9670;&#160;</a></span>printName7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printName7 </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's ASCII name</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a35dedc90d44758d10d967785dc14da2b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a35dedc90d44758d10d967785dc14da2b_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a508c86ed62a34a920574dd270dc64322" name="a508c86ed62a34a920574dd270dc64322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a508c86ed62a34a920574dd270dc64322">&#9670;&#160;</a></span>printName8()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printName8 </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's UTF-8 name</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a508c86ed62a34a920574dd270dc64322_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a508c86ed62a34a920574dd270dc64322_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a791cd7aade71f609aab62ec018aea3c0" name="a791cd7aade71f609aab62ec018aea3c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a791cd7aade71f609aab62ec018aea3c0">&#9670;&#160;</a></span>printSFN()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::printSFN </td>
          <td>(</td>
          <td class="paramtype">print_t *&#160;</td>
          <td class="paramname"><em>pr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> a file's Short File Name.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pr</td><td><a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> stream for output.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>The number of characters printed is returned for success and zero is returned for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a791cd7aade71f609aab62ec018aea3c0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a791cd7aade71f609aab62ec018aea3c0_icgraph.svg" width="100%" height="383"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a60ae55ff6fe158c2340071d702a363c5" name="a60ae55ff6fe158c2340071d702a363c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60ae55ff6fe158c2340071d702a363c5">&#9670;&#160;</a></span>read() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::read </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read the next byte from a file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>For success read returns the next byte in the file as an int. If an error occurs or end of file is reached -1 is returned. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a60ae55ff6fe158c2340071d702a363c5_cgraph.svg" width="112" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a60ae55ff6fe158c2340071d702a363c5_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aba893af8107a18017482d2311b066187" name="aba893af8107a18017482d2311b066187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba893af8107a18017482d2311b066187">&#9670;&#160;</a></span>read() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int FatFile::read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read data from a file starting at the current position.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">buf</td><td>Pointer to the location that will receive the data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Maximum number of bytes to read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#a60ae55ff6fe158c2340071d702a363c5">read()</a> returns the number of bytes read. A value less than <em>nbyte</em>, including zero, will be returned if end of file is reached. If an error occurs, <a class="el" href="#a60ae55ff6fe158c2340071d702a363c5">read()</a> returns -1. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aba893af8107a18017482d2311b066187_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a29502cd34ef186763d2196daef27df1f" name="a29502cd34ef186763d2196daef27df1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29502cd34ef186763d2196daef27df1f">&#9670;&#160;</a></span>readDir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8_t FatFile::readDir </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> *&#160;</td>
          <td class="paramname"><em>dir</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read the next directory entry from a directory file.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">dir</td><td>The <a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> struct that will receive the data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#a29502cd34ef186763d2196daef27df1f">readDir()</a> returns the number of bytes read. A value of zero will be returned if end of file is reached. If an error occurs, <a class="el" href="#a29502cd34ef186763d2196daef27df1f">readDir()</a> returns -1. Possible errors include <a class="el" href="#a29502cd34ef186763d2196daef27df1f">readDir()</a> called before a directory has been opened, this is not a directory file or an I/O error occurred. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a29502cd34ef186763d2196daef27df1f_cgraph.svg" width="310" height="159"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a07d137a7ff48af119d039d1e7ab8337a" name="a07d137a7ff48af119d039d1e7ab8337a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07d137a7ff48af119d039d1e7ab8337a">&#9670;&#160;</a></span>readDirCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/d0b/structDirFat__t.xhtml">DirFat_t</a> * FatFile::readDirCache </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipReadOk</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a07d137a7ff48af119d039d1e7ab8337a_cgraph.svg" width="623" height="110"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a07d137a7ff48af119d039d1e7ab8337a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac837a537fbcca14c7aa390c5fc9f4e7c" name="ac837a537fbcca14c7aa390c5fc9f4e7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac837a537fbcca14c7aa390c5fc9f4e7c">&#9670;&#160;</a></span>remove() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::remove </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove a file.</p>
<p>The directory entry and all data for the file are deleted.</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a file that has a long name. For example if a file has the long name "New Text Document.txt" you should not delete the 8.3 name "NEWTEX~1.TXT".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac837a537fbcca14c7aa390c5fc9f4e7c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac837a537fbcca14c7aa390c5fc9f4e7c_icgraph.svg" width="515" height="283"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a75d3276f0b02b03e863afafe5731fedb" name="a75d3276f0b02b03e863afafe5731fedb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75d3276f0b02b03e863afafe5731fedb">&#9670;&#160;</a></span>remove() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::remove </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove a file.</p>
<p>The directory entry and all data for the file are deleted.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Path for the file to be removed.</td></tr>
  </table>
  </dd>
</dl>
<p>Example use: dirFile.remove(filenameToRemove);</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a file that has a long name. For example if a file has the long name "New Text Document.txt" you should not delete the 8.3 name "NEWTEX~1.TXT".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a75d3276f0b02b03e863afafe5731fedb_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4cebcac13c1f4c9de7a055ae73133599" name="a4cebcac13c1f4c9de7a055ae73133599"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cebcac13c1f4c9de7a055ae73133599">&#9670;&#160;</a></span>rename() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::rename </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>newPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Rename a file or subdirectory. </p><dl class="section note"><dt>Note</dt><dd>the renamed file will be moved to the current volume working directory.</dd></dl>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">newPath</td><td>New path name for the file/directory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4cebcac13c1f4c9de7a055ae73133599_cgraph.svg" width="307" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4cebcac13c1f4c9de7a055ae73133599_icgraph.svg" width="528" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4b42f2454ff462555c07ea094a92a1e0" name="a4b42f2454ff462555c07ea094a92a1e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b42f2454ff462555c07ea094a92a1e0">&#9670;&#160;</a></span>rename() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::rename </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a> *&#160;</td>
          <td class="paramname"><em>dirFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>newPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Rename a file or subdirectory.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dirFile</td><td>Directory for the new path. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">newPath</td><td>New path name for the file/directory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a4b42f2454ff462555c07ea094a92a1e0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5aac6e0b3cb08fc8b8668e916a8b0ca5" name="a5aac6e0b3cb08fc8b8668e916a8b0ca5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5aac6e0b3cb08fc8b8668e916a8b0ca5">&#9670;&#160;</a></span>rewind()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FatFile::rewind </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the file's current position to zero. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5aac6e0b3cb08fc8b8668e916a8b0ca5_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5aac6e0b3cb08fc8b8668e916a8b0ca5_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9515bac181d33e7f0125e88fa2ccd283" name="a9515bac181d33e7f0125e88fa2ccd283"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9515bac181d33e7f0125e88fa2ccd283">&#9670;&#160;</a></span>rmdir()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::rmdir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove a directory file.</p>
<p>The directory file will be removed only if it is empty and is not the root directory. <a class="el" href="#a9515bac181d33e7f0125e88fa2ccd283">rmdir()</a> follows DOS and Windows and ignores the read-only attribute for the directory.</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a directory that has a long name. For example if a directory has the long name "New folder" you should not delete the 8.3 name "NEWFOL~1".</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a9515bac181d33e7f0125e88fa2ccd283_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a9515bac181d33e7f0125e88fa2ccd283_icgraph.svg" width="300" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac780a80526f86d3def701ecdc99d8bfe" name="ac780a80526f86d3def701ecdc99d8bfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac780a80526f86d3def701ecdc99d8bfe">&#9670;&#160;</a></span>rmRfStar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::rmRfStar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Recursively delete a directory and all contained files.</p>
<p>This is like the Unix/Linux 'rm -rf *' if called with the root directory hence the name.</p>
<p>Warning - This will remove all contents of the directory including subdirectories. The directory will then be removed if it is not root. The read-only attribute for files will be ignored.</p>
<dl class="section note"><dt>Note</dt><dd>This function should not be used to delete the 8.3 version of a directory that has a long name. See <a class="el" href="#ac837a537fbcca14c7aa390c5fc9f4e7c">remove()</a> and <a class="el" href="#a9515bac181d33e7f0125e88fa2ccd283">rmdir()</a>.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ac780a80526f86d3def701ecdc99d8bfe_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5812037ea30777cc350698ad26f2c73f" name="a5812037ea30777cc350698ad26f2c73f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5812037ea30777cc350698ad26f2c73f">&#9670;&#160;</a></span>seekCur()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::seekCur </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the files position to current position + <em>pos</em>. See <a class="el" href="#ab067190d25733ed7e697d9890f61fd7a">seekSet()</a>. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The new position in bytes from the current position. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5812037ea30777cc350698ad26f2c73f_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5812037ea30777cc350698ad26f2c73f_icgraph.svg" width="364" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a84f677f4e75ef6fa2eb632f4cdf6b486" name="a84f677f4e75ef6fa2eb632f4cdf6b486"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84f677f4e75ef6fa2eb632f4cdf6b486">&#9670;&#160;</a></span>seekEnd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::seekEnd </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>offset</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the files position to end-of-file + <em>offset</em>. See <a class="el" href="#ab067190d25733ed7e697d9890f61fd7a">seekSet()</a>. Can't be used for directory files since file size is not defined. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>The new position in bytes from end-of-file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a84f677f4e75ef6fa2eb632f4cdf6b486_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a84f677f4e75ef6fa2eb632f4cdf6b486_icgraph.svg" width="332" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab067190d25733ed7e697d9890f61fd7a" name="ab067190d25733ed7e697d9890f61fd7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab067190d25733ed7e697d9890f61fd7a">&#9670;&#160;</a></span>seekSet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::seekSet </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a file's position.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td>The new position in bytes from the beginning of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ab067190d25733ed7e697d9890f61fd7a_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ab067190d25733ed7e697d9890f61fd7a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a67f3dc4896c542d695e11aac927f585e" name="a67f3dc4896c542d695e11aac927f585e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67f3dc4896c542d695e11aac927f585e">&#9670;&#160;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The <a class="el" href="#a67f3dc4896c542d695e11aac927f585e">sync()</a> call causes all modified data and directory fields to be written to the storage device.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a67f3dc4896c542d695e11aac927f585e_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a67f3dc4896c542d695e11aac927f585e_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a56dabdf73833b7e961c4530eb8e16d23" name="a56dabdf73833b7e961c4530eb8e16d23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56dabdf73833b7e961c4530eb8e16d23">&#9670;&#160;</a></span>timestamp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::timestamp </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>year</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>month</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>day</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>hour</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>minute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set a file's timestamps in its directory entry.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flags</td><td>Values for <em>flags</em> are constructed by a bitwise-inclusive OR of flags from the following list</td></tr>
  </table>
  </dd>
</dl>
<p>T_ACCESS - Set the file's last access date.</p>
<p>T_CREATE - Set the file's creation date and time.</p>
<p>T_WRITE - Set the file's last write/modification date and time.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">year</td><td>Valid range 1980 - 2107 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">month</td><td>Valid range 1 - 12 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">day</td><td>Valid range 1 - 31 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">hour</td><td>Valid range 0 - 23 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">minute</td><td>Valid range 0 - 59 inclusive.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">second</td><td>Valid range 0 - 59 inclusive</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>It is possible to set an invalid date since there is no check for the number of days in a month.</dd>
<dd>
Modify and access timestamps may be overwritten if a date time callback function has been set by dateTimeCallback().</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a56dabdf73833b7e961c4530eb8e16d23_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7dda881dac19ea2aa9b2e85a229a98d7" name="a7dda881dac19ea2aa9b2e85a229a98d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dda881dac19ea2aa9b2e85a229a98d7">&#9670;&#160;</a></span>truncate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::truncate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Truncate a file at the current file position. will be maintained if it is less than or equal to <em>length</em> otherwise it will be set to end of file.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7dda881dac19ea2aa9b2e85a229a98d7_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a7dda881dac19ea2aa9b2e85a229a98d7_icgraph.svg" width="538" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa6e663098a578635d37d92e82d18d616" name="aa6e663098a578635d37d92e82d18d616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6e663098a578635d37d92e82d18d616">&#9670;&#160;</a></span>truncate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FatFile::truncate </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Truncate a file to a specified length. The current file position will be set to end of file.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>The desired length for the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa6e663098a578635d37d92e82d18d616_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_aa6e663098a578635d37d92e82d18d616_icgraph.svg" width="138" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a081dd810835f1ebf8c23ffe92706b485" name="a081dd810835f1ebf8c23ffe92706b485"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a081dd810835f1ebf8c23ffe92706b485">&#9670;&#160;</a></span>write() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::write </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a string to a file. Used by the Arduino <a class="el" href="../../d9/df9/classPrint.xhtml">Print</a> class. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>Pointer to the string. Use getWriteError to check for errors. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>count of characters written for success or -1 for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a081dd810835f1ebf8c23ffe92706b485_cgraph.svg" width="116" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a081dd810835f1ebf8c23ffe92706b485_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5d84d871ac904a22aa48308713d14682" name="a5d84d871ac904a22aa48308713d14682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d84d871ac904a22aa48308713d14682">&#9670;&#160;</a></span>write() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::write </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write data to an open file.</p>
<dl class="section note"><dt>Note</dt><dd>Data is moved to the cache but may not be written to the storage device until <a class="el" href="#a67f3dc4896c542d695e11aac927f585e">sync()</a> is called.</dd></dl>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buf</td><td>Pointer to the location of the data to be written.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of bytes to write.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>For success <a class="el" href="#a081dd810835f1ebf8c23ffe92706b485">write()</a> returns the number of bytes written, always <em>count</em>. If an error occurs, <a class="el" href="#a081dd810835f1ebf8c23ffe92706b485">write()</a> returns zero and writeError is set. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_a5d84d871ac904a22aa48308713d14682_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae51e724ac6cc3d67d64a5a666d5850f1" name="ae51e724ac6cc3d67d64a5a666d5850f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae51e724ac6cc3d67d64a5a666d5850f1">&#9670;&#160;</a></span>write() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t FatFile::write </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Write a single byte. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">b</td><td>The byte to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>+1 for success or -1 for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae51e724ac6cc3d67d64a5a666d5850f1_cgraph.svg" width="116" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d3/db4/classFatFile_ae51e724ac6cc3d67d64a5a666d5850f1_icgraph.svg" width="116" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions amies et associées</h2>
<a id="a6ca3f436167f187097347a20ea221555" name="a6ca3f436167f187097347a20ea221555"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ca3f436167f187097347a20ea221555">&#9670;&#160;</a></span>FatVolume</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d3/dd5/classFatVolume.xhtml" title="Integration class for the FatLib library.">FatVolume</a> allowed access to private members. </p>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="ae16fd44b1c014975f0a91422dc78b037" name="ae16fd44b1c014975f0a91422dc78b037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae16fd44b1c014975f0a91422dc78b037">&#9670;&#160;</a></span>FILE_ATTR_CLOSED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_CLOSED = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This file has not been opened. </p>

</div>
</div>
<a id="a1ea3743e913b35de19b14e490b044707" name="a1ea3743e913b35de19b14e490b044707"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ea3743e913b35de19b14e490b044707">&#9670;&#160;</a></span>FILE_ATTR_DIR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_DIR = <a class="el" href="#abfe242bc0d32d9fd6cf0359e8b1ac7d7">FILE_ATTR_SUBDIR</a> | <a class="el" href="#a8e31200f87b9bf094779d2024d91eb81">FILE_ATTR_ROOT</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Directory type bits </p>

</div>
</div>
<a id="a6fc6734b7277948e48f048d21df45cf1" name="a6fc6734b7277948e48f048d21df45cf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fc6734b7277948e48f048d21df45cf1">&#9670;&#160;</a></span>FILE_ATTR_FILE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_FILE = 0X08</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Entry for normal data file </p>

</div>
</div>
<a id="a8e31200f87b9bf094779d2024d91eb81" name="a8e31200f87b9bf094779d2024d91eb81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e31200f87b9bf094779d2024d91eb81">&#9670;&#160;</a></span>FILE_ATTR_ROOT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_ROOT = <a class="el" href="#a42aa9a9acb2365652bcb0f266e26e200">FILE_ATTR_ROOT_FIXED</a> | <a class="el" href="#abc90097077f2147a474123b0942fde70">FILE_ATTR_ROOT32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Entry is for root. </p>

</div>
</div>
<a id="abc90097077f2147a474123b0942fde70" name="abc90097077f2147a474123b0942fde70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc90097077f2147a474123b0942fde70">&#9670;&#160;</a></span>FILE_ATTR_ROOT32</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_ROOT32 = 0X80</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A FAT32 root directory </p>

</div>
</div>
<a id="a42aa9a9acb2365652bcb0f266e26e200" name="a42aa9a9acb2365652bcb0f266e26e200"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42aa9a9acb2365652bcb0f266e26e200">&#9670;&#160;</a></span>FILE_ATTR_ROOT_FIXED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_ROOT_FIXED = 0X40</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A FAT12 or FAT16 root directory </p>

</div>
</div>
<a id="abfe242bc0d32d9fd6cf0359e8b1ac7d7" name="abfe242bc0d32d9fd6cf0359e8b1ac7d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfe242bc0d32d9fd6cf0359e8b1ac7d7">&#9670;&#160;</a></span>FILE_ATTR_SUBDIR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_ATTR_SUBDIR = <a class="el" href="../../dc/d87/FsStructs_8h.xhtml#a640662cabb5509a08f76bd02415c1760">FS_ATTRIB_DIRECTORY</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Entry is for a subdirectory </p>

</div>
</div>
<a id="aa0585bf2885f8366cea7c5b145ab4c58" name="aa0585bf2885f8366cea7c5b145ab4c58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0585bf2885f8366cea7c5b145ab4c58">&#9670;&#160;</a></span>FILE_FLAG_APPEND</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_APPEND = 0X08</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a273b782b260a5a9365e83c582a8d7633" name="a273b782b260a5a9365e83c582a8d7633"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a273b782b260a5a9365e83c582a8d7633">&#9670;&#160;</a></span>FILE_FLAG_CONTIGUOUS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_CONTIGUOUS = 0X40</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a18bbad5dcdba556ecb48d7eb7af0fa7c" name="a18bbad5dcdba556ecb48d7eb7af0fa7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18bbad5dcdba556ecb48d7eb7af0fa7c">&#9670;&#160;</a></span>FILE_FLAG_DIR_DIRTY</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_DIR_DIRTY = 0X80</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf4f38bf7448e25a4842753d4b05f0a2" name="acf4f38bf7448e25a4842753d4b05f0a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf4f38bf7448e25a4842753d4b05f0a2">&#9670;&#160;</a></span>FILE_FLAG_PREALLOCATE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_PREALLOCATE = 0X20</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa04e5a2f5cccbff1b39876fd828e3547" name="aa04e5a2f5cccbff1b39876fd828e3547"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa04e5a2f5cccbff1b39876fd828e3547">&#9670;&#160;</a></span>FILE_FLAG_READ</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_READ = 0X01</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4518991ca3fea0489213dfd8fb8978d3" name="a4518991ca3fea0489213dfd8fb8978d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4518991ca3fea0489213dfd8fb8978d3">&#9670;&#160;</a></span>FILE_FLAG_WRITE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::FILE_FLAG_WRITE = 0X02</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a48c7d8668d748a04024021bc045dcc6e" name="a48c7d8668d748a04024021bc045dcc6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48c7d8668d748a04024021bc045dcc6e">&#9670;&#160;</a></span>m_attributes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::m_attributes = <a class="el" href="#ae16fd44b1c014975f0a91422dc78b037">FILE_ATTR_CLOSED</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9a2f8997fe5ac948bb2777a61c0425b3" name="a9a2f8997fe5ac948bb2777a61c0425b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a2f8997fe5ac948bb2777a61c0425b3">&#9670;&#160;</a></span>m_curCluster</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_curCluster</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a87df00f4c68e43e58c47eb2ce19002e2" name="a87df00f4c68e43e58c47eb2ce19002e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87df00f4c68e43e58c47eb2ce19002e2">&#9670;&#160;</a></span>m_curPosition</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_curPosition</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab3fa11b216d6c34d1efe5b19eda102ac" name="ab3fa11b216d6c34d1efe5b19eda102ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3fa11b216d6c34d1efe5b19eda102ac">&#9670;&#160;</a></span>m_dirCluster</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_dirCluster</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acef80642dcb06aab0df17512f3cf0e80" name="acef80642dcb06aab0df17512f3cf0e80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acef80642dcb06aab0df17512f3cf0e80">&#9670;&#160;</a></span>m_dirIndex</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t FatFile::m_dirIndex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72cf42ef8b28dc7dcdc2c2f50f15c290" name="a72cf42ef8b28dc7dcdc2c2f50f15c290"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72cf42ef8b28dc7dcdc2c2f50f15c290">&#9670;&#160;</a></span>m_dirSector</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_dirSector</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a881be485c12b054fd939e001ad762784" name="a881be485c12b054fd939e001ad762784"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a881be485c12b054fd939e001ad762784">&#9670;&#160;</a></span>m_error</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::m_error = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5281ec4b3a498b15d89f47c41becbe6d" name="a5281ec4b3a498b15d89f47c41becbe6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5281ec4b3a498b15d89f47c41becbe6d">&#9670;&#160;</a></span>m_fileSize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_fileSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f3a378762cc94773507b1f32e362c5d" name="a3f3a378762cc94773507b1f32e362c5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f3a378762cc94773507b1f32e362c5d">&#9670;&#160;</a></span>m_firstCluster</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FatFile::m_firstCluster</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1849e40daeb9f7441deda7a7b05258a1" name="a1849e40daeb9f7441deda7a7b05258a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1849e40daeb9f7441deda7a7b05258a1">&#9670;&#160;</a></span>m_flags</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::m_flags = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f4cf71ff0efdb6eef8be307df0c9fa5" name="a5f4cf71ff0efdb6eef8be307df0c9fa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f4cf71ff0efdb6eef8be307df0c9fa5">&#9670;&#160;</a></span>m_lfnOrd</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FatFile::m_lfnOrd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad24d1529e3530de53d01d52a412e747b" name="ad24d1529e3530de53d01d52a412e747b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad24d1529e3530de53d01d52a412e747b">&#9670;&#160;</a></span>m_vol</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/dd5/classFatVolume.xhtml">FatVolume</a>* FatFile::m_vol</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a864c4ee4f60ef74685f19538a1293c07" name="a864c4ee4f60ef74685f19538a1293c07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a864c4ee4f60ef74685f19538a1293c07">&#9670;&#160;</a></span>READ_ERROR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::READ_ERROR = 0X2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e494d044c64dee482b0c25ded6595c1" name="a6e494d044c64dee482b0c25ded6595c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e494d044c64dee482b0c25ded6595c1">&#9670;&#160;</a></span>WRITE_ERROR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FatFile::WRITE_ERROR = 0X1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../de/dba/FatFile_8h_source.xhtml">FatFile.h</a></li>
<li><a class="el" href="../../d4/df1/FatDbg_8cpp.xhtml">FatDbg.cpp</a></li>
<li><a class="el" href="../../d6/d10/FatFile_8cpp.xhtml">FatFile.cpp</a></li>
<li><a class="el" href="../../d9/db9/FatFileLFN_8cpp.xhtml">FatFileLFN.cpp</a></li>
<li><a class="el" href="../../de/d94/FatFilePrint_8cpp.xhtml">FatFilePrint.cpp</a></li>
<li><a class="el" href="../../d8/d68/FatFileSFN_8cpp.xhtml">FatFileSFN.cpp</a></li>
<li><a class="el" href="../../d5/d62/FatName_8cpp.xhtml">FatName.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/db4/classFatFile.xhtml">FatFile</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
