<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1:  Fichier source de /mnt/d/Cours/10. CESI A2/Blocs/01 - Systeme embarque/Livrables/Station_Meteo_Groupe_1 - Copy/libs/SdFat/src/RingBuf.h</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('db/d68/RingBuf_8h_source.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">RingBuf.h</div></div>
</div><!--header-->
<div class="contents">
<a href="../../db/d68/RingBuf_8h.xhtml">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">#ifndef RingBuf_h</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="preprocessor">#define RingBuf_h</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="preprocessor">#include &quot;<a class="code" href="../../d3/d4d/FmtNumber_8h.xhtml">common/FmtNumber.h</a>&quot;</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#include &quot;<a class="code" href="../../d0/d1b/SysCall_8h.xhtml">common/SysCall.h</a>&quot;</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">//  Teensy 3.5/3.6 has hard fault at 0x20000000 for unaligned memcpy.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="preprocessor">#if defined(__MK64FX512__) || defined(__MK66FX1M0__)</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">inline</span> <span class="keywordtype">bool</span> is_aligned(<span class="keyword">const</span> <span class="keywordtype">void</span>* ptr, uintptr_t alignment) {</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keyword">auto</span> iptr = <span class="keyword">reinterpret_cast&lt;</span>uintptr_t<span class="keyword">&gt;</span>(ptr);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keywordflow">return</span> !(iptr % alignment);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>}</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(<span class="keywordtype">void</span>* dst, <span class="keyword">const</span> <span class="keywordtype">void</span>* src, <span class="keywordtype">size_t</span> len) {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">const</span> uint8_t* b = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t*<span class="keyword">&gt;</span>(0X20000000UL);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  uint8_t* d = <span class="keyword">reinterpret_cast&lt;</span>uint8_t*<span class="keyword">&gt;</span>(dst);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keyword">const</span> uint8_t* s = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>uint8_t*<span class="keyword">&gt;</span>(src);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keywordflow">if</span> ((is_aligned(d, 4) &amp;&amp; is_aligned(s, 4) &amp;&amp; (len &amp; 3) == 0) ||</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      !((d &lt; b &amp;&amp; b &lt;= (d + len)) || (s &lt; b &amp;&amp; b &lt;= (s + len)))) {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    memcpy(dst, src, len);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="keywordflow">while</span> (len--) {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>      *d++ = *s++;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    }</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  }</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>}</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="preprocessor">#else   </span><span class="comment">// defined(__MK64FX512__) || defined(__MK66FX1M0__)</span></div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">   55</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(<span class="keywordtype">void</span>* dst, <span class="keyword">const</span> <span class="keywordtype">void</span>* src, <span class="keywordtype">size_t</span> len) {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  memcpy(dst, src, len);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="preprocessor">#endif  </span><span class="comment">// defined(__MK64FX512__) || defined(__MK66FX1M0__)</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="preprocessor">#endif  </span><span class="comment">// DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>template &lt;class F, size_t Size&gt;</div>
<div class="foldopen" id="foldopen00072" data-start="{" data-end="};">
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf.xhtml">   72</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d1/d61/classRingBuf.xhtml">RingBuf</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d9/df9/classPrint.xhtml">Print</a> {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> <span class="keyword">public</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a14b9db2bed2601d116a442812cee5078.xhtml#a14b9db2bed2601d116a442812cee5078">   77</a></span>  <a class="code hl_function" href="../../d1/d61/classRingBuf_a14b9db2bed2601d116a442812cee5078.xhtml#a14b9db2bed2601d116a442812cee5078">RingBuf</a>() { <a class="code hl_function" href="../../d1/d61/classRingBuf_a07f7d1c7c8a9c1390a7f697aabd11432.xhtml#a07f7d1c7c8a9c1390a7f697aabd11432">begin</a>(<span class="keyword">nullptr</span>); }</div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a07f7d1c7c8a9c1390a7f697aabd11432.xhtml#a07f7d1c7c8a9c1390a7f697aabd11432">   82</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a07f7d1c7c8a9c1390a7f697aabd11432.xhtml#a07f7d1c7c8a9c1390a7f697aabd11432">begin</a>(<a class="code hl_define" href="../../dc/daf/PrintBasic_8h_a0e3009529aac180ed5f48296d6670d6b.xhtml#a0e3009529aac180ed5f48296d6670d6b">F</a>* file) {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <a class="code hl_variable" href="../../d1/d61/classRingBuf_a15b16224a4479a9df13fbad63339f2d8.xhtml#a15b16224a4479a9df13fbad63339f2d8">m_file</a> = file;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <a class="code hl_variable" href="../../d1/d61/classRingBuf_a8701dc39939816ba022fbb3d7d607ff9.xhtml#a8701dc39939816ba022fbb3d7d607ff9">m_count</a> = 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <a class="code hl_variable" href="../../d1/d61/classRingBuf_acbead00fa1e33d60f1dcc0e744704512.xhtml#acbead00fa1e33d60f1dcc0e744704512">m_head</a> = 0;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <a class="code hl_variable" href="../../d1/d61/classRingBuf_aee09954dd783177c83e422ad34dd9f00.xhtml#aee09954dd783177c83e422ad34dd9f00">m_tail</a> = 0;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <a class="code hl_variable" href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">m_inISR</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <a class="code hl_function" href="../../d9/df9/classPrint_aec9ecf84cc6d9087a650def3cefc459e.xhtml#aec9ecf84cc6d9087a650def3cefc459e">clearWriteError</a>();</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  }</div>
</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_ad5ba5bb98393eb8513313da5d1c7f780.xhtml#ad5ba5bb98393eb8513313da5d1c7f780">   93</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_ad5ba5bb98393eb8513313da5d1c7f780.xhtml#ad5ba5bb98393eb8513313da5d1c7f780">beginISR</a>() { <a class="code hl_variable" href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">m_inISR</a> = <span class="keyword">true</span>; }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a51ad572d21641613eb0204d7b0e5321c.xhtml#a51ad572d21641613eb0204d7b0e5321c">   97</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a51ad572d21641613eb0204d7b0e5321c.xhtml#a51ad572d21641613eb0204d7b0e5321c">bytesFree</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> Size - <a class="code hl_function" href="../../d1/d61/classRingBuf_aadad4bc85a76ff249db61b123a512a16.xhtml#aadad4bc85a76ff249db61b123a512a16">bytesUsed</a>(); }</div>
<div class="foldopen" id="foldopen00101" data-start="{" data-end="}">
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_aadad4bc85a76ff249db61b123a512a16.xhtml#aadad4bc85a76ff249db61b123a512a16">  101</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_aadad4bc85a76ff249db61b123a512a16.xhtml#aadad4bc85a76ff249db61b123a512a16">bytesUsed</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">m_inISR</a>) {</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>      <span class="keywordflow">return</span> <a class="code hl_variable" href="../../d1/d61/classRingBuf_a8701dc39939816ba022fbb3d7d607ff9.xhtml#a8701dc39939816ba022fbb3d7d607ff9">m_count</a>;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>      <a class="code hl_define" href="../../de/df0/Arduino_8h_a8dfd0b70aa3eb3c592d6de11711fce91.xhtml#a8dfd0b70aa3eb3c592d6de11711fce91">noInterrupts</a>();</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>      <span class="keywordtype">size_t</span> rtn = <a class="code hl_variable" href="../../d1/d61/classRingBuf_a8701dc39939816ba022fbb3d7d607ff9.xhtml#a8701dc39939816ba022fbb3d7d607ff9">m_count</a>;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>      <a class="code hl_define" href="../../de/df0/Arduino_8h_aeab54da5ac84f3441a91cb982b2276bc.xhtml#aeab54da5ac84f3441a91cb982b2276bc">interrupts</a>();</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>      <span class="keywordflow">return</span> rtn;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  }</div>
</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a7410eff922bca2f1f8feae852414762c.xhtml#a7410eff922bca2f1f8feae852414762c">  114</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a7410eff922bca2f1f8feae852414762c.xhtml#a7410eff922bca2f1f8feae852414762c">endISR</a>() { <a class="code hl_variable" href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">m_inISR</a> = <span class="keyword">false</span>; }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="comment">// See write(), read(), beginISR() and endISR().</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a95b36e81240430fcb790fda8b8a67c6d.xhtml#a95b36e81240430fcb790fda8b8a67c6d">  117</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a95b36e81240430fcb790fda8b8a67c6d.xhtml#a95b36e81240430fcb790fda8b8a67c6d">__attribute__</a>((error(<span class="stringliteral">&quot;use write(buf, count), beginISR(), endISR()&quot;</span>)))</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a77b82ed522e11406d61b8a8a3f89318f.xhtml#a77b82ed522e11406d61b8a8a3f89318f">  118</a></span>  memcpyIn(const <span class="keywordtype">void</span>* buf, <span class="keywordtype">size_t</span> <a class="code hl_variable" href="../../d1/d61/classRingBuf_a77b82ed522e11406d61b8a8a3f89318f.xhtml#a77b82ed522e11406d61b8a8a3f89318f">count</a>);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_ad549a5b0fc9eb0eb00587eaa5f141279.xhtml#ad549a5b0fc9eb0eb00587eaa5f141279">  119</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_variable" href="../../d4/da0/SdCardInfo_8h_a781577f439fe2e5c3a66ae3f59016b5e.xhtml#a781577f439fe2e5c3a66ae3f59016b5e">__attribute__</a>((error(&quot;use <a class="code hl_function" href="../../d1/d61/classRingBuf_a21f25705781142925be5fdfdb77b261f.xhtml#a21f25705781142925be5fdfdb77b261f">read</a>(buf, <a class="code hl_variable" href="../../d1/d61/classRingBuf_a77b82ed522e11406d61b8a8a3f89318f.xhtml#a77b82ed522e11406d61b8a8a3f89318f">count</a>), <a class="code hl_function" href="../../d1/d61/classRingBuf_ad5ba5bb98393eb8513313da5d1c7f780.xhtml#ad5ba5bb98393eb8513313da5d1c7f780">beginISR</a>(), <a class="code hl_function" href="../../d1/d61/classRingBuf_a7410eff922bca2f1f8feae852414762c.xhtml#a7410eff922bca2f1f8feae852414762c">endISR</a>()&quot;)))</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  memcpyOut(<span class="keywordtype">void</span>* buf, <span class="keywordtype">size_t</span> <a class="code hl_variable" href="../../d1/d61/classRingBuf_a77b82ed522e11406d61b8a8a3f89318f.xhtml#a77b82ed522e11406d61b8a8a3f89318f">count</a>);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="preprocessor">#endif  </span><span class="comment">// DOXYGEN_SHOULD_SKIP_THIS</span></div>
<div class="foldopen" id="foldopen00128" data-start="{" data-end="}">
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a9d8e7b608007ec4c83a829039595b64c.xhtml#a9d8e7b608007ec4c83a829039595b64c">  128</a></span>  size_t printField(double value, char term, uint8_t prec = 2) {</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <span class="keywordtype">char</span> buf[24];</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordtype">char</span>* str = buf + <span class="keyword">sizeof</span>(buf);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="keywordflow">if</span> (term) {</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>      *--str = term;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>      <span class="keywordflow">if</span> (term == <span class="charliteral">&#39;\n&#39;</span>) {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>        *--str = <span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    str = <a class="code hl_function" href="../../d4/d7f/FmtNumber_8cpp_aa406e3ddeb7cfe6c5bc9c681f1f68b02.xhtml#aa406e3ddeb7cfe6c5bc9c681f1f68b02">fmtDouble</a>(str, value, prec, <span class="keyword">false</span>);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a631795a0a58d0ae556bb45d985e36efa.xhtml#a631795a0a58d0ae556bb45d985e36efa">write</a>(str, buf + <span class="keyword">sizeof</span>(buf) - str);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  }</div>
</div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a87b5e4498705642d88412f11bf1ef5dd.xhtml#a87b5e4498705642d88412f11bf1ef5dd">  146</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a87b5e4498705642d88412f11bf1ef5dd.xhtml#a87b5e4498705642d88412f11bf1ef5dd">printField</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">char</span> term, uint8_t prec = 2) {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordflow">return</span> printField(<span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(value), term, prec);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  }</div>
</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00155" data-start="{" data-end="}">
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a7a5552ac6361cebb8b911df2e5cdcff5.xhtml#a7a5552ac6361cebb8b911df2e5cdcff5">  155</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a7a5552ac6361cebb8b911df2e5cdcff5.xhtml#a7a5552ac6361cebb8b911df2e5cdcff5">printField</a>(Type value, <span class="keywordtype">char</span> term) {</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keywordtype">char</span> sign = 0;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="keywordtype">char</span> buf[3 * <span class="keyword">sizeof</span>(Type) + 3];</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    <span class="keywordtype">char</span>* str = buf + <span class="keyword">sizeof</span>(buf);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    <span class="keywordflow">if</span> (term) {</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>      *--str = term;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>      <span class="keywordflow">if</span> (term == <span class="charliteral">&#39;\n&#39;</span>) {</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        *--str = <span class="charliteral">&#39;\r&#39;</span>;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>      }</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    }</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    <span class="keywordflow">if</span> (value &lt; 0) {</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      value = -value;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>      sign = <span class="charliteral">&#39;-&#39;</span>;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    }</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(Type) &lt; 4) {</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      str = <a class="code hl_function" href="../../d4/d7f/FmtNumber_8cpp_af68574870cae526800333ab6a615f955.xhtml#af68574870cae526800333ab6a615f955">fmtBase10</a>(str, (uint16_t)value);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>      str = <a class="code hl_function" href="../../d4/d7f/FmtNumber_8cpp_af68574870cae526800333ab6a615f955.xhtml#af68574870cae526800333ab6a615f955">fmtBase10</a>(str, (uint32_t)value);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    <span class="keywordflow">if</span> (sign) {</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>      *--str = sign;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    }</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    <span class="keywordflow">return</span> write((<span class="keyword">const</span> uint8_t*)str, &amp;buf[<span class="keyword">sizeof</span>(buf)] - str);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  }</div>
</div>
<div class="foldopen" id="foldopen00185" data-start="{" data-end="}">
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a21f25705781142925be5fdfdb77b261f.xhtml#a21f25705781142925be5fdfdb77b261f">  185</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a21f25705781142925be5fdfdb77b261f.xhtml#a21f25705781142925be5fdfdb77b261f">read</a>(<span class="keywordtype">void</span>* buf, <span class="keywordtype">size_t</span> count) {</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="keywordtype">size_t</span> n = bytesFree();</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keywordflow">if</span> (count &gt; n) {</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>      count = n;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    uint8_t* dst = <span class="keyword">reinterpret_cast&lt;</span>uint8_t*<span class="keyword">&gt;</span>(buf);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    n = minSize(Size - m_tail, count);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>    <span class="keywordflow">if</span> (n == count) {</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(dst, m_buf + m_tail, n);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>      m_tail = advance(m_tail, n);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(dst, m_buf + m_tail, n);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(dst + n, m_buf, count - n);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>      m_tail = count - n;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    }</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    adjustCount(-count);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    <span class="keywordflow">return</span> count;</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  }</div>
</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00210" data-start="{" data-end="}">
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a550b04859b862f158a7f36338be9e81b.xhtml#a550b04859b862f158a7f36338be9e81b">  210</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a550b04859b862f158a7f36338be9e81b.xhtml#a550b04859b862f158a7f36338be9e81b">read</a>(Type* data) {</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    <span class="keywordflow">if</span> (bytesUsed() &lt; <span class="keyword">sizeof</span>(Type)) {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    }</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    uint8_t* ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t*<span class="keyword">&gt;</span>(data);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <span class="keyword">sizeof</span>(Type); i++) {</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>      ptr[i] = m_buf[m_tail];</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>      m_tail = advance(m_tail);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    }</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    adjustCount(-<span class="keyword">sizeof</span>(Type));</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  }</div>
</div>
<div class="foldopen" id="foldopen00232" data-start="{" data-end="}">
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a11fe2aa75fbc39fcf563265fa2f34785.xhtml#a11fe2aa75fbc39fcf563265fa2f34785">  232</a></span>  <span class="keywordtype">int</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a11fe2aa75fbc39fcf563265fa2f34785.xhtml#a11fe2aa75fbc39fcf563265fa2f34785">readIn</a>(<span class="keywordtype">size_t</span> count) {</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    <span class="keywordtype">size_t</span> n = bytesFree();</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    <span class="keywordflow">if</span> (count &gt; n) {</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>      count = n;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    }</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    n = minSize(Size - m_head, count);</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="keyword">auto</span> rtn = m_file-&gt;read(m_buf + m_head, n);</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    <span class="keywordflow">if</span> (rtn &lt;= 0) {</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>      <span class="keywordflow">return</span> rtn;</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    }</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    <span class="keywordtype">size_t</span> nread = rtn;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    <span class="keywordflow">if</span> (n &lt; count &amp;&amp; nread == n) {</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>      rtn = m_file-&gt;read(m_buf, count - n);</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>      <span class="keywordflow">if</span> (rtn &gt; 0) {</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>        nread += rtn;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>      }</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    }</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>    m_head = advance(m_head, nread);</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    adjustCount(nread);</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    <span class="keywordflow">return</span> nread;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  }</div>
</div>
<div class="foldopen" id="foldopen00257" data-start="{" data-end="}">
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_ac5b3197c6fe27f0336373098ade09d5e.xhtml#ac5b3197c6fe27f0336373098ade09d5e">  257</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_ac5b3197c6fe27f0336373098ade09d5e.xhtml#ac5b3197c6fe27f0336373098ade09d5e">sync</a>() {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <span class="keywordtype">size_t</span> n = bytesUsed();</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    <span class="keywordflow">return</span> n ? writeOut(n) == n : <span class="keyword">true</span>;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  }</div>
</div>
<div class="foldopen" id="foldopen00272" data-start="{" data-end="}">
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a631795a0a58d0ae556bb45d985e36efa.xhtml#a631795a0a58d0ae556bb45d985e36efa">  272</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a631795a0a58d0ae556bb45d985e36efa.xhtml#a631795a0a58d0ae556bb45d985e36efa">write</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* buf, <span class="keywordtype">size_t</span> count) {</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>    <span class="keywordflow">if</span> (bytesFree() &lt; count) {</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>      setWriteError();</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>      <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    }</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keyword">const</span> uint8_t* src = (<span class="keyword">const</span> uint8_t*)buf;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keywordtype">size_t</span> n = minSize(Size - m_head, count);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    <span class="keywordflow">if</span> (n == count) {</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(m_buf + m_head, src, n);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>      m_head = advance(m_head, n);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(m_buf + m_head, src, n);</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>      <a class="code hl_function" href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a>(m_buf, src + n, count - n);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>      m_head = count - n;</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    }</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    adjustCount(count);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>    <span class="keywordflow">return</span> count;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  }</div>
</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a24d6943e888ad04e73d462a5c3b4513b.xhtml#a24d6943e888ad04e73d462a5c3b4513b">  296</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a24d6943e888ad04e73d462a5c3b4513b.xhtml#a24d6943e888ad04e73d462a5c3b4513b">write</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* str) { <span class="keywordflow">return</span> <a class="code hl_function" href="../../d9/df9/classPrint_a5be30d49adae2406a270c29ba9a3e0a3.xhtml#a5be30d49adae2406a270c29ba9a3e0a3">Print::write</a>(str); }</div>
<div class="foldopen" id="foldopen00304" data-start="{" data-end="}">
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_af0f1eb780920d4c32c500ad0f6a6ed05.xhtml#af0f1eb780920d4c32c500ad0f6a6ed05">  304</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_af0f1eb780920d4c32c500ad0f6a6ed05.xhtml#af0f1eb780920d4c32c500ad0f6a6ed05">write</a>(<span class="keyword">const</span> uint8_t* buf, <span class="keywordtype">size_t</span> count)<span class="keyword"> override </span>{</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <span class="keywordflow">return</span> write((<span class="keyword">const</span> <span class="keywordtype">void</span>*)buf, count);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  }</div>
</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00313" data-start="{" data-end="}">
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a5b9e3265cdfe7dc14f06c80f3694659b.xhtml#a5b9e3265cdfe7dc14f06c80f3694659b">  313</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a5b9e3265cdfe7dc14f06c80f3694659b.xhtml#a5b9e3265cdfe7dc14f06c80f3694659b">write</a>(Type data) {</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    uint8_t* ptr = <span class="keyword">reinterpret_cast&lt;</span>uint8_t*<span class="keyword">&gt;</span>(&amp;data);</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>    <span class="keywordflow">if</span> (bytesFree() &lt; <span class="keyword">sizeof</span>(Type)) {</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>      setWriteError();</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>      <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    }</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <span class="keyword">sizeof</span>(Type); i++) {</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>      m_buf[m_head] = ptr[i];</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>      m_head = advance(m_head);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    }</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>    adjustCount(<span class="keyword">sizeof</span>(Type));</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>    <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(Type);</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>  }</div>
</div>
<div class="foldopen" id="foldopen00333" data-start="{" data-end="}">
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a07dbeaa35776318b3b45d7b04a5bd7ac.xhtml#a07dbeaa35776318b3b45d7b04a5bd7ac">  333</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a07dbeaa35776318b3b45d7b04a5bd7ac.xhtml#a07dbeaa35776318b3b45d7b04a5bd7ac">write</a>(uint8_t data) <span class="keyword">final</span> <a class="code hl_variable" href="../../d4/da0/SdCardInfo_8h_a781577f439fe2e5c3a66ae3f59016b5e.xhtml#a781577f439fe2e5c3a66ae3f59016b5e">__attribute__</a>((always_inline)) {</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>    <span class="comment">// Use this if above does not compile  size_t write(uint8_t data) final {</span></div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>    <span class="keywordflow">return</span> write&lt;uint8_t&gt;(data);</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  }</div>
</div>
<div class="foldopen" id="foldopen00348" data-start="{" data-end="}">
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a3ab8d4f4b7bc833018fe4db182660051.xhtml#a3ab8d4f4b7bc833018fe4db182660051">  348</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a3ab8d4f4b7bc833018fe4db182660051.xhtml#a3ab8d4f4b7bc833018fe4db182660051">writeOut</a>(<span class="keywordtype">size_t</span> count) {</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>    <span class="keywordtype">size_t</span> n = bytesUsed();  <span class="comment">// Protected from interrupts;</span></div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>    <span class="keywordflow">if</span> (count &gt; n) {</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>      count = n;</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>    }</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>    n = minSize(Size - m_tail, count);</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>    <span class="keyword">auto</span> rtn = m_file-&gt;write(m_buf + m_tail, n);</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>    <span class="keywordflow">if</span> (rtn &lt;= 0) {</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>      <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>    }</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>    <span class="keywordtype">size_t</span> nwrite = rtn;</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>    <span class="keywordflow">if</span> (n &lt; count &amp;&amp; nwrite == n) {</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>      rtn = m_file-&gt;write(m_buf, count - n);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>      <span class="keywordflow">if</span> (rtn &gt; 0) {</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>        nwrite += rtn;</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>      }</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>    }</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>    m_tail = advance(m_tail, nwrite);</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>    adjustCount(-nwrite);</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>    <span class="keywordflow">return</span> nwrite;</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  }</div>
</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> <span class="keyword">private</span>:</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_ac8fdb0d999bef49d99a6f0703e186f52.xhtml#ac8fdb0d999bef49d99a6f0703e186f52">  371</a></span>  uint8_t <a class="code hl_function" href="../../d1/d61/classRingBuf_ac8fdb0d999bef49d99a6f0703e186f52.xhtml#ac8fdb0d999bef49d99a6f0703e186f52">__attribute__</a>((aligned(4))) m_buf[Size];</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a15b16224a4479a9df13fbad63339f2d8.xhtml#a15b16224a4479a9df13fbad63339f2d8">  372</a></span>  <a class="code hl_define" href="../../dc/daf/PrintBasic_8h_a0e3009529aac180ed5f48296d6670d6b.xhtml#a0e3009529aac180ed5f48296d6670d6b">F</a>* m_file;</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a8701dc39939816ba022fbb3d7d607ff9.xhtml#a8701dc39939816ba022fbb3d7d607ff9">  373</a></span>  volatile <span class="keywordtype">size_t</span> m_count;</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_acbead00fa1e33d60f1dcc0e744704512.xhtml#acbead00fa1e33d60f1dcc0e744704512">  374</a></span>  <span class="keywordtype">size_t</span> m_head;</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_aee09954dd783177c83e422ad34dd9f00.xhtml#aee09954dd783177c83e422ad34dd9f00">  375</a></span>  <span class="keywordtype">size_t</span> m_tail;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">  376</a></span>  volatile <span class="keywordtype">bool</span> m_inISR;</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span> </div>
<div class="foldopen" id="foldopen00378" data-start="{" data-end="}">
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a4d072549643b3cea1a66264644ae6792.xhtml#a4d072549643b3cea1a66264644ae6792">  378</a></span>  <span class="keywordtype">void</span> adjustCount(<span class="keywordtype">int</span> amount) {</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>    <span class="keywordflow">if</span> (m_inISR) {</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>      m_count += amount;</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>    } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>      <a class="code hl_define" href="../../de/df0/Arduino_8h_a8dfd0b70aa3eb3c592d6de11711fce91.xhtml#a8dfd0b70aa3eb3c592d6de11711fce91">noInterrupts</a>();</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>      m_count += amount;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>      <a class="code hl_define" href="../../de/df0/Arduino_8h_aeab54da5ac84f3441a91cb982b2276bc.xhtml#aeab54da5ac84f3441a91cb982b2276bc">interrupts</a>();</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>    }</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  }</div>
</div>
<div class="foldopen" id="foldopen00387" data-start="{" data-end="}">
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_ab6faaf883e8e7c51f6d5258668865a51.xhtml#ab6faaf883e8e7c51f6d5258668865a51">  387</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_ab6faaf883e8e7c51f6d5258668865a51.xhtml#ab6faaf883e8e7c51f6d5258668865a51">advance</a>(<span class="keywordtype">size_t</span> index) {</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>    <span class="keywordflow">if</span> (!((Size - 1) &amp; Size)) {</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>      <span class="keywordflow">return</span> (index + 1) &amp; (Size - 1);</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>    }</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>    <span class="keywordflow">return</span> index + 1 &lt; Size ? index + 1 : 0;</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>  }</div>
</div>
<div class="foldopen" id="foldopen00393" data-start="{" data-end="}">
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a4bd4aae54989ff8569275ce793bc57a5.xhtml#a4bd4aae54989ff8569275ce793bc57a5">  393</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a4bd4aae54989ff8569275ce793bc57a5.xhtml#a4bd4aae54989ff8569275ce793bc57a5">advance</a>(<span class="keywordtype">size_t</span> index, <span class="keywordtype">size_t</span> n) {</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>    index += n;</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>    <span class="keywordflow">return</span> index &lt; Size ? index : index - Size;</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  }</div>
</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  <span class="comment">// avoid macro MIN</span></div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno"><a class="line" href="../../d1/d61/classRingBuf_a65239300614a9f6eedde389de2801e99.xhtml#a65239300614a9f6eedde389de2801e99">  398</a></span>  <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/d61/classRingBuf_a65239300614a9f6eedde389de2801e99.xhtml#a65239300614a9f6eedde389de2801e99">minSize</a>(<span class="keywordtype">size_t</span> a, <span class="keywordtype">size_t</span> b) { <span class="keywordflow">return</span> a &lt; b ? a : b; }</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>};</div>
</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span><span class="preprocessor">#endif  </span><span class="comment">// RingBuf_h</span></div>
<div class="ttc" id="aArduino_8h_a8dfd0b70aa3eb3c592d6de11711fce91_xhtml_a8dfd0b70aa3eb3c592d6de11711fce91"><div class="ttname"><a href="../../de/df0/Arduino_8h_a8dfd0b70aa3eb3c592d6de11711fce91.xhtml#a8dfd0b70aa3eb3c592d6de11711fce91">noInterrupts</a></div><div class="ttdeci">#define noInterrupts()</div><div class="ttdef"><b>Definition</b> Arduino.h:102</div></div>
<div class="ttc" id="aArduino_8h_aeab54da5ac84f3441a91cb982b2276bc_xhtml_aeab54da5ac84f3441a91cb982b2276bc"><div class="ttname"><a href="../../de/df0/Arduino_8h_aeab54da5ac84f3441a91cb982b2276bc.xhtml#aeab54da5ac84f3441a91cb982b2276bc">interrupts</a></div><div class="ttdeci">#define interrupts()</div><div class="ttdef"><b>Definition</b> Arduino.h:101</div></div>
<div class="ttc" id="aFmtNumber_8cpp_aa406e3ddeb7cfe6c5bc9c681f1f68b02_xhtml_aa406e3ddeb7cfe6c5bc9c681f1f68b02"><div class="ttname"><a href="../../d4/d7f/FmtNumber_8cpp_aa406e3ddeb7cfe6c5bc9c681f1f68b02.xhtml#aa406e3ddeb7cfe6c5bc9c681f1f68b02">fmtDouble</a></div><div class="ttdeci">char * fmtDouble(char *str, double num, uint8_t prec, bool altFmt)</div><div class="ttdef"><b>Definition</b> FmtNumber.cpp:250</div></div>
<div class="ttc" id="aFmtNumber_8cpp_af68574870cae526800333ab6a615f955_xhtml_af68574870cae526800333ab6a615f955"><div class="ttname"><a href="../../d4/d7f/FmtNumber_8cpp_af68574870cae526800333ab6a615f955.xhtml#af68574870cae526800333ab6a615f955">fmtBase10</a></div><div class="ttdeci">char * fmtBase10(char *str, uint16_t n)</div><div class="ttdef"><b>Definition</b> FmtNumber.cpp:164</div></div>
<div class="ttc" id="aFmtNumber_8h_xhtml"><div class="ttname"><a href="../../d3/d4d/FmtNumber_8h.xhtml">FmtNumber.h</a></div></div>
<div class="ttc" id="aPrintBasic_8h_a0e3009529aac180ed5f48296d6670d6b_xhtml_a0e3009529aac180ed5f48296d6670d6b"><div class="ttname"><a href="../../dc/daf/PrintBasic_8h_a0e3009529aac180ed5f48296d6670d6b.xhtml#a0e3009529aac180ed5f48296d6670d6b">F</a></div><div class="ttdeci">#define F(str)</div><div class="ttdef"><b>Definition</b> PrintBasic.h:44</div></div>
<div class="ttc" id="aRingBuf_8h_a8112ba67de4780dcde4812be345dd6bb_xhtml_a8112ba67de4780dcde4812be345dd6bb"><div class="ttname"><a href="../../db/d68/RingBuf_8h_a8112ba67de4780dcde4812be345dd6bb.xhtml#a8112ba67de4780dcde4812be345dd6bb">memcpyBuf</a></div><div class="ttdeci">void memcpyBuf(void *dst, const void *src, size_t len)</div><div class="ttdef"><b>Definition</b> RingBuf.h:55</div></div>
<div class="ttc" id="aSdCardInfo_8h_a781577f439fe2e5c3a66ae3f59016b5e_xhtml_a781577f439fe2e5c3a66ae3f59016b5e"><div class="ttname"><a href="../../d4/da0/SdCardInfo_8h_a781577f439fe2e5c3a66ae3f59016b5e.xhtml#a781577f439fe2e5c3a66ae3f59016b5e">__attribute__</a></div><div class="ttdeci">struct csd_t __attribute__</div></div>
<div class="ttc" id="aSysCall_8h_xhtml"><div class="ttname"><a href="../../d0/d1b/SysCall_8h.xhtml">SysCall.h</a></div><div class="ttdoc">SysCall class.</div></div>
<div class="ttc" id="aclassPrint_a5be30d49adae2406a270c29ba9a3e0a3_xhtml_a5be30d49adae2406a270c29ba9a3e0a3"><div class="ttname"><a href="../../d9/df9/classPrint_a5be30d49adae2406a270c29ba9a3e0a3.xhtml#a5be30d49adae2406a270c29ba9a3e0a3">Print::write</a></div><div class="ttdeci">virtual size_t write(uint8_t)=0</div></div>
<div class="ttc" id="aclassPrint_aec9ecf84cc6d9087a650def3cefc459e_xhtml_aec9ecf84cc6d9087a650def3cefc459e"><div class="ttname"><a href="../../d9/df9/classPrint_aec9ecf84cc6d9087a650def3cefc459e.xhtml#aec9ecf84cc6d9087a650def3cefc459e">Print::clearWriteError</a></div><div class="ttdeci">void clearWriteError()</div><div class="ttdef"><b>Definition</b> Print.h:49</div></div>
<div class="ttc" id="aclassPrint_xhtml"><div class="ttname"><a href="../../d9/df9/classPrint.xhtml">Print</a></div><div class="ttdef"><b>Definition</b> Print.h:38</div></div>
<div class="ttc" id="aclassRingBuf_a030889af13e278e154c3a77c6c9245b0_xhtml_a030889af13e278e154c3a77c6c9245b0"><div class="ttname"><a href="../../d1/d61/classRingBuf_a030889af13e278e154c3a77c6c9245b0.xhtml#a030889af13e278e154c3a77c6c9245b0">RingBuf::m_inISR</a></div><div class="ttdeci">volatile bool m_inISR</div><div class="ttdef"><b>Definition</b> RingBuf.h:376</div></div>
<div class="ttc" id="aclassRingBuf_a07dbeaa35776318b3b45d7b04a5bd7ac_xhtml_a07dbeaa35776318b3b45d7b04a5bd7ac"><div class="ttname"><a href="../../d1/d61/classRingBuf_a07dbeaa35776318b3b45d7b04a5bd7ac.xhtml#a07dbeaa35776318b3b45d7b04a5bd7ac">RingBuf::write</a></div><div class="ttdeci">size_t write(uint8_t data) final __attribute__((always_inline))</div><div class="ttdef"><b>Definition</b> RingBuf.h:333</div></div>
<div class="ttc" id="aclassRingBuf_a07f7d1c7c8a9c1390a7f697aabd11432_xhtml_a07f7d1c7c8a9c1390a7f697aabd11432"><div class="ttname"><a href="../../d1/d61/classRingBuf_a07f7d1c7c8a9c1390a7f697aabd11432.xhtml#a07f7d1c7c8a9c1390a7f697aabd11432">RingBuf::begin</a></div><div class="ttdeci">void begin(F *file)</div><div class="ttdef"><b>Definition</b> RingBuf.h:82</div></div>
<div class="ttc" id="aclassRingBuf_a11fe2aa75fbc39fcf563265fa2f34785_xhtml_a11fe2aa75fbc39fcf563265fa2f34785"><div class="ttname"><a href="../../d1/d61/classRingBuf_a11fe2aa75fbc39fcf563265fa2f34785.xhtml#a11fe2aa75fbc39fcf563265fa2f34785">RingBuf::readIn</a></div><div class="ttdeci">int readIn(size_t count)</div><div class="ttdef"><b>Definition</b> RingBuf.h:232</div></div>
<div class="ttc" id="aclassRingBuf_a14b9db2bed2601d116a442812cee5078_xhtml_a14b9db2bed2601d116a442812cee5078"><div class="ttname"><a href="../../d1/d61/classRingBuf_a14b9db2bed2601d116a442812cee5078.xhtml#a14b9db2bed2601d116a442812cee5078">RingBuf::RingBuf</a></div><div class="ttdeci">RingBuf()</div><div class="ttdef"><b>Definition</b> RingBuf.h:77</div></div>
<div class="ttc" id="aclassRingBuf_a15b16224a4479a9df13fbad63339f2d8_xhtml_a15b16224a4479a9df13fbad63339f2d8"><div class="ttname"><a href="../../d1/d61/classRingBuf_a15b16224a4479a9df13fbad63339f2d8.xhtml#a15b16224a4479a9df13fbad63339f2d8">RingBuf::m_file</a></div><div class="ttdeci">F * m_file</div><div class="ttdef"><b>Definition</b> RingBuf.h:372</div></div>
<div class="ttc" id="aclassRingBuf_a21f25705781142925be5fdfdb77b261f_xhtml_a21f25705781142925be5fdfdb77b261f"><div class="ttname"><a href="../../d1/d61/classRingBuf_a21f25705781142925be5fdfdb77b261f.xhtml#a21f25705781142925be5fdfdb77b261f">RingBuf::read</a></div><div class="ttdeci">size_t read(void *buf, size_t count)</div><div class="ttdef"><b>Definition</b> RingBuf.h:185</div></div>
<div class="ttc" id="aclassRingBuf_a24d6943e888ad04e73d462a5c3b4513b_xhtml_a24d6943e888ad04e73d462a5c3b4513b"><div class="ttname"><a href="../../d1/d61/classRingBuf_a24d6943e888ad04e73d462a5c3b4513b.xhtml#a24d6943e888ad04e73d462a5c3b4513b">RingBuf::write</a></div><div class="ttdeci">size_t write(const char *str)</div><div class="ttdef"><b>Definition</b> RingBuf.h:296</div></div>
<div class="ttc" id="aclassRingBuf_a3ab8d4f4b7bc833018fe4db182660051_xhtml_a3ab8d4f4b7bc833018fe4db182660051"><div class="ttname"><a href="../../d1/d61/classRingBuf_a3ab8d4f4b7bc833018fe4db182660051.xhtml#a3ab8d4f4b7bc833018fe4db182660051">RingBuf::writeOut</a></div><div class="ttdeci">size_t writeOut(size_t count)</div><div class="ttdef"><b>Definition</b> RingBuf.h:348</div></div>
<div class="ttc" id="aclassRingBuf_a4bd4aae54989ff8569275ce793bc57a5_xhtml_a4bd4aae54989ff8569275ce793bc57a5"><div class="ttname"><a href="../../d1/d61/classRingBuf_a4bd4aae54989ff8569275ce793bc57a5.xhtml#a4bd4aae54989ff8569275ce793bc57a5">RingBuf::advance</a></div><div class="ttdeci">size_t advance(size_t index, size_t n)</div><div class="ttdef"><b>Definition</b> RingBuf.h:393</div></div>
<div class="ttc" id="aclassRingBuf_a51ad572d21641613eb0204d7b0e5321c_xhtml_a51ad572d21641613eb0204d7b0e5321c"><div class="ttname"><a href="../../d1/d61/classRingBuf_a51ad572d21641613eb0204d7b0e5321c.xhtml#a51ad572d21641613eb0204d7b0e5321c">RingBuf::bytesFree</a></div><div class="ttdeci">size_t bytesFree() const</div><div class="ttdef"><b>Definition</b> RingBuf.h:97</div></div>
<div class="ttc" id="aclassRingBuf_a550b04859b862f158a7f36338be9e81b_xhtml_a550b04859b862f158a7f36338be9e81b"><div class="ttname"><a href="../../d1/d61/classRingBuf_a550b04859b862f158a7f36338be9e81b.xhtml#a550b04859b862f158a7f36338be9e81b">RingBuf::read</a></div><div class="ttdeci">bool read(Type *data)</div><div class="ttdef"><b>Definition</b> RingBuf.h:210</div></div>
<div class="ttc" id="aclassRingBuf_a5b9e3265cdfe7dc14f06c80f3694659b_xhtml_a5b9e3265cdfe7dc14f06c80f3694659b"><div class="ttname"><a href="../../d1/d61/classRingBuf_a5b9e3265cdfe7dc14f06c80f3694659b.xhtml#a5b9e3265cdfe7dc14f06c80f3694659b">RingBuf::write</a></div><div class="ttdeci">size_t write(Type data)</div><div class="ttdef"><b>Definition</b> RingBuf.h:313</div></div>
<div class="ttc" id="aclassRingBuf_a631795a0a58d0ae556bb45d985e36efa_xhtml_a631795a0a58d0ae556bb45d985e36efa"><div class="ttname"><a href="../../d1/d61/classRingBuf_a631795a0a58d0ae556bb45d985e36efa.xhtml#a631795a0a58d0ae556bb45d985e36efa">RingBuf::write</a></div><div class="ttdeci">size_t write(const void *buf, size_t count)</div><div class="ttdef"><b>Definition</b> RingBuf.h:272</div></div>
<div class="ttc" id="aclassRingBuf_a65239300614a9f6eedde389de2801e99_xhtml_a65239300614a9f6eedde389de2801e99"><div class="ttname"><a href="../../d1/d61/classRingBuf_a65239300614a9f6eedde389de2801e99.xhtml#a65239300614a9f6eedde389de2801e99">RingBuf::minSize</a></div><div class="ttdeci">size_t minSize(size_t a, size_t b)</div><div class="ttdef"><b>Definition</b> RingBuf.h:398</div></div>
<div class="ttc" id="aclassRingBuf_a7410eff922bca2f1f8feae852414762c_xhtml_a7410eff922bca2f1f8feae852414762c"><div class="ttname"><a href="../../d1/d61/classRingBuf_a7410eff922bca2f1f8feae852414762c.xhtml#a7410eff922bca2f1f8feae852414762c">RingBuf::endISR</a></div><div class="ttdeci">void endISR()</div><div class="ttdef"><b>Definition</b> RingBuf.h:114</div></div>
<div class="ttc" id="aclassRingBuf_a77b82ed522e11406d61b8a8a3f89318f_xhtml_a77b82ed522e11406d61b8a8a3f89318f"><div class="ttname"><a href="../../d1/d61/classRingBuf_a77b82ed522e11406d61b8a8a3f89318f.xhtml#a77b82ed522e11406d61b8a8a3f89318f">RingBuf::count</a></div><div class="ttdeci">size_t size_t count</div><div class="ttdef"><b>Definition</b> RingBuf.h:118</div></div>
<div class="ttc" id="aclassRingBuf_a7a5552ac6361cebb8b911df2e5cdcff5_xhtml_a7a5552ac6361cebb8b911df2e5cdcff5"><div class="ttname"><a href="../../d1/d61/classRingBuf_a7a5552ac6361cebb8b911df2e5cdcff5.xhtml#a7a5552ac6361cebb8b911df2e5cdcff5">RingBuf::printField</a></div><div class="ttdeci">size_t printField(Type value, char term)</div><div class="ttdef"><b>Definition</b> RingBuf.h:155</div></div>
<div class="ttc" id="aclassRingBuf_a8701dc39939816ba022fbb3d7d607ff9_xhtml_a8701dc39939816ba022fbb3d7d607ff9"><div class="ttname"><a href="../../d1/d61/classRingBuf_a8701dc39939816ba022fbb3d7d607ff9.xhtml#a8701dc39939816ba022fbb3d7d607ff9">RingBuf::m_count</a></div><div class="ttdeci">volatile size_t m_count</div><div class="ttdef"><b>Definition</b> RingBuf.h:373</div></div>
<div class="ttc" id="aclassRingBuf_a87b5e4498705642d88412f11bf1ef5dd_xhtml_a87b5e4498705642d88412f11bf1ef5dd"><div class="ttname"><a href="../../d1/d61/classRingBuf_a87b5e4498705642d88412f11bf1ef5dd.xhtml#a87b5e4498705642d88412f11bf1ef5dd">RingBuf::printField</a></div><div class="ttdeci">size_t printField(float value, char term, uint8_t prec=2)</div><div class="ttdef"><b>Definition</b> RingBuf.h:146</div></div>
<div class="ttc" id="aclassRingBuf_a95b36e81240430fcb790fda8b8a67c6d_xhtml_a95b36e81240430fcb790fda8b8a67c6d"><div class="ttname"><a href="../../d1/d61/classRingBuf_a95b36e81240430fcb790fda8b8a67c6d.xhtml#a95b36e81240430fcb790fda8b8a67c6d">RingBuf::__attribute__</a></div><div class="ttdeci">size_t __attribute__((error(&quot;use write(buf, count), beginISR(), endISR()&quot;))) memcpyIn(const void *buf</div></div>
<div class="ttc" id="aclassRingBuf_aadad4bc85a76ff249db61b123a512a16_xhtml_aadad4bc85a76ff249db61b123a512a16"><div class="ttname"><a href="../../d1/d61/classRingBuf_aadad4bc85a76ff249db61b123a512a16.xhtml#aadad4bc85a76ff249db61b123a512a16">RingBuf::bytesUsed</a></div><div class="ttdeci">size_t bytesUsed() const</div><div class="ttdef"><b>Definition</b> RingBuf.h:101</div></div>
<div class="ttc" id="aclassRingBuf_ab6faaf883e8e7c51f6d5258668865a51_xhtml_ab6faaf883e8e7c51f6d5258668865a51"><div class="ttname"><a href="../../d1/d61/classRingBuf_ab6faaf883e8e7c51f6d5258668865a51.xhtml#ab6faaf883e8e7c51f6d5258668865a51">RingBuf::advance</a></div><div class="ttdeci">size_t advance(size_t index)</div><div class="ttdef"><b>Definition</b> RingBuf.h:387</div></div>
<div class="ttc" id="aclassRingBuf_ac5b3197c6fe27f0336373098ade09d5e_xhtml_ac5b3197c6fe27f0336373098ade09d5e"><div class="ttname"><a href="../../d1/d61/classRingBuf_ac5b3197c6fe27f0336373098ade09d5e.xhtml#ac5b3197c6fe27f0336373098ade09d5e">RingBuf::sync</a></div><div class="ttdeci">bool sync()</div><div class="ttdef"><b>Definition</b> RingBuf.h:257</div></div>
<div class="ttc" id="aclassRingBuf_ac8fdb0d999bef49d99a6f0703e186f52_xhtml_ac8fdb0d999bef49d99a6f0703e186f52"><div class="ttname"><a href="../../d1/d61/classRingBuf_ac8fdb0d999bef49d99a6f0703e186f52.xhtml#ac8fdb0d999bef49d99a6f0703e186f52">RingBuf::__attribute__</a></div><div class="ttdeci">uint8_t __attribute__((aligned(4))) m_buf[Size]</div></div>
<div class="ttc" id="aclassRingBuf_acbead00fa1e33d60f1dcc0e744704512_xhtml_acbead00fa1e33d60f1dcc0e744704512"><div class="ttname"><a href="../../d1/d61/classRingBuf_acbead00fa1e33d60f1dcc0e744704512.xhtml#acbead00fa1e33d60f1dcc0e744704512">RingBuf::m_head</a></div><div class="ttdeci">size_t m_head</div><div class="ttdef"><b>Definition</b> RingBuf.h:374</div></div>
<div class="ttc" id="aclassRingBuf_ad5ba5bb98393eb8513313da5d1c7f780_xhtml_ad5ba5bb98393eb8513313da5d1c7f780"><div class="ttname"><a href="../../d1/d61/classRingBuf_ad5ba5bb98393eb8513313da5d1c7f780.xhtml#ad5ba5bb98393eb8513313da5d1c7f780">RingBuf::beginISR</a></div><div class="ttdeci">void beginISR()</div><div class="ttdef"><b>Definition</b> RingBuf.h:93</div></div>
<div class="ttc" id="aclassRingBuf_aee09954dd783177c83e422ad34dd9f00_xhtml_aee09954dd783177c83e422ad34dd9f00"><div class="ttname"><a href="../../d1/d61/classRingBuf_aee09954dd783177c83e422ad34dd9f00.xhtml#aee09954dd783177c83e422ad34dd9f00">RingBuf::m_tail</a></div><div class="ttdeci">size_t m_tail</div><div class="ttdef"><b>Definition</b> RingBuf.h:375</div></div>
<div class="ttc" id="aclassRingBuf_af0f1eb780920d4c32c500ad0f6a6ed05_xhtml_af0f1eb780920d4c32c500ad0f6a6ed05"><div class="ttname"><a href="../../d1/d61/classRingBuf_af0f1eb780920d4c32c500ad0f6a6ed05.xhtml#af0f1eb780920d4c32c500ad0f6a6ed05">RingBuf::write</a></div><div class="ttdeci">size_t write(const uint8_t *buf, size_t count) override</div><div class="ttdef"><b>Definition</b> RingBuf.h:304</div></div>
<div class="ttc" id="aclassRingBuf_xhtml"><div class="ttname"><a href="../../d1/d61/classRingBuf.xhtml">RingBuf</a></div><div class="ttdoc">Ring buffer for data loggers and data transmitters.</div><div class="ttdef"><b>Definition</b> RingBuf.h:72</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_6719ab1f1f7655efc2fa43f7eb574fd1.xhtml">libs</a></li><li class="navelem"><a class="el" href="../../dir_42eee409255dea5a142129cbb92a8b55.xhtml">SdFat</a></li><li class="navelem"><a class="el" href="../../dir_2f4080adc233fc166a1397b7e1f61311.xhtml">src</a></li><li class="navelem"><a class="el" href="../../db/d68/RingBuf_8h.xhtml">RingBuf.h</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
