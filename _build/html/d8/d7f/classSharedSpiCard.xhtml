<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe SharedSpiCard</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d8/d7f/classSharedSpiCard.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pub-static-attribs">Attributs publics statiques</a> &#124;
<a href="#pri-methods">Fonctions membres privées</a> &#124;
<a href="#pri-attribs">Attributs privés</a> &#124;
<a href="../../d1/d15/classSharedSpiCard-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe SharedSpiCard</div></div>
</div><!--header-->
<div class="contents">

<p>Raw access to SD and SDHC flash memory cards via shared SPI port.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../d5/dc1/SdSpiCard_8h_source.xhtml">SdSpiCard.h</a>&gt;</code></p>
<div class="dynheader">
Graphe d'héritage de SharedSpiCard:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d1/d7a/classSharedSpiCard__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Graphe de collaboration de SharedSpiCard:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d0/d52/classSharedSpiCard__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:a9e98ff90dea57346c756e7f964a78300" id="r_a9e98ff90dea57346c756e7f964a78300"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9e98ff90dea57346c756e7f964a78300">SharedSpiCard</a> ()</td></tr>
<tr class="separator:a9e98ff90dea57346c756e7f964a78300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0255d8d48155bc14798edb8414f04030" id="r_a0255d8d48155bc14798edb8414f04030"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0255d8d48155bc14798edb8414f04030">begin</a> (<a class="el" href="../../de/ddc/classSdSpiConfig.xhtml">SdSpiConfig</a> spiConfig)</td></tr>
<tr class="separator:a0255d8d48155bc14798edb8414f04030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a781d935c5802a22a5d4310a7d18c5596" id="r_a781d935c5802a22a5d4310a7d18c5596"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a781d935c5802a22a5d4310a7d18c5596">cardCMD6</a> (uint32_t arg, uint8_t *status)</td></tr>
<tr class="separator:a781d935c5802a22a5d4310a7d18c5596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ab3c0bc923e828e66a5e15156cc0295" id="r_a9ab3c0bc923e828e66a5e15156cc0295"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ab3c0bc923e828e66a5e15156cc0295">end</a> ()</td></tr>
<tr class="separator:a9ab3c0bc923e828e66a5e15156cc0295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47ecb042de6b3136bd47820864e3c127" id="r_a47ecb042de6b3136bd47820864e3c127"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47ecb042de6b3136bd47820864e3c127">erase</a> (uint32_t firstSector, uint32_t lastSector)</td></tr>
<tr class="separator:a47ecb042de6b3136bd47820864e3c127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f70c0bffce374e014a42efda0bce4e" id="r_a42f70c0bffce374e014a42efda0bce4e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42f70c0bffce374e014a42efda0bce4e">eraseSingleSectorEnable</a> ()</td></tr>
<tr class="separator:a42f70c0bffce374e014a42efda0bce4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a747c3f0b962098cf0c097f3c4c2b4fd4" id="r_a747c3f0b962098cf0c097f3c4c2b4fd4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a747c3f0b962098cf0c097f3c4c2b4fd4">error</a> (uint8_t code)</td></tr>
<tr class="separator:a747c3f0b962098cf0c097f3c4c2b4fd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff338a5cece6d38c50f9516e6c31c0f6" id="r_aff338a5cece6d38c50f9516e6c31c0f6"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aff338a5cece6d38c50f9516e6c31c0f6">errorCode</a> () const</td></tr>
<tr class="separator:aff338a5cece6d38c50f9516e6c31c0f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ae2be970123e148f1d35f61ac56984f" id="r_a3ae2be970123e148f1d35f61ac56984f"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ae2be970123e148f1d35f61ac56984f">errorData</a> () const</td></tr>
<tr class="separator:a3ae2be970123e148f1d35f61ac56984f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5ea1a28884a58ce2b7333bf03227ff" id="r_abe5ea1a28884a58ce2b7333bf03227ff"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe5ea1a28884a58ce2b7333bf03227ff">hasDedicatedSpi</a> ()</td></tr>
<tr class="separator:abe5ea1a28884a58ce2b7333bf03227ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adffd2b7ebd53250fd96069f9bece875d" id="r_adffd2b7ebd53250fd96069f9bece875d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adffd2b7ebd53250fd96069f9bece875d">isBusy</a> ()</td></tr>
<tr class="separator:adffd2b7ebd53250fd96069f9bece875d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa88f3d95f390d3ada8696efefc435305" id="r_aa88f3d95f390d3ada8696efefc435305"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa88f3d95f390d3ada8696efefc435305">isDedicatedSpi</a> ()</td></tr>
<tr class="separator:aa88f3d95f390d3ada8696efefc435305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ecffa9c93d95a6c247293b42dc9512" id="r_a04ecffa9c93d95a6c247293b42dc9512"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04ecffa9c93d95a6c247293b42dc9512">readCID</a> (<a class="el" href="../../d7/d9b/structcid__t.xhtml">cid_t</a> *cid)</td></tr>
<tr class="separator:a04ecffa9c93d95a6c247293b42dc9512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28eccbfb63a43aada4ec199da69a38c" id="r_aa28eccbfb63a43aada4ec199da69a38c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa28eccbfb63a43aada4ec199da69a38c">readCSD</a> (<a class="el" href="../../d8/ded/structcsd__t.xhtml">csd_t</a> *csd)</td></tr>
<tr class="separator:aa28eccbfb63a43aada4ec199da69a38c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeae3cdc162f24c2d450abe4e1ed8340" id="r_abeae3cdc162f24c2d450abe4e1ed8340"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abeae3cdc162f24c2d450abe4e1ed8340">readData</a> (uint8_t *dst)</td></tr>
<tr class="separator:abeae3cdc162f24c2d450abe4e1ed8340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab59a333af583929c859fff6e018a7da5" id="r_ab59a333af583929c859fff6e018a7da5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab59a333af583929c859fff6e018a7da5">readOCR</a> (uint32_t *ocr)</td></tr>
<tr class="separator:ab59a333af583929c859fff6e018a7da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab57eba9e9714869949e688b44ce4319b" id="r_ab57eba9e9714869949e688b44ce4319b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab57eba9e9714869949e688b44ce4319b">readSCR</a> (<a class="el" href="../../df/dac/structscr__t.xhtml">scr_t</a> *scr)</td></tr>
<tr class="separator:ab57eba9e9714869949e688b44ce4319b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61d86f4092f8ddbc7339d7cbcf6f70c0" id="r_a61d86f4092f8ddbc7339d7cbcf6f70c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a61d86f4092f8ddbc7339d7cbcf6f70c0">readSector</a> (uint32_t sector, uint8_t *dst)</td></tr>
<tr class="separator:a61d86f4092f8ddbc7339d7cbcf6f70c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6145b8d16484f5b4a495bcbb54d3616e" id="r_a6145b8d16484f5b4a495bcbb54d3616e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6145b8d16484f5b4a495bcbb54d3616e">readSectors</a> (uint32_t sector, uint8_t *dst, size_t ns)</td></tr>
<tr class="separator:a6145b8d16484f5b4a495bcbb54d3616e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b1805d2eb0cd18141e8e180a967b816" id="r_a0b1805d2eb0cd18141e8e180a967b816"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b1805d2eb0cd18141e8e180a967b816">readStart</a> (uint32_t sector)</td></tr>
<tr class="separator:a0b1805d2eb0cd18141e8e180a967b816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c9b6ecb4146c62875e36ce819b50bd" id="r_a67c9b6ecb4146c62875e36ce819b50bd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a67c9b6ecb4146c62875e36ce819b50bd">readSDS</a> (<a class="el" href="../../d2/db0/structsds__t.xhtml">sds_t</a> *status)</td></tr>
<tr class="separator:a67c9b6ecb4146c62875e36ce819b50bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab33ad2aefbb9cff905cad0879dffc78b" id="r_ab33ad2aefbb9cff905cad0879dffc78b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab33ad2aefbb9cff905cad0879dffc78b">readStop</a> ()</td></tr>
<tr class="separator:ab33ad2aefbb9cff905cad0879dffc78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f089160d2ea9662c8c1f7a67f700ea1" id="r_a3f089160d2ea9662c8c1f7a67f700ea1"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f089160d2ea9662c8c1f7a67f700ea1">sdState</a> ()</td></tr>
<tr class="separator:a3f089160d2ea9662c8c1f7a67f700ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae005ead6dfdd65718da5a035dca82b39" id="r_ae005ead6dfdd65718da5a035dca82b39"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae005ead6dfdd65718da5a035dca82b39">sectorCount</a> ()</td></tr>
<tr class="separator:ae005ead6dfdd65718da5a035dca82b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02f8b70667f72bb8dadbfeb30727b8f" id="r_aa02f8b70667f72bb8dadbfeb30727b8f"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa02f8b70667f72bb8dadbfeb30727b8f">__attribute__</a> ((<a class="el" href="#a747c3f0b962098cf0c097f3c4c2b4fd4">error</a>(&quot;use <a class="el" href="#ae005ead6dfdd65718da5a035dca82b39">sectorCount</a>()&quot;))) cardSize()</td></tr>
<tr class="separator:aa02f8b70667f72bb8dadbfeb30727b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad80fc5a889428872085087ee865fe385" id="r_ad80fc5a889428872085087ee865fe385"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad80fc5a889428872085087ee865fe385">setDedicatedSpi</a> (bool value)</td></tr>
<tr class="separator:ad80fc5a889428872085087ee865fe385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814184dd0bfb31127526bb3b2792f834" id="r_a814184dd0bfb31127526bb3b2792f834"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a814184dd0bfb31127526bb3b2792f834">stopTransfer</a> ()</td></tr>
<tr class="separator:a814184dd0bfb31127526bb3b2792f834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f181b3d6f27413a0f5ee883dfd94d87" id="r_a2f181b3d6f27413a0f5ee883dfd94d87"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f181b3d6f27413a0f5ee883dfd94d87">syncDevice</a> ()</td></tr>
<tr class="separator:a2f181b3d6f27413a0f5ee883dfd94d87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dac2190763d7b4b72163ed7131e8a87" id="r_a7dac2190763d7b4b72163ed7131e8a87"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7dac2190763d7b4b72163ed7131e8a87">type</a> () const</td></tr>
<tr class="separator:a7dac2190763d7b4b72163ed7131e8a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf2ce56ca0a56fe841fbdf75f7f3faee" id="r_adf2ce56ca0a56fe841fbdf75f7f3faee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf2ce56ca0a56fe841fbdf75f7f3faee">writeSector</a> (uint32_t sector, const uint8_t *src)</td></tr>
<tr class="separator:adf2ce56ca0a56fe841fbdf75f7f3faee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b734ef77cc5db4f1ecc9e0dc5809403" id="r_a9b734ef77cc5db4f1ecc9e0dc5809403"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9b734ef77cc5db4f1ecc9e0dc5809403">writeSectors</a> (uint32_t sector, const uint8_t *src, size_t ns)</td></tr>
<tr class="separator:a9b734ef77cc5db4f1ecc9e0dc5809403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b6d7ad34f56d0d6a6c5059d920499ba" id="r_a5b6d7ad34f56d0d6a6c5059d920499ba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5b6d7ad34f56d0d6a6c5059d920499ba">writeData</a> (const uint8_t *src)</td></tr>
<tr class="separator:a5b6d7ad34f56d0d6a6c5059d920499ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e1c0fd8fe452d1bcff9104d84eb9869" id="r_a1e1c0fd8fe452d1bcff9104d84eb9869"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e1c0fd8fe452d1bcff9104d84eb9869">writeStart</a> (uint32_t sector)</td></tr>
<tr class="separator:a1e1c0fd8fe452d1bcff9104d84eb9869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9a34a573077e43e7c6028a16ae77fb3" id="r_ae9a34a573077e43e7c6028a16ae77fb3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae9a34a573077e43e7c6028a16ae77fb3">writeStop</a> ()</td></tr>
<tr class="separator:ae9a34a573077e43e7c6028a16ae77fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Attributs publics statiques</h2></td></tr>
<tr class="memitem:a63fd0b86d2e248e43409e3e6743466fe" id="r_a63fd0b86d2e248e43409e3e6743466fe"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a63fd0b86d2e248e43409e3e6743466fe">IDLE_STATE</a> = 0</td></tr>
<tr class="separator:a63fd0b86d2e248e43409e3e6743466fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4343d76001e1bc7f2839437cc85e8485" id="r_a4343d76001e1bc7f2839437cc85e8485"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4343d76001e1bc7f2839437cc85e8485">READ_STATE</a> = 1</td></tr>
<tr class="separator:a4343d76001e1bc7f2839437cc85e8485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18beb14f1c6beb5d0a4372b5608354a1" id="r_a18beb14f1c6beb5d0a4372b5608354a1"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18beb14f1c6beb5d0a4372b5608354a1">WRITE_STATE</a> = 2</td></tr>
<tr class="separator:a18beb14f1c6beb5d0a4372b5608354a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Fonctions membres privées</h2></td></tr>
<tr class="memitem:a943e9bdc39d4410d443fbdf22fd10f31" id="r_a943e9bdc39d4410d443fbdf22fd10f31"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a943e9bdc39d4410d443fbdf22fd10f31">cardAcmd</a> (uint8_t cmd, uint32_t arg)</td></tr>
<tr class="separator:a943e9bdc39d4410d443fbdf22fd10f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda33199753fc2aec74fe317cbaabc06" id="r_adda33199753fc2aec74fe317cbaabc06"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adda33199753fc2aec74fe317cbaabc06">cardCommand</a> (uint8_t cmd, uint32_t arg)</td></tr>
<tr class="separator:adda33199753fc2aec74fe317cbaabc06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a459121910aa0b3f15370e5ffcc70aa7d" id="r_a459121910aa0b3f15370e5ffcc70aa7d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a459121910aa0b3f15370e5ffcc70aa7d">readData</a> (uint8_t *dst, size_t count)</td></tr>
<tr class="separator:a459121910aa0b3f15370e5ffcc70aa7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9107af8380369d08cd2db4824a8aceda" id="r_a9107af8380369d08cd2db4824a8aceda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9107af8380369d08cd2db4824a8aceda">readRegister</a> (uint8_t cmd, void *buf)</td></tr>
<tr class="separator:a9107af8380369d08cd2db4824a8aceda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3088599862ff6e84ae79bfdf32aea8" id="r_a8c3088599862ff6e84ae79bfdf32aea8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c3088599862ff6e84ae79bfdf32aea8">spiSelect</a> ()</td></tr>
<tr class="separator:a8c3088599862ff6e84ae79bfdf32aea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef2dfa72e8d5643c90720f9f8c6a4254" id="r_aef2dfa72e8d5643c90720f9f8c6a4254"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef2dfa72e8d5643c90720f9f8c6a4254">spiStart</a> ()</td></tr>
<tr class="separator:aef2dfa72e8d5643c90720f9f8c6a4254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f511c39c50055a4fc97e720933aee3a" id="r_a0f511c39c50055a4fc97e720933aee3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0f511c39c50055a4fc97e720933aee3a">spiStop</a> ()</td></tr>
<tr class="separator:a0f511c39c50055a4fc97e720933aee3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad06a3278372300987b97876cf598c114" id="r_ad06a3278372300987b97876cf598c114"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad06a3278372300987b97876cf598c114">spiUnselect</a> ()</td></tr>
<tr class="separator:ad06a3278372300987b97876cf598c114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5502780c57416fb9f274ca8797556121" id="r_a5502780c57416fb9f274ca8797556121"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5502780c57416fb9f274ca8797556121">type</a> (uint8_t value)</td></tr>
<tr class="separator:a5502780c57416fb9f274ca8797556121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3468397bb3b12d29dd2f31e45b3dcaf" id="r_ab3468397bb3b12d29dd2f31e45b3dcaf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3468397bb3b12d29dd2f31e45b3dcaf">waitReady</a> (uint16_t ms)</td></tr>
<tr class="separator:ab3468397bb3b12d29dd2f31e45b3dcaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86417bd6707b926d43e3e32e5c6d65e0" id="r_a86417bd6707b926d43e3e32e5c6d65e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a86417bd6707b926d43e3e32e5c6d65e0">writeData</a> (uint8_t token, const uint8_t *src)</td></tr>
<tr class="separator:a86417bd6707b926d43e3e32e5c6d65e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ee2fe49dfaeea2347d8a265806d2b6" id="r_a69ee2fe49dfaeea2347d8a265806d2b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a69ee2fe49dfaeea2347d8a265806d2b6">spiActivate</a> ()</td></tr>
<tr class="separator:a69ee2fe49dfaeea2347d8a265806d2b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666540f03e7b0a76c36f4c16770ad356" id="r_a666540f03e7b0a76c36f4c16770ad356"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a666540f03e7b0a76c36f4c16770ad356">spiBegin</a> (<a class="el" href="../../de/ddc/classSdSpiConfig.xhtml">SdSpiConfig</a> spiConfig)</td></tr>
<tr class="separator:a666540f03e7b0a76c36f4c16770ad356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6acfca5a23337977d2e4436ab8ab39a" id="r_ac6acfca5a23337977d2e4436ab8ab39a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6acfca5a23337977d2e4436ab8ab39a">spiDeactivate</a> ()</td></tr>
<tr class="separator:ac6acfca5a23337977d2e4436ab8ab39a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0aba4ad9333f2c5d9e2087fe901293" id="r_aea0aba4ad9333f2c5d9e2087fe901293"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aea0aba4ad9333f2c5d9e2087fe901293">spiEnd</a> ()</td></tr>
<tr class="separator:aea0aba4ad9333f2c5d9e2087fe901293"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08363209d938db87521cca6a84146041" id="r_a08363209d938db87521cca6a84146041"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a08363209d938db87521cca6a84146041">spiReceive</a> ()</td></tr>
<tr class="separator:a08363209d938db87521cca6a84146041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9373760220f12a1b2ead655812801bd" id="r_aa9373760220f12a1b2ead655812801bd"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa9373760220f12a1b2ead655812801bd">spiReceive</a> (uint8_t *buf, size_t n)</td></tr>
<tr class="separator:aa9373760220f12a1b2ead655812801bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab311b9ad8a250f06afbe091f7abb118b" id="r_ab311b9ad8a250f06afbe091f7abb118b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab311b9ad8a250f06afbe091f7abb118b">spiSend</a> (uint8_t data)</td></tr>
<tr class="separator:ab311b9ad8a250f06afbe091f7abb118b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ccfff5de1249b2e796a5b34875e1295" id="r_a6ccfff5de1249b2e796a5b34875e1295"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ccfff5de1249b2e796a5b34875e1295">spiSend</a> (const uint8_t *buf, size_t n)</td></tr>
<tr class="separator:a6ccfff5de1249b2e796a5b34875e1295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a33a90afcd1527ba838a76517f83a0f" id="r_a8a33a90afcd1527ba838a76517f83a0f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a33a90afcd1527ba838a76517f83a0f">spiSetSckSpeed</a> (uint32_t maxSck)</td></tr>
<tr class="separator:a8a33a90afcd1527ba838a76517f83a0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e24da5925493acb9a0d56a3a6c6874d" id="r_a5e24da5925493acb9a0d56a3a6c6874d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e24da5925493acb9a0d56a3a6c6874d">initSharedSpiCard</a> ()</td></tr>
<tr class="separator:a5e24da5925493acb9a0d56a3a6c6874d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Attributs privés</h2></td></tr>
<tr class="memitem:a9e31aed6b851f296db19a88972f9f268" id="r_a9e31aed6b851f296db19a88972f9f268"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/de9/SdSpiArduinoDriver_8h.xhtml#a737a41f87fd0d1824d87d83a1f976c14">SdSpiDriver</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9e31aed6b851f296db19a88972f9f268">m_spiDriver</a></td></tr>
<tr class="separator:a9e31aed6b851f296db19a88972f9f268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a063cbb4e2b3bd78269b3240242cb8e36" id="r_a063cbb4e2b3bd78269b3240242cb8e36"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a063cbb4e2b3bd78269b3240242cb8e36">m_beginCalled</a></td></tr>
<tr class="separator:a063cbb4e2b3bd78269b3240242cb8e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ed867fe497c0f1103fc31a03e24574f" id="r_a4ed867fe497c0f1103fc31a03e24574f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d1f/SdFatConfig_8h.xhtml#a7a489fb14a59adf251794342604fc5ea">SdCsPin_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ed867fe497c0f1103fc31a03e24574f">m_csPin</a></td></tr>
<tr class="separator:a4ed867fe497c0f1103fc31a03e24574f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1d1e26750e62468f5c4055fcf5551c8" id="r_ad1d1e26750e62468f5c4055fcf5551c8"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad1d1e26750e62468f5c4055fcf5551c8">m_errorCode</a></td></tr>
<tr class="separator:ad1d1e26750e62468f5c4055fcf5551c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5aab17a0f9835f42e8bf93f0f507966" id="r_ac5aab17a0f9835f42e8bf93f0f507966"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac5aab17a0f9835f42e8bf93f0f507966">m_spiActive</a></td></tr>
<tr class="separator:ac5aab17a0f9835f42e8bf93f0f507966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0cdad3b0f36485a0ef2ef0314da95c" id="r_a8e0cdad3b0f36485a0ef2ef0314da95c"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8e0cdad3b0f36485a0ef2ef0314da95c">m_state</a></td></tr>
<tr class="separator:a8e0cdad3b0f36485a0ef2ef0314da95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a410ec3473cfd5b2240667752615a4fda" id="r_a410ec3473cfd5b2240667752615a4fda"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a410ec3473cfd5b2240667752615a4fda">m_status</a></td></tr>
<tr class="separator:a410ec3473cfd5b2240667752615a4fda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38808b7d185074822480a6147aeef3ae" id="r_a38808b7d185074822480a6147aeef3ae"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38808b7d185074822480a6147aeef3ae">m_type</a></td></tr>
<tr class="separator:a38808b7d185074822480a6147aeef3ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p>Raw access to SD and SDHC flash memory cards via shared SPI port. </p>
</div><h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="a9e98ff90dea57346c756e7f964a78300" name="a9e98ff90dea57346c756e7f964a78300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e98ff90dea57346c756e7f964a78300">&#9670;&#160;</a></span>SharedSpiCard()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SharedSpiCard::SharedSpiCard </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct an instance of <a class="el" href="../../d8/d7f/classSharedSpiCard.xhtml" title="Raw access to SD and SDHC flash memory cards via shared SPI port.">SharedSpiCard</a>. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9e98ff90dea57346c756e7f964a78300_cgraph.svg" width="470" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="aa02f8b70667f72bb8dadbfeb30727b8f" name="aa02f8b70667f72bb8dadbfeb30727b8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa02f8b70667f72bb8dadbfeb30727b8f">&#9670;&#160;</a></span>__attribute__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SharedSpiCard::__attribute__ </td>
          <td>(</td>
          <td class="paramtype">(<a class="el" href="#a747c3f0b962098cf0c097f3c4c2b4fd4">error</a>(&quot;use <a class="el" href="#ae005ead6dfdd65718da5a035dca82b39">sectorCount</a>()&quot;))&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0255d8d48155bc14798edb8414f04030" name="a0255d8d48155bc14798edb8414f04030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0255d8d48155bc14798edb8414f04030">&#9670;&#160;</a></span>begin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::begin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/ddc/classSdSpiConfig.xhtml">SdSpiConfig</a>&#160;</td>
          <td class="paramname"><em>spiConfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initialize the SD card. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">spiConfig</td><td>SPI card configuration. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0255d8d48155bc14798edb8414f04030_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0255d8d48155bc14798edb8414f04030_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a943e9bdc39d4410d443fbdf22fd10f31" name="a943e9bdc39d4410d443fbdf22fd10f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a943e9bdc39d4410d443fbdf22fd10f31">&#9670;&#160;</a></span>cardAcmd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::cardAcmd </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a943e9bdc39d4410d443fbdf22fd10f31_cgraph.svg" width="100%" height="573"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a943e9bdc39d4410d443fbdf22fd10f31_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a781d935c5802a22a5d4310a7d18c5596" name="a781d935c5802a22a5d4310a7d18c5596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a781d935c5802a22a5d4310a7d18c5596">&#9670;&#160;</a></span>cardCMD6()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::cardCMD6 </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>arg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>CMD6 Switch mode: Check Function Set Function. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">arg</td><td>CMD6 argument. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">status</td><td>return status data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a781d935c5802a22a5d4310a7d18c5596_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adda33199753fc2aec74fe317cbaabc06" name="adda33199753fc2aec74fe317cbaabc06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adda33199753fc2aec74fe317cbaabc06">&#9670;&#160;</a></span>cardCommand()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::cardCommand </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adda33199753fc2aec74fe317cbaabc06_cgraph.svg" width="100%" height="573"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adda33199753fc2aec74fe317cbaabc06_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9ab3c0bc923e828e66a5e15156cc0295" name="a9ab3c0bc923e828e66a5e15156cc0295"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ab3c0bc923e828e66a5e15156cc0295">&#9670;&#160;</a></span>end()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>End use of card </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9ab3c0bc923e828e66a5e15156cc0295_cgraph.svg" width="100%" height="570"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9ab3c0bc923e828e66a5e15156cc0295_icgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a47ecb042de6b3136bd47820864e3c127" name="a47ecb042de6b3136bd47820864e3c127"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47ecb042de6b3136bd47820864e3c127">&#9670;&#160;</a></span>erase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::erase </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstSector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lastSector</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase a range of sectors.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">firstSector</td><td>The address of the first sector in the range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lastSector</td><td>The address of the last sector in the range.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This function requests the SD card to do a flash erase for a range of sectors. The data on the card after an erase operation is either 0 or 1, depends on the card vendor. The card must support single sector erase.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a47ecb042de6b3136bd47820864e3c127_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a42f70c0bffce374e014a42efda0bce4e" name="a42f70c0bffce374e014a42efda0bce4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f70c0bffce374e014a42efda0bce4e">&#9670;&#160;</a></span>eraseSingleSectorEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::eraseSingleSectorEnable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determine if card supports single sector erase.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true is returned if single sector erase is supported. false is returned if single sector erase is not supported. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a42f70c0bffce374e014a42efda0bce4e_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a747c3f0b962098cf0c097f3c4c2b4fd4" name="a747c3f0b962098cf0c097f3c4c2b4fd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a747c3f0b962098cf0c097f3c4c2b4fd4">&#9670;&#160;</a></span>error()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::error </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set SD error code. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">code</td><td>value for error code. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a747c3f0b962098cf0c097f3c4c2b4fd4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aff338a5cece6d38c50f9516e6c31c0f6" name="aff338a5cece6d38c50f9516e6c31c0f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff338a5cece6d38c50f9516e6c31c0f6">&#9670;&#160;</a></span>errorCode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::errorCode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>code for the last error. See <a class="el" href="../../d4/da0/SdCardInfo_8h.xhtml" title="Definitions for SD cards.">SdCardInfo.h</a> for a list of error codes. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aff338a5cece6d38c50f9516e6c31c0f6_icgraph.svg" width="100%" height="514"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a3ae2be970123e148f1d35f61ac56984f" name="a3ae2be970123e148f1d35f61ac56984f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ae2be970123e148f1d35f61ac56984f">&#9670;&#160;</a></span>errorData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SharedSpiCard::errorData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>error data for last error. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a3ae2be970123e148f1d35f61ac56984f_icgraph.svg" width="100%" height="401"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="abe5ea1a28884a58ce2b7333bf03227ff" name="abe5ea1a28884a58ce2b7333bf03227ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe5ea1a28884a58ce2b7333bf03227ff">&#9670;&#160;</a></span>hasDedicatedSpi()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::hasDedicatedSpi </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>false for shared class. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_abe5ea1a28884a58ce2b7333bf03227ff_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5e24da5925493acb9a0d56a3a6c6874d" name="a5e24da5925493acb9a0d56a3a6c6874d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e24da5925493acb9a0d56a3a6c6874d">&#9670;&#160;</a></span>initSharedSpiCard()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::initSharedSpiCard </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a5e24da5925493acb9a0d56a3a6c6874d_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adffd2b7ebd53250fd96069f9bece875d" name="adffd2b7ebd53250fd96069f9bece875d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adffd2b7ebd53250fd96069f9bece875d">&#9670;&#160;</a></span>isBusy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::isBusy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check for busy. MISO low indicates the card is busy.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true if busy else false. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adffd2b7ebd53250fd96069f9bece875d_cgraph.svg" width="100%" height="529"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adffd2b7ebd53250fd96069f9bece875d_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa88f3d95f390d3ada8696efefc435305" name="aa88f3d95f390d3ada8696efefc435305"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa88f3d95f390d3ada8696efefc435305">&#9670;&#160;</a></span>isDedicatedSpi()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::isDedicatedSpi </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>false, can't be in dedicated state. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aa88f3d95f390d3ada8696efefc435305_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a04ecffa9c93d95a6c247293b42dc9512" name="a04ecffa9c93d95a6c247293b42dc9512"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04ecffa9c93d95a6c247293b42dc9512">&#9670;&#160;</a></span>readCID()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readCID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d9b/structcid__t.xhtml">cid_t</a> *&#160;</td>
          <td class="paramname"><em>cid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read a card's CID register. The CID contains card identification information such as Manufacturer ID, Product name, Product serial number and Manufacturing date.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">cid</td><td>pointer to area for returned data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a04ecffa9c93d95a6c247293b42dc9512_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa28eccbfb63a43aada4ec199da69a38c" name="aa28eccbfb63a43aada4ec199da69a38c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa28eccbfb63a43aada4ec199da69a38c">&#9670;&#160;</a></span>readCSD()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readCSD </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/ded/structcsd__t.xhtml">csd_t</a> *&#160;</td>
          <td class="paramname"><em>csd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read a card's CSD register. The CSD contains Card-Specific Data that provides information regarding access to the card's contents.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">csd</td><td>pointer to area for returned data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aa28eccbfb63a43aada4ec199da69a38c_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aa28eccbfb63a43aada4ec199da69a38c_icgraph.svg" width="100%" height="451"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="abeae3cdc162f24c2d450abe4e1ed8340" name="abeae3cdc162f24c2d450abe4e1ed8340"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abeae3cdc162f24c2d450abe4e1ed8340">&#9670;&#160;</a></span>readData() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readData </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read one data sector in a multiple sector read sequence</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Pointer to the location for the data to be read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_abeae3cdc162f24c2d450abe4e1ed8340_cgraph.svg" width="196" height="60"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_abeae3cdc162f24c2d450abe4e1ed8340_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a459121910aa0b3f15370e5ffcc70aa7d" name="a459121910aa0b3f15370e5ffcc70aa7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a459121910aa0b3f15370e5ffcc70aa7d">&#9670;&#160;</a></span>readData() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readData </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a459121910aa0b3f15370e5ffcc70aa7d_cgraph.svg" width="100%" height="491"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab59a333af583929c859fff6e018a7da5" name="ab59a333af583929c859fff6e018a7da5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab59a333af583929c859fff6e018a7da5">&#9670;&#160;</a></span>readOCR()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readOCR </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>ocr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read OCR register.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">ocr</td><td>Value of OCR register. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab59a333af583929c859fff6e018a7da5_cgraph.svg" width="100%" height="588"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9107af8380369d08cd2db4824a8aceda" name="a9107af8380369d08cd2db4824a8aceda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9107af8380369d08cd2db4824a8aceda">&#9670;&#160;</a></span>readRegister()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readRegister </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>read CID or CSR register </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9107af8380369d08cd2db4824a8aceda_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9107af8380369d08cd2db4824a8aceda_icgraph.svg" width="100%" height="451"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab57eba9e9714869949e688b44ce4319b" name="ab57eba9e9714869949e688b44ce4319b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab57eba9e9714869949e688b44ce4319b">&#9670;&#160;</a></span>readSCR()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readSCR </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/dac/structscr__t.xhtml">scr_t</a> *&#160;</td>
          <td class="paramname"><em>scr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read SCR register.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">scr</td><td>Value of SCR register. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab57eba9e9714869949e688b44ce4319b_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a67c9b6ecb4146c62875e36ce819b50bd" name="a67c9b6ecb4146c62875e36ce819b50bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c9b6ecb4146c62875e36ce819b50bd">&#9670;&#160;</a></span>readSDS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readSDS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/db0/structsds__t.xhtml">sds_t</a> *&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the 64 byte SD Status register. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">status</td><td>location for 64 status bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a67c9b6ecb4146c62875e36ce819b50bd_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a61d86f4092f8ddbc7339d7cbcf6f70c0" name="a61d86f4092f8ddbc7339d7cbcf6f70c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61d86f4092f8ddbc7339d7cbcf6f70c0">&#9670;&#160;</a></span>readSector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readSector </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read a 512 byte sector from an SD card.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be read. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Pointer to the location that will receive the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a61d86f4092f8ddbc7339d7cbcf6f70c0_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a61d86f4092f8ddbc7339d7cbcf6f70c0_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6145b8d16484f5b4a495bcbb54d3616e" name="a6145b8d16484f5b4a495bcbb54d3616e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6145b8d16484f5b4a495bcbb54d3616e">&#9670;&#160;</a></span>readSectors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readSectors </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ns</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read multiple 512 byte sectors from an SD card.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be read. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ns</td><td>Number of sectors to be read. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Pointer to the location that will receive the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a6145b8d16484f5b4a495bcbb54d3616e_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a6145b8d16484f5b4a495bcbb54d3616e_icgraph.svg" width="447" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0b1805d2eb0cd18141e8e180a967b816" name="a0b1805d2eb0cd18141e8e180a967b816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b1805d2eb0cd18141e8e180a967b816">&#9670;&#160;</a></span>readStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readStart </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start a read multiple sector sequence.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Address of first sector in sequence.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This function is used with <a class="el" href="#abeae3cdc162f24c2d450abe4e1ed8340">readData()</a> and <a class="el" href="#ab33ad2aefbb9cff905cad0879dffc78b">readStop()</a> for optimized multiple sector reads. SPI chipSelect must be low for the entire sequence.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0b1805d2eb0cd18141e8e180a967b816_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0b1805d2eb0cd18141e8e180a967b816_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ab33ad2aefbb9cff905cad0879dffc78b" name="ab33ad2aefbb9cff905cad0879dffc78b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab33ad2aefbb9cff905cad0879dffc78b">&#9670;&#160;</a></span>readStop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::readStop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>End a read multiple sectors sequence.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab33ad2aefbb9cff905cad0879dffc78b_cgraph.svg" width="100%" height="572"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab33ad2aefbb9cff905cad0879dffc78b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a3f089160d2ea9662c8c1f7a67f700ea1" name="a3f089160d2ea9662c8c1f7a67f700ea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f089160d2ea9662c8c1f7a67f700ea1">&#9670;&#160;</a></span>sdState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::sdState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>SD multi-sector read/write state </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a3f089160d2ea9662c8c1f7a67f700ea1_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae005ead6dfdd65718da5a035dca82b39" name="ae005ead6dfdd65718da5a035dca82b39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae005ead6dfdd65718da5a035dca82b39">&#9670;&#160;</a></span>sectorCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SharedSpiCard::sectorCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determine the size of an SD flash memory card.</p>
<dl class="section return"><dt>Renvoie</dt><dd>The number of 512 byte data sectors in the card or zero if an error occurs. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ae005ead6dfdd65718da5a035dca82b39_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ae005ead6dfdd65718da5a035dca82b39_icgraph.svg" width="636" height="138"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad80fc5a889428872085087ee865fe385" name="ad80fc5a889428872085087ee865fe385"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad80fc5a889428872085087ee865fe385">&#9670;&#160;</a></span>setDedicatedSpi()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::setDedicatedSpi </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set SPI sharing state </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>desired state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>false for shared card </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ad80fc5a889428872085087ee865fe385_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a69ee2fe49dfaeea2347d8a265806d2b6" name="a69ee2fe49dfaeea2347d8a265806d2b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69ee2fe49dfaeea2347d8a265806d2b6">&#9670;&#160;</a></span>spiActivate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiActivate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a69ee2fe49dfaeea2347d8a265806d2b6_cgraph.svg" width="406" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a69ee2fe49dfaeea2347d8a265806d2b6_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a666540f03e7b0a76c36f4c16770ad356" name="a666540f03e7b0a76c36f4c16770ad356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a666540f03e7b0a76c36f4c16770ad356">&#9670;&#160;</a></span>spiBegin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiBegin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/ddc/classSdSpiConfig.xhtml">SdSpiConfig</a>&#160;</td>
          <td class="paramname"><em>spiConfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a666540f03e7b0a76c36f4c16770ad356_cgraph.svg" width="388" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a666540f03e7b0a76c36f4c16770ad356_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ac6acfca5a23337977d2e4436ab8ab39a" name="ac6acfca5a23337977d2e4436ab8ab39a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6acfca5a23337977d2e4436ab8ab39a">&#9670;&#160;</a></span>spiDeactivate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiDeactivate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ac6acfca5a23337977d2e4436ab8ab39a_cgraph.svg" width="422" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ac6acfca5a23337977d2e4436ab8ab39a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aea0aba4ad9333f2c5d9e2087fe901293" name="aea0aba4ad9333f2c5d9e2087fe901293"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea0aba4ad9333f2c5d9e2087fe901293">&#9670;&#160;</a></span>spiEnd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aea0aba4ad9333f2c5d9e2087fe901293_cgraph.svg" width="407" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aea0aba4ad9333f2c5d9e2087fe901293_icgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a08363209d938db87521cca6a84146041" name="a08363209d938db87521cca6a84146041"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08363209d938db87521cca6a84146041">&#9670;&#160;</a></span>spiReceive() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::spiReceive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a08363209d938db87521cca6a84146041_cgraph.svg" width="403" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a08363209d938db87521cca6a84146041_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa9373760220f12a1b2ead655812801bd" name="aa9373760220f12a1b2ead655812801bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9373760220f12a1b2ead655812801bd">&#9670;&#160;</a></span>spiReceive() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::spiReceive </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aa9373760220f12a1b2ead655812801bd_cgraph.svg" width="403" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8c3088599862ff6e84ae79bfdf32aea8" name="a8c3088599862ff6e84ae79bfdf32aea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3088599862ff6e84ae79bfdf32aea8">&#9670;&#160;</a></span>spiSelect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiSelect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a8c3088599862ff6e84ae79bfdf32aea8_cgraph.svg" width="626" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a8c3088599862ff6e84ae79bfdf32aea8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a6ccfff5de1249b2e796a5b34875e1295" name="a6ccfff5de1249b2e796a5b34875e1295"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ccfff5de1249b2e796a5b34875e1295">&#9670;&#160;</a></span>spiSend() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiSend </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a6ccfff5de1249b2e796a5b34875e1295_cgraph.svg" width="383" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab311b9ad8a250f06afbe091f7abb118b" name="ab311b9ad8a250f06afbe091f7abb118b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab311b9ad8a250f06afbe091f7abb118b">&#9670;&#160;</a></span>spiSend() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiSend </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab311b9ad8a250f06afbe091f7abb118b_cgraph.svg" width="383" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab311b9ad8a250f06afbe091f7abb118b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8a33a90afcd1527ba838a76517f83a0f" name="a8a33a90afcd1527ba838a76517f83a0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a33a90afcd1527ba838a76517f83a0f">&#9670;&#160;</a></span>spiSetSckSpeed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiSetSckSpeed </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>maxSck</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a8a33a90afcd1527ba838a76517f83a0f_cgraph.svg" width="395" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a8a33a90afcd1527ba838a76517f83a0f_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aef2dfa72e8d5643c90720f9f8c6a4254" name="aef2dfa72e8d5643c90720f9f8c6a4254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef2dfa72e8d5643c90720f9f8c6a4254">&#9670;&#160;</a></span>spiStart()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aef2dfa72e8d5643c90720f9f8c6a4254_cgraph.svg" width="100%" height="424"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_aef2dfa72e8d5643c90720f9f8c6a4254_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a0f511c39c50055a4fc97e720933aee3a" name="a0f511c39c50055a4fc97e720933aee3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f511c39c50055a4fc97e720933aee3a">&#9670;&#160;</a></span>spiStop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiStop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0f511c39c50055a4fc97e720933aee3a_cgraph.svg" width="100%" height="424"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a0f511c39c50055a4fc97e720933aee3a_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ad06a3278372300987b97876cf598c114" name="ad06a3278372300987b97876cf598c114"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad06a3278372300987b97876cf598c114">&#9670;&#160;</a></span>spiUnselect()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::spiUnselect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ad06a3278372300987b97876cf598c114_cgraph.svg" width="643" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ad06a3278372300987b97876cf598c114_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a814184dd0bfb31127526bb3b2792f834" name="a814184dd0bfb31127526bb3b2792f834"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a814184dd0bfb31127526bb3b2792f834">&#9670;&#160;</a></span>stopTransfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::stopTransfer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>end a mult-sector transfer.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>

</div>
</div>
<a id="a2f181b3d6f27413a0f5ee883dfd94d87" name="a2f181b3d6f27413a0f5ee883dfd94d87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f181b3d6f27413a0f5ee883dfd94d87">&#9670;&#160;</a></span>syncDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::syncDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>success if sync successful. Not for user apps. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a2f181b3d6f27413a0f5ee883dfd94d87_cgraph.svg" width="100%" height="592"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a2f181b3d6f27413a0f5ee883dfd94d87_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7dac2190763d7b4b72163ed7131e8a87" name="a7dac2190763d7b4b72163ed7131e8a87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dac2190763d7b4b72163ed7131e8a87">&#9670;&#160;</a></span>type() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Return the card type: SD V1, SD V2 or SDHC/SDXC </p><dl class="section return"><dt>Renvoie</dt><dd>0 - SD V1, 1 - SD V2, or 3 - SDHC/SDXC. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a7dac2190763d7b4b72163ed7131e8a87_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5502780c57416fb9f274ca8797556121" name="a5502780c57416fb9f274ca8797556121"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5502780c57416fb9f274ca8797556121">&#9670;&#160;</a></span>type() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SharedSpiCard::type </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab3468397bb3b12d29dd2f31e45b3dcaf" name="ab3468397bb3b12d29dd2f31e45b3dcaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3468397bb3b12d29dd2f31e45b3dcaf">&#9670;&#160;</a></span>waitReady()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::waitReady </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>ms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab3468397bb3b12d29dd2f31e45b3dcaf_cgraph.svg" width="100%" height="376"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ab3468397bb3b12d29dd2f31e45b3dcaf_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5b6d7ad34f56d0d6a6c5059d920499ba" name="a5b6d7ad34f56d0d6a6c5059d920499ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b6d7ad34f56d0d6a6c5059d920499ba">&#9670;&#160;</a></span>writeData() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeData </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write one data sector in a multiple sector write sequence. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to the location of the data to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a5b6d7ad34f56d0d6a6c5059d920499ba_cgraph.svg" width="100%" height="510"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a5b6d7ad34f56d0d6a6c5059d920499ba_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a86417bd6707b926d43e3e32e5c6d65e0" name="a86417bd6707b926d43e3e32e5c6d65e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86417bd6707b926d43e3e32e5c6d65e0">&#9670;&#160;</a></span>writeData() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeData </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a86417bd6707b926d43e3e32e5c6d65e0_cgraph.svg" width="100%" height="483"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="adf2ce56ca0a56fe841fbdf75f7f3faee" name="adf2ce56ca0a56fe841fbdf75f7f3faee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf2ce56ca0a56fe841fbdf75f7f3faee">&#9670;&#160;</a></span>writeSector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeSector </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write a 512 byte sector to an SD card.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to the location of the data to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adf2ce56ca0a56fe841fbdf75f7f3faee_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_adf2ce56ca0a56fe841fbdf75f7f3faee_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9b734ef77cc5db4f1ecc9e0dc5809403" name="a9b734ef77cc5db4f1ecc9e0dc5809403"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b734ef77cc5db4f1ecc9e0dc5809403">&#9670;&#160;</a></span>writeSectors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeSectors </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>ns</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write multiple 512 byte sectors to an SD card.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ns</td><td>Number of sectors to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to the location of the data to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9b734ef77cc5db4f1ecc9e0dc5809403_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a9b734ef77cc5db4f1ecc9e0dc5809403_icgraph.svg" width="452" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1e1c0fd8fe452d1bcff9104d84eb9869" name="a1e1c0fd8fe452d1bcff9104d84eb9869"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e1c0fd8fe452d1bcff9104d84eb9869">&#9670;&#160;</a></span>writeStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeStart </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start a write multiple sectors sequence.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Address of first sector in sequence.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This function is used with <a class="el" href="#a5b6d7ad34f56d0d6a6c5059d920499ba">writeData()</a> and <a class="el" href="#ae9a34a573077e43e7c6028a16ae77fb3">writeStop()</a> for optimized multiple sector writes.</dd></dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a1e1c0fd8fe452d1bcff9104d84eb9869_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_a1e1c0fd8fe452d1bcff9104d84eb9869_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="ae9a34a573077e43e7c6028a16ae77fb3" name="ae9a34a573077e43e7c6028a16ae77fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9a34a573077e43e7c6028a16ae77fb3">&#9670;&#160;</a></span>writeStop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::writeStop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>End a write multiple sectors sequence.</p>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ae9a34a573077e43e7c6028a16ae77fb3_cgraph.svg" width="100%" height="529"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d8/d7f/classSharedSpiCard_ae9a34a573077e43e7c6028a16ae77fb3_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="a63fd0b86d2e248e43409e3e6743466fe" name="a63fd0b86d2e248e43409e3e6743466fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63fd0b86d2e248e43409e3e6743466fe">&#9670;&#160;</a></span>IDLE_STATE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t SharedSpiCard::IDLE_STATE = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>SD is in idle state </p>

</div>
</div>
<a id="a063cbb4e2b3bd78269b3240242cb8e36" name="a063cbb4e2b3bd78269b3240242cb8e36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a063cbb4e2b3bd78269b3240242cb8e36">&#9670;&#160;</a></span>m_beginCalled</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::m_beginCalled</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ed867fe497c0f1103fc31a03e24574f" name="a4ed867fe497c0f1103fc31a03e24574f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ed867fe497c0f1103fc31a03e24574f">&#9670;&#160;</a></span>m_csPin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d1f/SdFatConfig_8h.xhtml#a7a489fb14a59adf251794342604fc5ea">SdCsPin_t</a> SharedSpiCard::m_csPin</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad1d1e26750e62468f5c4055fcf5551c8" name="ad1d1e26750e62468f5c4055fcf5551c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1d1e26750e62468f5c4055fcf5551c8">&#9670;&#160;</a></span>m_errorCode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::m_errorCode</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5aab17a0f9835f42e8bf93f0f507966" name="ac5aab17a0f9835f42e8bf93f0f507966"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5aab17a0f9835f42e8bf93f0f507966">&#9670;&#160;</a></span>m_spiActive</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SharedSpiCard::m_spiActive</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9e31aed6b851f296db19a88972f9f268" name="a9e31aed6b851f296db19a88972f9f268"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e31aed6b851f296db19a88972f9f268">&#9670;&#160;</a></span>m_spiDriver</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/de9/SdSpiArduinoDriver_8h.xhtml#a737a41f87fd0d1824d87d83a1f976c14">SdSpiDriver</a> SharedSpiCard::m_spiDriver</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8e0cdad3b0f36485a0ef2ef0314da95c" name="a8e0cdad3b0f36485a0ef2ef0314da95c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e0cdad3b0f36485a0ef2ef0314da95c">&#9670;&#160;</a></span>m_state</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::m_state</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a410ec3473cfd5b2240667752615a4fda" name="a410ec3473cfd5b2240667752615a4fda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a410ec3473cfd5b2240667752615a4fda">&#9670;&#160;</a></span>m_status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::m_status</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a38808b7d185074822480a6147aeef3ae" name="a38808b7d185074822480a6147aeef3ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38808b7d185074822480a6147aeef3ae">&#9670;&#160;</a></span>m_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t SharedSpiCard::m_type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4343d76001e1bc7f2839437cc85e8485" name="a4343d76001e1bc7f2839437cc85e8485"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4343d76001e1bc7f2839437cc85e8485">&#9670;&#160;</a></span>READ_STATE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t SharedSpiCard::READ_STATE = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>SD is in multi-sector read state. </p>

</div>
</div>
<a id="a18beb14f1c6beb5d0a4372b5608354a1" name="a18beb14f1c6beb5d0a4372b5608354a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18beb14f1c6beb5d0a4372b5608354a1">&#9670;&#160;</a></span>WRITE_STATE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t SharedSpiCard::WRITE_STATE = 2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>SD is in multi-sector write state. </p>

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../d5/dc1/SdSpiCard_8h_source.xhtml">SdSpiCard.h</a></li>
<li><a class="el" href="../../d1/dd3/SdSpiCard_8cpp.xhtml">SdSpiCard.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/d7f/classSharedSpiCard.xhtml">SharedSpiCard</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
