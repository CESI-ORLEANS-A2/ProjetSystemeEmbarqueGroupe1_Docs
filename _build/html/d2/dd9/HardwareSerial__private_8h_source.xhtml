<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1:  Fichier source de HardwareSerial_private.h</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d2/dd9/HardwareSerial__private_8h_source.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">HardwareSerial_private.h</div></div>
</div><!--header-->
<div class="contents">
<a href="../../d2/dd9/HardwareSerial__private_8h.xhtml">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">  HardwareSerial_private.h - Hardware serial library for Wiring</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"></span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">  This library is free software; you can redistribute it and/or</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">  modify it under the terms of the GNU Lesser General Public</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">  License as published by the Free Software Foundation; either</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">  version 2.1 of the License, or (at your option) any later version.</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment"></span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">  This library is distributed in the hope that it will be useful,</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment">  Lesser General Public License for more details.</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment"></span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">  You should have received a copy of the GNU Lesser General Public</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">  License along with this library; if not, write to the Free Software</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment"></span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">  Modified 23 November 2006 by David A. Mellis</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment">  Modified 28 September 2010 by Mark Sproul</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">  Modified 14 August 2012 by Alarus</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">*/</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">#include &quot;<a class="code" href="../../d8/d2e/wiring__private_8h.xhtml">wiring_private.h</a>&quot;</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">// this next line disables the entire HardwareSerial.cpp, </span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">// this is so I can support Attiny series and any other chip without a uart</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="preprocessor">#if defined(HAVE_HWSERIAL0) || defined(HAVE_HWSERIAL1) || defined(HAVE_HWSERIAL2) || defined(HAVE_HWSERIAL3)</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">// Ensure that the various bit positions we use are available with a 0</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">// postfix, so we can always use the values for UART0 for all UARTs. The</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">// alternative, passing the various values for each UART to the</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">// HardwareSerial constructor also works, but makes the code bigger and</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">// slower.</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="preprocessor">#if !defined(TXC0)</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="preprocessor">#if defined(TXC)</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">// Some chips like ATmega8 don&#39;t have UPE, only PE. The other bits are</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="comment">// named as expected.</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#if !defined(UPE) &amp;&amp; defined(PE)</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define UPE PE</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="comment">// On ATmega8, the uart and its bits are not numbered, so there is no TXC0 etc.</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#define TXC0 TXC</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#define RXEN0 RXEN</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#define TXEN0 TXEN</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#define RXCIE0 RXCIE</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#define UDRIE0 UDRIE</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#define U2X0 U2X</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#define UPE0 UPE</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#define UDRE0 UDRE</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#elif defined(TXC1)</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="comment">// Some devices have uart1 but no uart0</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#define TXC0 TXC1</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="preprocessor">#define RXEN0 RXEN1</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="preprocessor">#define TXEN0 TXEN1</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span><span class="preprocessor">#define RXCIE0 RXCIE1</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="preprocessor">#define UDRIE0 UDRIE1</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="preprocessor">#define U2X0 U2X1</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="preprocessor">#define UPE0 UPE1</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="preprocessor">#define UDRE0 UDRE1</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="preprocessor">#error No UART found in HardwareSerial.cpp</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="preprocessor">#endif </span><span class="comment">// !defined TXC0</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="comment">// Check at compile time that it is really ok to use the bit positions of</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="comment">// UART0 for the other UARTs as well, in case these values ever get</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="comment">// changed for future hardware.</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="preprocessor">#if defined(TXC1) &amp;&amp; (TXC1 != TXC0 || RXEN1 != RXEN0 || RXCIE1 != RXCIE0 || \</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="preprocessor">              UDRIE1 != UDRIE0 || U2X1 != U2X0 || UPE1 != UPE0 || \</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="preprocessor">              UDRE1 != UDRE0)</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="preprocessor">#error &quot;Not all bit positions for UART1 are the same as for UART0&quot;</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="preprocessor">#if defined(TXC2) &amp;&amp; (TXC2 != TXC0 || RXEN2 != RXEN0 || RXCIE2 != RXCIE0 || \</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="preprocessor">              UDRIE2 != UDRIE0 || U2X2 != U2X0 || UPE2 != UPE0 || \</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="preprocessor">              UDRE2 != UDRE0)</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="preprocessor">#error &quot;Not all bit positions for UART2 are the same as for UART0&quot;</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="preprocessor">#if defined(TXC3) &amp;&amp; (TXC3 != TXC0 || RXEN3 != RXEN0 || RXCIE3 != RXCIE0 || \</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span><span class="preprocessor">              UDRIE3 != UDRIE0 || U3X3 != U3X0 || UPE3 != UPE0 || \</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="preprocessor">              UDRE3 != UDRE0)</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="preprocessor">#error &quot;Not all bit positions for UART3 are the same as for UART0&quot;</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="comment">// Constructors ////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><a class="code hl_function" href="../../dd/d56/classHardwareSerial.xhtml#a89894dd01eb368e1a9f16319c2a149ca">HardwareSerial::HardwareSerial</a>(</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">volatile</span> uint8_t *ubrrh, <span class="keyword">volatile</span> uint8_t *ubrrl,</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">volatile</span> uint8_t *ucsra, <span class="keyword">volatile</span> uint8_t *ucsrb,</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">volatile</span> uint8_t *ucsrc, <span class="keyword">volatile</span> uint8_t *udr) :</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    _ubrrh(ubrrh), _ubrrl(ubrrl),</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    _udr(udr),</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    _rx_buffer_head(0), _rx_buffer_tail(0),</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    _tx_buffer_head(0), _tx_buffer_tail(0)</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>{</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>}</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="comment">// Actual interrupt handlers //////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d56/classHardwareSerial.xhtml#a7c5fd965cba330e7b3cd0f547251c520">HardwareSerial::_rx_complete_irq</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>{</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordflow">if</span> (bit_is_clear(*<a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#a7c91aa54f46da6f596a30d1924d1f26b">_ucsra</a>, UPE0)) {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="comment">// No Parity error, read byte and store it in the buffer if there is</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    <span class="comment">// room</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> c = *<a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#a6b425110a45e5bc7db6d19cfbb6090ba">_udr</a>;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <a class="code hl_typedef" href="../../d7/d96/HardwareSerial_8h.xhtml#a335e37d0726278844b068d565a4e66b7">rx_buffer_index_t</a> i = (<span class="keywordtype">unsigned</span> int)(<a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#ac6fe1f875521caeb248fa9b477338ff3">_rx_buffer_head</a> + 1) % <a class="code hl_define" href="../../d7/d96/HardwareSerial_8h.xhtml#aba0ceec384cf3acb51e0d6f45f31379c">SERIAL_RX_BUFFER_SIZE</a>;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <span class="comment">// if we should be storing the received character into the location</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="comment">// just before the tail (meaning that the head would advance to the</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="comment">// current location of the tail), we&#39;re about to overflow the buffer</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="comment">// and so we don&#39;t write the character or advance the head.</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keywordflow">if</span> (i != <a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#a891eab42df821ab76c2a273e0a78195e">_rx_buffer_tail</a>) {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      <a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#a3e915f174853e1acdfbacaea53f14d09">_rx_buffer</a>[<a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#ac6fe1f875521caeb248fa9b477338ff3">_rx_buffer_head</a>] = c;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>      <a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#ac6fe1f875521caeb248fa9b477338ff3">_rx_buffer_head</a> = i;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    }</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="comment">// Parity error, read byte but discard it</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    *<a class="code hl_variable" href="../../dd/d56/classHardwareSerial.xhtml#a6b425110a45e5bc7db6d19cfbb6090ba">_udr</a>;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  };</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>}</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="preprocessor">#endif </span><span class="comment">// whole file</span></div>
<div class="ttc" id="aHardwareSerial_8h_xhtml_a335e37d0726278844b068d565a4e66b7"><div class="ttname"><a href="../../d7/d96/HardwareSerial_8h.xhtml#a335e37d0726278844b068d565a4e66b7">rx_buffer_index_t</a></div><div class="ttdeci">uint8_t rx_buffer_index_t</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:64</div></div>
<div class="ttc" id="aHardwareSerial_8h_xhtml_aba0ceec384cf3acb51e0d6f45f31379c"><div class="ttname"><a href="../../d7/d96/HardwareSerial_8h.xhtml#aba0ceec384cf3acb51e0d6f45f31379c">SERIAL_RX_BUFFER_SIZE</a></div><div class="ttdeci">#define SERIAL_RX_BUFFER_SIZE</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:51</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a3e915f174853e1acdfbacaea53f14d09"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a3e915f174853e1acdfbacaea53f14d09">HardwareSerial::_rx_buffer</a></div><div class="ttdeci">unsigned char _rx_buffer[SERIAL_RX_BUFFER_SIZE]</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:113</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a6b425110a45e5bc7db6d19cfbb6090ba"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a6b425110a45e5bc7db6d19cfbb6090ba">HardwareSerial::_udr</a></div><div class="ttdeci">volatile uint8_t *const _udr</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:101</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a7c5fd965cba330e7b3cd0f547251c520"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a7c5fd965cba330e7b3cd0f547251c520">HardwareSerial::_rx_complete_irq</a></div><div class="ttdeci">void _rx_complete_irq(void)</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a7c91aa54f46da6f596a30d1924d1f26b"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a7c91aa54f46da6f596a30d1924d1f26b">HardwareSerial::_ucsra</a></div><div class="ttdeci">volatile uint8_t *const _ucsra</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:98</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a891eab42df821ab76c2a273e0a78195e"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a891eab42df821ab76c2a273e0a78195e">HardwareSerial::_rx_buffer_tail</a></div><div class="ttdeci">volatile rx_buffer_index_t _rx_buffer_tail</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:106</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_a89894dd01eb368e1a9f16319c2a149ca"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#a89894dd01eb368e1a9f16319c2a149ca">HardwareSerial::HardwareSerial</a></div><div class="ttdeci">HardwareSerial(volatile uint8_t *ubrrh, volatile uint8_t *ubrrl, volatile uint8_t *ucsra, volatile uint8_t *ucsrb, volatile uint8_t *ucsrc, volatile uint8_t *udr)</div></div>
<div class="ttc" id="aclassHardwareSerial_xhtml_ac6fe1f875521caeb248fa9b477338ff3"><div class="ttname"><a href="../../dd/d56/classHardwareSerial.xhtml#ac6fe1f875521caeb248fa9b477338ff3">HardwareSerial::_rx_buffer_head</a></div><div class="ttdeci">volatile rx_buffer_index_t _rx_buffer_head</div><div class="ttdef"><b>Definition</b> HardwareSerial.h:105</div></div>
<div class="ttc" id="awiring__private_8h_xhtml"><div class="ttname"><a href="../../d8/d2e/wiring__private_8h.xhtml">wiring_private.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_6719ab1f1f7655efc2fa43f7eb574fd1.xhtml">libs</a></li><li class="navelem"><a class="el" href="../../dir_650b651c4fc0af5fb7ffad415ecb503f.xhtml">Arduino_AVR</a></li><li class="navelem"><a class="el" href="../../d2/dd9/HardwareSerial__private_8h.xhtml">HardwareSerial_private.h</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
