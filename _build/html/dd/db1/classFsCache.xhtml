<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Station_Méteo_Groupe_1: Référence de la classe FsCache</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Station_Méteo_Groupe_1<span id="projectnumber">&#160;v0.0.1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('dd/db1/classFsCache.xhtml','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Fonctions membres publiques</a> &#124;
<a href="#pub-static-attribs">Attributs publics statiques</a> &#124;
<a href="#pri-attribs">Attributs privés</a> &#124;
<a href="../../da/db0/classFsCache-members.xhtml">Liste de tous les membres</a>  </div>
  <div class="headertitle"><div class="title">Référence de la classe FsCache</div></div>
</div><!--header-->
<div class="contents">

<p>Sector cache.  
 <a href="#details">Plus de détails...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/df7/FsCache_8h_source.xhtml">FsCache.h</a>&gt;</code></p>
<div class="dynheader">
Graphe de collaboration de FsCache:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d2/dbb/classFsCache__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Fonctions membres publiques</h2></td></tr>
<tr class="memitem:ac1ba5f5bcb9fb9e017a5355cb0acb216" id="r_ac1ba5f5bcb9fb9e017a5355cb0acb216"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac1ba5f5bcb9fb9e017a5355cb0acb216">FsCache</a> ()</td></tr>
<tr class="separator:ac1ba5f5bcb9fb9e017a5355cb0acb216"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed103e18beeae07a930ccce69490cfcc" id="r_aed103e18beeae07a930ccce69490cfcc"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aed103e18beeae07a930ccce69490cfcc">cacheBuffer</a> ()</td></tr>
<tr class="separator:aed103e18beeae07a930ccce69490cfcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdfa349477d43542829c4d58b355efa6" id="r_abdfa349477d43542829c4d58b355efa6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abdfa349477d43542829c4d58b355efa6">cacheSafeRead</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, uint8_t *dst)</td></tr>
<tr class="separator:abdfa349477d43542829c4d58b355efa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e4acbeaa5a438f0f51ae415db7bc89" id="r_aa0e4acbeaa5a438f0f51ae415db7bc89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa0e4acbeaa5a438f0f51ae415db7bc89">cacheSafeRead</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, uint8_t *dst, size_t count)</td></tr>
<tr class="separator:aa0e4acbeaa5a438f0f51ae415db7bc89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f4dbc38bec3bb67e8a00ebcb6fd1c81" id="r_a9f4dbc38bec3bb67e8a00ebcb6fd1c81"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f4dbc38bec3bb67e8a00ebcb6fd1c81">cacheSafeWrite</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, const uint8_t *src)</td></tr>
<tr class="separator:a9f4dbc38bec3bb67e8a00ebcb6fd1c81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab98f8564c715a9b081587c4ae8d343cc" id="r_ab98f8564c715a9b081587c4ae8d343cc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab98f8564c715a9b081587c4ae8d343cc">cacheSafeWrite</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, const uint8_t *src, size_t count)</td></tr>
<tr class="separator:ab98f8564c715a9b081587c4ae8d343cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f06585b0a7d2646b6e375e618591d49" id="r_a1f06585b0a7d2646b6e375e618591d49"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1f06585b0a7d2646b6e375e618591d49">clear</a> ()</td></tr>
<tr class="separator:a1f06585b0a7d2646b6e375e618591d49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50f564561a2db190280769d4641147b" id="r_af50f564561a2db190280769d4641147b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af50f564561a2db190280769d4641147b">dirty</a> ()</td></tr>
<tr class="separator:af50f564561a2db190280769d4641147b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56724bd91ce82c962b7b6002185d01d3" id="r_a56724bd91ce82c962b7b6002185d01d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56724bd91ce82c962b7b6002185d01d3">init</a> (<a class="el" href="../../d8/d4c/FsBlockDevice_8h.xhtml#a129378d5231b132338fe06a03e7671ad">FsBlockDevice</a> *blockDev)</td></tr>
<tr class="separator:a56724bd91ce82c962b7b6002185d01d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a963ea866ca2a9c4f63afd57cf287733d" id="r_a963ea866ca2a9c4f63afd57cf287733d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a963ea866ca2a9c4f63afd57cf287733d">invalidate</a> ()</td></tr>
<tr class="separator:a963ea866ca2a9c4f63afd57cf287733d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d9880fe717b35c3dd46a2faf5172371" id="r_a9d9880fe717b35c3dd46a2faf5172371"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d9880fe717b35c3dd46a2faf5172371">isCached</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>) const</td></tr>
<tr class="separator:a9d9880fe717b35c3dd46a2faf5172371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65201542fbb006396a42ccfd90814c60" id="r_a65201542fbb006396a42ccfd90814c60"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a65201542fbb006396a42ccfd90814c60">isCached</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, size_t count)</td></tr>
<tr class="separator:a65201542fbb006396a42ccfd90814c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22f4284aefd18f569d962d37f4a5db70" id="r_a22f4284aefd18f569d962d37f4a5db70"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22f4284aefd18f569d962d37f4a5db70">isDirty</a> ()</td></tr>
<tr class="separator:a22f4284aefd18f569d962d37f4a5db70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c11f064a2ce0a380f522392f09d63cb" id="r_a8c11f064a2ce0a380f522392f09d63cb"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c11f064a2ce0a380f522392f09d63cb">prepare</a> (uint32_t <a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a>, uint8_t option)</td></tr>
<tr class="separator:a8c11f064a2ce0a380f522392f09d63cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b90e145400de8687d9f34536b134130" id="r_a5b90e145400de8687d9f34536b134130"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5b90e145400de8687d9f34536b134130">sector</a> ()</td></tr>
<tr class="separator:a5b90e145400de8687d9f34536b134130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e91f8d006b8ba521805bb3bc6e83e6" id="r_a84e91f8d006b8ba521805bb3bc6e83e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84e91f8d006b8ba521805bb3bc6e83e6">setMirrorOffset</a> (uint32_t offset)</td></tr>
<tr class="separator:a84e91f8d006b8ba521805bb3bc6e83e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a2c8fb432d7b7590ebb43200ca21893" id="r_a5a2c8fb432d7b7590ebb43200ca21893"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5a2c8fb432d7b7590ebb43200ca21893">sync</a> ()</td></tr>
<tr class="separator:a5a2c8fb432d7b7590ebb43200ca21893"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Attributs publics statiques</h2></td></tr>
<tr class="memitem:a9d83a0401f452c0572c4c4f869b698ab" id="r_a9d83a0401f452c0572c4c4f869b698ab"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d83a0401f452c0572c4c4f869b698ab">CACHE_STATUS_DIRTY</a> = 1</td></tr>
<tr class="separator:a9d83a0401f452c0572c4c4f869b698ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aee9d706e0f6abca522ee893e7a6049" id="r_a9aee9d706e0f6abca522ee893e7a6049"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9aee9d706e0f6abca522ee893e7a6049">CACHE_STATUS_MIRROR_FAT</a> = 2</td></tr>
<tr class="separator:a9aee9d706e0f6abca522ee893e7a6049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb6b6426373bb591f027ac29eca4bacb" id="r_abb6b6426373bb591f027ac29eca4bacb"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb6b6426373bb591f027ac29eca4bacb">CACHE_STATUS_MASK</a></td></tr>
<tr class="separator:abb6b6426373bb591f027ac29eca4bacb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab694436995afb87d6e31693b47811243" id="r_ab694436995afb87d6e31693b47811243"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab694436995afb87d6e31693b47811243">CACHE_OPTION_NO_READ</a> = 4</td></tr>
<tr class="separator:ab694436995afb87d6e31693b47811243"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1df1d63f86fcf36e1ae08a48a05ead8b" id="r_a1df1d63f86fcf36e1ae08a48a05ead8b"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1df1d63f86fcf36e1ae08a48a05ead8b">CACHE_FOR_READ</a> = 0</td></tr>
<tr class="separator:a1df1d63f86fcf36e1ae08a48a05ead8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade321e6538ffc77c7f36ea200decaa6f" id="r_ade321e6538ffc77c7f36ea200decaa6f"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ade321e6538ffc77c7f36ea200decaa6f">CACHE_FOR_WRITE</a> = <a class="el" href="#a9d83a0401f452c0572c4c4f869b698ab">CACHE_STATUS_DIRTY</a></td></tr>
<tr class="separator:ade321e6538ffc77c7f36ea200decaa6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae960459db6fda0de3d67768d3b59331d" id="r_ae960459db6fda0de3d67768d3b59331d"><td class="memItemLeft" align="right" valign="top">static const uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae960459db6fda0de3d67768d3b59331d">CACHE_RESERVE_FOR_WRITE</a></td></tr>
<tr class="separator:ae960459db6fda0de3d67768d3b59331d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Attributs privés</h2></td></tr>
<tr class="memitem:a0638a314a5456e3535ec57c25c35cb49" id="r_a0638a314a5456e3535ec57c25c35cb49"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0638a314a5456e3535ec57c25c35cb49">m_status</a></td></tr>
<tr class="separator:a0638a314a5456e3535ec57c25c35cb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ba998759665306f7c8745f52c4f8015" id="r_a8ba998759665306f7c8745f52c4f8015"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/d4c/FsBlockDevice_8h.xhtml#a129378d5231b132338fe06a03e7671ad">FsBlockDevice</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8ba998759665306f7c8745f52c4f8015">m_blockDev</a></td></tr>
<tr class="separator:a8ba998759665306f7c8745f52c4f8015"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435caa2a11bf798ea873e4baa93cfdbb" id="r_a435caa2a11bf798ea873e4baa93cfdbb"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a435caa2a11bf798ea873e4baa93cfdbb">m_sector</a></td></tr>
<tr class="separator:a435caa2a11bf798ea873e4baa93cfdbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4f4c6f83426487e159e7ba3f1758bd" id="r_aec4f4c6f83426487e159e7ba3f1758bd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec4f4c6f83426487e159e7ba3f1758bd">m_mirrorOffset</a></td></tr>
<tr class="separator:aec4f4c6f83426487e159e7ba3f1758bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a915e90145cf2b709c2093e571341efc7" id="r_a915e90145cf2b709c2093e571341efc7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a915e90145cf2b709c2093e571341efc7">m_buffer</a> [512]</td></tr>
<tr class="separator:a915e90145cf2b709c2093e571341efc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Description détaillée</h2>
<div class="textblock"><p>Sector cache. </p>
</div><h2 class="groupheader">Documentation des constructeurs et destructeur</h2>
<a id="ac1ba5f5bcb9fb9e017a5355cb0acb216" name="ac1ba5f5bcb9fb9e017a5355cb0acb216"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1ba5f5bcb9fb9e017a5355cb0acb216">&#9670;&#160;</a></span>FsCache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">FsCache::FsCache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cobstructor. </p>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_ac1ba5f5bcb9fb9e017a5355cb0acb216_cgraph.svg" width="242" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des fonctions membres</h2>
<a id="aed103e18beeae07a930ccce69490cfcc" name="aed103e18beeae07a930ccce69490cfcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed103e18beeae07a930ccce69490cfcc">&#9670;&#160;</a></span>cacheBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * FsCache::cacheBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Cache buffer address. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_aed103e18beeae07a930ccce69490cfcc_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="abdfa349477d43542829c4d58b355efa6" name="abdfa349477d43542829c4d58b355efa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdfa349477d43542829c4d58b355efa6">&#9670;&#160;</a></span>cacheSafeRead() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::cacheSafeRead </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache safe read of a sector.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be read. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Pointer to the location that will receive the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_abdfa349477d43542829c4d58b355efa6_cgraph.svg" width="100%" height="595"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_abdfa349477d43542829c4d58b355efa6_icgraph.svg" width="100%" height="465"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aa0e4acbeaa5a438f0f51ae415db7bc89" name="aa0e4acbeaa5a438f0f51ae415db7bc89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0e4acbeaa5a438f0f51ae415db7bc89">&#9670;&#160;</a></span>cacheSafeRead() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::cacheSafeRead </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache safe read of multiple sectors.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be read. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of sectors to be read. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dst</td><td>Pointer to the location that will receive the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_aa0e4acbeaa5a438f0f51ae415db7bc89_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9f4dbc38bec3bb67e8a00ebcb6fd1c81" name="a9f4dbc38bec3bb67e8a00ebcb6fd1c81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f4dbc38bec3bb67e8a00ebcb6fd1c81">&#9670;&#160;</a></span>cacheSafeWrite() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::cacheSafeWrite </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache safe write of a sectors.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to the location of the data to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a9f4dbc38bec3bb67e8a00ebcb6fd1c81_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a9f4dbc38bec3bb67e8a00ebcb6fd1c81_icgraph.svg" width="620" height="215"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab98f8564c715a9b081587c4ae8d343cc" name="ab98f8564c715a9b081587c4ae8d343cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab98f8564c715a9b081587c4ae8d343cc">&#9670;&#160;</a></span>cacheSafeWrite() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::cacheSafeWrite </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache safe write of multiple sectors.</p>
<dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Logical sector to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Pointer to the location of the data to be written. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of sectors to be written. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_ab98f8564c715a9b081587c4ae8d343cc_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a1f06585b0a7d2646b6e375e618591d49" name="a1f06585b0a7d2646b6e375e618591d49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f06585b0a7d2646b6e375e618591d49">&#9670;&#160;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * FsCache::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Clear the cache and returns a pointer to the cache. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a1f06585b0a7d2646b6e375e618591d49_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a1f06585b0a7d2646b6e375e618591d49_icgraph.svg" width="558" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="af50f564561a2db190280769d4641147b" name="af50f564561a2db190280769d4641147b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af50f564561a2db190280769d4641147b">&#9670;&#160;</a></span>dirty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsCache::dirty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set current sector dirty. </p>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_af50f564561a2db190280769d4641147b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a56724bd91ce82c962b7b6002185d01d3" name="a56724bd91ce82c962b7b6002185d01d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56724bd91ce82c962b7b6002185d01d3">&#9670;&#160;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsCache::init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/d4c/FsBlockDevice_8h.xhtml#a129378d5231b132338fe06a03e7671ad">FsBlockDevice</a> *&#160;</td>
          <td class="paramname"><em>blockDev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize the cache. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blockDev</td><td>Block device for this cache. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a56724bd91ce82c962b7b6002185d01d3_cgraph.svg" width="316" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a56724bd91ce82c962b7b6002185d01d3_icgraph.svg" width="532" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a963ea866ca2a9c4f63afd57cf287733d" name="a963ea866ca2a9c4f63afd57cf287733d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a963ea866ca2a9c4f63afd57cf287733d">&#9670;&#160;</a></span>invalidate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsCache::invalidate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Invalidate current cache sector. </p>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a963ea866ca2a9c4f63afd57cf287733d_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a9d9880fe717b35c3dd46a2faf5172371" name="a9d9880fe717b35c3dd46a2faf5172371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d9880fe717b35c3dd46a2faf5172371">&#9670;&#160;</a></span>isCached() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::isCached </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check if a sector is in the cache. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Sector to checked. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true if the sector is cached. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a9d9880fe717b35c3dd46a2faf5172371_cgraph.svg" width="328" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a9d9880fe717b35c3dd46a2faf5172371_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a65201542fbb006396a42ccfd90814c60" name="a65201542fbb006396a42ccfd90814c60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65201542fbb006396a42ccfd90814c60">&#9670;&#160;</a></span>isCached() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::isCached </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check if the cache contains a sector from a range. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Start sector of the range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of sectors in the range. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>true if a sector in the range is cached. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a65201542fbb006396a42ccfd90814c60_cgraph.svg" width="328" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a22f4284aefd18f569d962d37f4a5db70" name="a22f4284aefd18f569d962d37f4a5db70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22f4284aefd18f569d962d37f4a5db70">&#9670;&#160;</a></span>isDirty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::isDirty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>dirty status </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a22f4284aefd18f569d962d37f4a5db70_icgraph.svg" width="100%" height="364"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8c11f064a2ce0a380f522392f09d63cb" name="a8c11f064a2ce0a380f522392f09d63cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c11f064a2ce0a380f522392f09d63cb">&#9670;&#160;</a></span>prepare()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t * FsCache::prepare </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Prepare cache to access sector. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sector</td><td>Sector to read. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">option</td><td>mode for cached sector. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Renvoie</dt><dd>Address of cached sector. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a8c11f064a2ce0a380f522392f09d63cb_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a8c11f064a2ce0a380f522392f09d63cb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5b90e145400de8687d9f34536b134130" name="a5b90e145400de8687d9f34536b134130"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b90e145400de8687d9f34536b134130">&#9670;&#160;</a></span>sector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsCache::sector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Renvoie</dt><dd>Logical sector number for cached sector. </dd></dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a5b90e145400de8687d9f34536b134130_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a84e91f8d006b8ba521805bb3bc6e83e6" name="a84e91f8d006b8ba521805bb3bc6e83e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e91f8d006b8ba521805bb3bc6e83e6">&#9670;&#160;</a></span>setMirrorOffset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FsCache::setMirrorOffset </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the offset to the second FAT for mirroring. </p><dl class="params"><dt>Paramètres</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>Sector offset to second FAT. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a84e91f8d006b8ba521805bb3bc6e83e6_icgraph.svg" width="366" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a5a2c8fb432d7b7590ebb43200ca21893" name="a5a2c8fb432d7b7590ebb43200ca21893"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a2c8fb432d7b7590ebb43200ca21893">&#9670;&#160;</a></span>sync()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FsCache::sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write current sector if dirty. </p><dl class="section return"><dt>Renvoie</dt><dd>true for success or false for failure. </dd></dl>
<div class="dynheader">
Voici le graphe d'appel pour cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a5a2c8fb432d7b7590ebb43200ca21893_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Voici le graphe des appelants de cette fonction :</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../dd/db1/classFsCache_a5a2c8fb432d7b7590ebb43200ca21893_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Documentation des données membres</h2>
<a id="a1df1d63f86fcf36e1ae08a48a05ead8b" name="a1df1d63f86fcf36e1ae08a48a05ead8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1df1d63f86fcf36e1ae08a48a05ead8b">&#9670;&#160;</a></span>CACHE_FOR_READ</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_FOR_READ = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache sector for read. </p>

</div>
</div>
<a id="ade321e6538ffc77c7f36ea200decaa6f" name="ade321e6538ffc77c7f36ea200decaa6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade321e6538ffc77c7f36ea200decaa6f">&#9670;&#160;</a></span>CACHE_FOR_WRITE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_FOR_WRITE = <a class="el" href="#a9d83a0401f452c0572c4c4f869b698ab">CACHE_STATUS_DIRTY</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cache sector for write. </p>

</div>
</div>
<a id="ab694436995afb87d6e31693b47811243" name="ab694436995afb87d6e31693b47811243"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab694436995afb87d6e31693b47811243">&#9670;&#160;</a></span>CACHE_OPTION_NO_READ</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_OPTION_NO_READ = 4</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sync existing sector but do not read new sector. </p>

</div>
</div>
<a id="ae960459db6fda0de3d67768d3b59331d" name="ae960459db6fda0de3d67768d3b59331d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae960459db6fda0de3d67768d3b59331d">&#9670;&#160;</a></span>CACHE_RESERVE_FOR_WRITE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_RESERVE_FOR_WRITE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Valeur initiale :</b><div class="fragment"><div class="line">=</div>
<div class="line">      <a class="code hl_variable" href="#a9d83a0401f452c0572c4c4f869b698ab">CACHE_STATUS_DIRTY</a> | <a class="code hl_variable" href="#ab694436995afb87d6e31693b47811243">CACHE_OPTION_NO_READ</a></div>
<div class="ttc" id="aclassFsCache_xhtml_a9d83a0401f452c0572c4c4f869b698ab"><div class="ttname"><a href="#a9d83a0401f452c0572c4c4f869b698ab">FsCache::CACHE_STATUS_DIRTY</a></div><div class="ttdeci">static const uint8_t CACHE_STATUS_DIRTY</div><div class="ttdef"><b>Definition</b> FsCache.h:40</div></div>
<div class="ttc" id="aclassFsCache_xhtml_ab694436995afb87d6e31693b47811243"><div class="ttname"><a href="#ab694436995afb87d6e31693b47811243">FsCache::CACHE_OPTION_NO_READ</a></div><div class="ttdeci">static const uint8_t CACHE_OPTION_NO_READ</div><div class="ttdef"><b>Definition</b> FsCache.h:47</div></div>
</div><!-- fragment --><p>Reserve cache sector for write - do not read from sector device. </p>

</div>
</div>
<a id="a9d83a0401f452c0572c4c4f869b698ab" name="a9d83a0401f452c0572c4c4f869b698ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d83a0401f452c0572c4c4f869b698ab">&#9670;&#160;</a></span>CACHE_STATUS_DIRTY</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_STATUS_DIRTY = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cached sector is dirty </p>

</div>
</div>
<a id="abb6b6426373bb591f027ac29eca4bacb" name="abb6b6426373bb591f027ac29eca4bacb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb6b6426373bb591f027ac29eca4bacb">&#9670;&#160;</a></span>CACHE_STATUS_MASK</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_STATUS_MASK</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Valeur initiale :</b><div class="fragment"><div class="line">=</div>
<div class="line">      <a class="code hl_variable" href="#a9d83a0401f452c0572c4c4f869b698ab">CACHE_STATUS_DIRTY</a> | <a class="code hl_variable" href="#a9aee9d706e0f6abca522ee893e7a6049">CACHE_STATUS_MIRROR_FAT</a></div>
<div class="ttc" id="aclassFsCache_xhtml_a9aee9d706e0f6abca522ee893e7a6049"><div class="ttname"><a href="#a9aee9d706e0f6abca522ee893e7a6049">FsCache::CACHE_STATUS_MIRROR_FAT</a></div><div class="ttdeci">static const uint8_t CACHE_STATUS_MIRROR_FAT</div><div class="ttdef"><b>Definition</b> FsCache.h:42</div></div>
</div><!-- fragment --><p>Cache sector status bits </p>

</div>
</div>
<a id="a9aee9d706e0f6abca522ee893e7a6049" name="a9aee9d706e0f6abca522ee893e7a6049"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aee9d706e0f6abca522ee893e7a6049">&#9670;&#160;</a></span>CACHE_STATUS_MIRROR_FAT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint8_t FsCache::CACHE_STATUS_MIRROR_FAT = 2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cashed sector is FAT entry and must be mirrored in second FAT. </p>

</div>
</div>
<a id="a8ba998759665306f7c8745f52c4f8015" name="a8ba998759665306f7c8745f52c4f8015"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ba998759665306f7c8745f52c4f8015">&#9670;&#160;</a></span>m_blockDev</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/d4c/FsBlockDevice_8h.xhtml#a129378d5231b132338fe06a03e7671ad">FsBlockDevice</a>* FsCache::m_blockDev</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a915e90145cf2b709c2093e571341efc7" name="a915e90145cf2b709c2093e571341efc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a915e90145cf2b709c2093e571341efc7">&#9670;&#160;</a></span>m_buffer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FsCache::m_buffer[512]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec4f4c6f83426487e159e7ba3f1758bd" name="aec4f4c6f83426487e159e7ba3f1758bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec4f4c6f83426487e159e7ba3f1758bd">&#9670;&#160;</a></span>m_mirrorOffset</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsCache::m_mirrorOffset</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a435caa2a11bf798ea873e4baa93cfdbb" name="a435caa2a11bf798ea873e4baa93cfdbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435caa2a11bf798ea873e4baa93cfdbb">&#9670;&#160;</a></span>m_sector</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t FsCache::m_sector</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0638a314a5456e3535ec57c25c35cb49" name="a0638a314a5456e3535ec57c25c35cb49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0638a314a5456e3535ec57c25c35cb49">&#9670;&#160;</a></span>m_status</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t FsCache::m_status</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>La documentation de cette classe a été générée à partir des fichiers suivants :<ul>
<li><a class="el" href="../../d2/df7/FsCache_8h_source.xhtml">FsCache.h</a></li>
<li><a class="el" href="../../dc/dc8/FsCache_8cpp.xhtml">FsCache.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/db1/classFsCache.xhtml">FsCache</a></li>
    <li class="footer">Généré par <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
